{"version":3,"sources":["views/components/Icon.js","store/state.js","views/utils/pixiUtils.js","views/utils/common.js","store/reducer.js","store/index.js","store/action.js","views/ToolBar/features/UploadImage/styles.js","views/ToolBar/features/UploadImage/index.js","views/ToolBar/features/Paste.js","views/ToolBar/features/Parent.js","views/ToolBar/features/Resize.js","views/ToolBar/features/Help.js","views/ToolBar/features/Create.js","views/ToolBar/features/ColorChoose/styles.js","views/ToolBar/features/ColorChoose/index.js","views/Setting/Property/Component/PRE.js","views/ToolBar/features/Finish/FinishBySave/styles.js","views/ToolBar/features/Finish/FinishBySave/index.js","views/ToolBar/features/Finish/styles.js","views/ToolBar/features/Finish/index.js","views/components/LabelInput/styles.js","views/components/LabelInput/index.js","views/ToolBar/styles.js","views/ToolBar/index.js","views/Setting/DataTree/styles.js","views/Setting/DataTree/index.js","views/Setting/Property/Track/styles.js","views/Setting/Property/Track/index.js","views/components/SelectNodeFromTree/styles.js","views/components/SelectNodeFromTree/index.js","views/Setting/Property/Chip/ChipForm/ChipParams/styles.js","views/Setting/Property/Chip/ChipForm/ChipParams/index.js","views/Setting/Property/Chip/ChipForm/styles.js","views/Setting/Property/Chip/ChipForm/index.js","views/Setting/Property/Chip/styles.js","views/Setting/Property/Chip/index.js","views/components/Copy/styles.js","views/components/Copy/index.js","views/Setting/Property/MainSetting/styles.js","views/Setting/Property/MainSetting/index.js","views/Setting/Property/Component/PreComponent/styles.js","views/Setting/Property/Component/PreComponent/index.js","views/Setting/Property/Component/styles.js","views/Setting/Property/Component/index.js","views/components/DragLine/styles.js","views/components/DragLine/index.js","views/Setting/Property/styles.js","views/Setting/Property/index.js","views/Setting/index.js","views/Other/Conflict/styles.js","views/Other/Conflict/index.js","views/Other/Point.js","views/styles.js","views/App.js","index.js"],"names":["Icon","this","props","icon","color","style","className","PureComponent","defaultState","env","mode","trackProjectId","scale","dataMap","id","name","cname","willCreateKey","channel","bc","image","children","activeId","editId","parentId","settingWidth","isFreeze","extraSetting","isShowText","hitTest","point","allChildren","getAllChildren","i","length","block","isPointInRect","getBounds","rect","Boolean","x","width","y","height","container","app","window","stage","filter","a","test","indexOf","getDataById","obj","store","getState","split","startChoose","changeMode","changeEditId","cursor","removeAllListeners","hit","find","isHit","filters","forEach","item","index","interactive","on","event","data","button","ing","global","startX","startY","newDataMap","activeData","changeActiveId","endX","endY","originalEvent","metaKey","changeDataMap","resize","e","to","newScale","Number","wheelDeltaY","toFixed","setTransform","hitArea","view","changeScale","hex2PixiColor","parseInt","replace","copyText","text","callback","tag","document","createElement","setAttribute","value","body","appendChild","select","execCommand","removeChild","md5","str","crypto","createHash","update","digest","transferPaste","res","Function","JSON","parse","message","error","texture","PIXI","from","zIndex","c","addChild","transferPaste_pixi","textStyle","fontFamily","fontSize","fontWeight","fill","stroke","Color","isLight","strokeThickness","dropShadow","dropShadowColor","dropShadowAngle","Math","PI","dropShadowDistance","dropShadowBlur","wordWrap","wordWrapWidth","graphics","lineStyle","beginFill","drawRect","endFill","basicText","resolution","visible","success","getChipArrayFromDataMap","getChip","config","chip","push","reducer","state","action","type","ids","slice","join","parent","j","splice","dropOver","originKey","targetKey","dropPosition","originObj","originParentId","originParent","target","will","handleDrag","key","targetParentId","targetParent","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","changeEnv","dispatch","changeParentId","changeSettingWidth","changeTrackProjectId","changeIsFreeze","changeExtraSetting","deleteData","dragData","StyledUploadImage","styled","span","UploadImage","upload","finishUpload","file","currentTarget","files","reader","FileReader","readAsDataURL","onload","ev","axios","post","result","needWaterMark","position","waterMarkUrl","then","code","url","title","onClick","accept","hidden","onChange","connect","Paste","isShowPasteInput","paste","stopPropagation","input","getElementById","setState","navigator","clipboard","readText","catch","info","addEventListener","cancelPaste","focus","removeEventListener","handlePressEnter","placement","arrowPointAtCenter","destroyTooltipOnHide","content","placeholder","autoFocus","onPressEnter","src","alt","Parent","markParent","clearParent","Option","Select","SCALE_LIST","Resize","selectRef","React","createRef","resizeTo","selectBlur","current","blur","clickToScale","scaletype","dataset","findIndex","s","margin","ref","label","labelInValue","showArrow","onSelect","dropdownStyle","textAlign","map","Help","paddingBottom","paddingLeft","outlineFilter","GlowFilter","distance","outerStrength","quality","Create","hitObject","nextRectColor","keyEvent","keyCode","includes","tagName","toLowerCase","drawNormal","colorType","colorLightness","blocks","b","findHit","pixiColor","start","duringRect","RandomColor","luminosity","hue","handleEnd","end","shape","abs","off","min","newId","clear","StyledColorChoose","div","ColorChoose","randomColorType","getColorTypeText","backgroundImage","WebkitBackgroundClip","getColorLightnessText","textShadow","handleChange","trigger","preComponentList","mobile","desc","img","moreUrl","pc","dependencies","StyledFinishBySave","FinishBySave","prop","onChangeSetting","handleDependenciesCheckbox","checked","components","getPreComponent","component","preComponent","getPreComponentArrayFromDataMap","Array","Set","comp","noSameArr","setting","isUpdate","isCreateDependenciesText","padding","d","isCreateLayout","disabled","marginTop","Group","reactType","StyledFinish","StyledFinishModal","TabPane","Tabs","OK_TEXT","Finish","isShowModal","isShowBC","isLeave","tabIndex","finishLoading","eye","toggleIsShowModal","toggleIsShowBC","trueLeave","falseLeave","changeTabIndex","finish","opener","postMessage","chipData","watchSuccess","onMouseEnter","onMouseLeave","top","right","display","marginRight","destroyOnClose","okText","cancelText","confirmLoading","onOk","onCancel","tabPosition","activeKey","size","tab","StyledLabelInput","LabelInput","isEditing","inputRef","startEdit","readOnly","setTimeout","cancelEdit","contains","handleEnter","inputStyle","defaultValue","defaultProps","StyledToolbar","ToolBar","print","stringify","console","log","finishReName","handleColorChange","marginLeft","StyledDataTree","DataTree","expandedKeys","localEditId","isShowTreeIcon","isAutoFocus","getClassName","changeName","graphic","selectAll","treeNodeOnClick","keys","node","treeNodeOnDoubleClick","treeNode","handleExpand","updateExpandedkeys","splited","reduce","k","newKeys","drop","eventKey","dragOver","dragNodesKeys","dragOverGapTop","toggleSetting","changeIsShowText","getTreeData","list","iconName","p","onFocus","track","trackId","prevProps","prevState","snapshot","showIcon","draggable","allowDrop","selectedKeys","onExpand","onDoubleClick","onDrop","treeData","StyledTrack","PAGE_PARAMS","ACTION_PARAMS","updateTimer","Track","initConfig","editingId","paramsList","isUpdating","updateRes","formRef","isH5","parameterType","parameterDescription","parameter","resetFields","handleFocus","inputtype","hideShadow","handleTabKey","exec","handleTypeChange","initList","updateParams","handleParamsChange","newParamsList","deleteParams","handleFormChange","changedValues","allValues","updateTrack","createTrack","projectName","projectNote","createItemRes","formData","getFieldsValue","parameterIdentification","parameterValue","pageName","projectId","pageId","isOnline","deleteTrack","clearTimeout","initialValues","onValuesChange","Item","lineHeight","border","concat","onKeyDown","TextArea","spinning","StyledSelectNodeFromTree","SelectNodeFromTree","disabledId","multiple","showSearch","treeIcon","listHeight","allowClear","treeDefaultExpandAll","StyledChipParams","ChipParams","dataId","initChipData","chipDataFromProps","chipId","initData","Object","group","transform","updateChipData","newChipData","chipType","StyledChipForm","NEED_NOT_CREATE","ChipForm","changeChipValue","newObj","undefined","changeChipType","moveChip","targetId","targetNode","oldChip","newChip","onDelete","onAdd","isNew","ghost","marginBottom","borderStyle","okType","onConfirm","danger","CREATE_CHIP_URL","static","recommend","Chip","isReady","localChipList","initAndUpdate","isOK","getSignature","params","arr","sort","toUpperCase","createChip","newList","updateChip","warn","channelName","signature","changeNewChip","changeLocalChipList","Panel","header","StyledCopy","Copy","copy","toString","StyledMainSetting","MainSetting","bcScale","handleBcScaleChange","updateName","round","fontStyle","alignItems","tipFormatter","v","marks","StyledPreComponent","PreComponent","handleClick","isActive","jumpToMore","open","align","offset","autoAdjustOverflow","overlayClassName","objectFit","imageRendering","StyledComponent","Component","propsList","editingKey","editingValue","initComponentData","editKey","editValue","changeKey","updatePropsToDataMap","changeValue","customType","deleteKey","dataIndex","editType","add","finalParam","handlePreComponentChange","isDelete","newPre","cols","defaultActiveKey","StyledDragLine","isTop","DragLine","startMove","max","clientX","handleMove","preventDefault","finalWidth","onMouseDown","MAX_VALUE","StyledProperty","Setting","widthPercent","handleActiveKeyChange","handleWidthChange","percent","getWidth","getPath","path","selectedKeyArr","separator","borderBottom","EditPart","Property","StyledConflict","Conflict","isConflict","changeList","infoChange","isAddSaveAll","changeStatus","status","save","nodeId","r","targetChip","getStatusPercent","total","t","toggleIsAddSaveAll","splitChip","allDataChip","pureId_split","pureId_allDataId","addList","reduceList","infoChangeList","loading","Point","pointGraphics","handlePoint","points","getPoints","newX","newY","deltaX","deltaY","newPoint","oppsitPoint","newWidth","newHeight","minX","maxX","minY","maxY","activeGraphics","drawCircle","StyledApp","deleteTimer","App","isMoveMode","isDeleting","isConflictReady","receiveMessage","location","origin","isSplitEmpty","splitConfig","compareChip","allData","active","activeNode","isWithTrack","notification","destroy","warning","description","duration","onClose","oldX","oldY","cancelMove","AvailableChipType","ChipTypeMap","getStaticFragment","getRecommendFragment","getStructureFragment","transferV3","skipHello","appElement","appWidth","innerWidth","appHeight","innerHeight","antialias","transparent","renderer","left","sortableChildren","onbeforeunload","returnValue","ReactDOM","render"],"mappings":"ofAGMA,E,4JASF,WACI,MAA0CC,KAAKC,MAAvCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,UAC5B,OACI,mBAAGA,UAAS,wBAAmBH,EAAnB,YAA2BG,GAAa,IAAMD,MAAK,2BAAMA,GAAN,IAAaD,gB,GAZrEG,iBAiBJP,I,kBCpBFQ,EAAe,CACxBC,IAAK,UACLC,KAAM,SACNC,eAAgB,GAChBC,MAAO,EACPC,QAAS,CACLC,GAAI,IACJC,KAAM,aACNC,MAAO,2BACPC,cAAe,EACfC,QAAS,GACTC,GAAI,CACAC,MAAO,GACPR,MAAO,GAEXS,SAAU,IAEdC,SAAU,IACVC,OAAQ,GACRC,SAAU,GACVC,aAAc,IACdC,UAAU,EACVC,aAAc,CACVC,YAAY,I,4CCVPC,EAAU,SAACC,GAEpB,IADA,IAAIC,EAAcC,IACTC,EAAEF,EAAYG,OAAS,EAAGD,GAAG,EAAGA,IAAK,CAC1C,IAAME,EAAQJ,EAAYE,GAE1B,GADaG,EAAcN,EAAD,eAAaK,EAAME,cAEzC,OAAOF,IAoBNC,EAAgB,SAACN,EAAOQ,GACjC,OAAOC,QAAQT,EAAMU,GAAKF,EAAKE,GAAKV,EAAMU,GAAKF,EAAKE,EAAIF,EAAKG,OAASX,EAAMY,GAAKJ,EAAKI,GAAKZ,EAAMY,GAAKJ,EAAKI,EAAIJ,EAAKK,SAO3GX,EAAiB,SAACY,GAC3B,IAAQC,EAAQC,OAARD,IACR,OAAID,EACOC,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAC,GAAC,MAAI,eAAeC,KAAKD,EAAElC,OAA0D,KAAhDkC,EAAElC,KAAO,KAAKoC,QAAQP,EAAU7B,KAAO,MAAc6B,EAAU7B,OAASkC,EAAElC,QAEzI8B,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAC,GAAC,MAAI,eAAeC,KAAKD,EAAElC,UCpCvDqC,EAAc,SAAdA,EAAetC,GAAwC,IAApCuC,EAAmC,uDAA7BC,EAAMC,WAAW1C,QACnD,GAAIwC,EAAIvC,KAAOA,EACX,OAAOuC,EAEP,IAAK,IAAIpB,EAAE,EAAGA,EAAEoB,EAAIhC,SAASa,OAAOD,IAChC,GAA6B,IAAzBnB,EAAG0C,MAAM,KAAKtB,QACd,GAAIpB,IAAOuC,EAAIhC,SAASY,GAAGnB,GACvB,OAAOsC,EAAYtC,EAAIuC,EAAIhC,SAASY,SAGxC,GAA6C,IAAzCnB,EAAGqC,QAAQE,EAAIhC,SAASY,GAAGnB,GAAK,MAAcA,IAAOuC,EAAIhC,SAASY,GAAGnB,GACrE,OAAOsC,EAAYtC,EAAIuC,EAAIhC,SAASY,KAW3CwB,EAAc,WACvB,IAAQZ,EAAQC,OAARD,IACRa,EAAW,UACXC,EAAa,IACbd,EAAIE,MAAMa,OAAS,UACnBf,EAAIE,MAAMc,qBACV,IAAMC,EAAMjB,EAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,QAAMA,EAAEe,SACzCF,IACAA,EAAIG,QAAU,IAEHjC,IACRkC,SAAQ,SAACC,EAAMC,GAClBD,EAAKP,OAAS,OACdO,EAAKN,qBACLM,EAAKE,aAAc,EACnBF,EAAKG,GAAG,eAAgB,SAACC,GACrB,GAA0B,IAAtBA,EAAMC,KAAKC,OAAf,CAGA,MAA2BnB,EAAMC,WAAzB3C,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACX6D,GAAM,EACV,iBAAmCH,EAAMC,KAAKG,QAArCC,EAAT,EAAMpC,EAAcqC,EAApB,EAAiBnC,EACXoC,EAAU,eAAOjE,GACjBkE,EAAa3B,EAAYe,EAAKpD,KAAM+D,GACtCC,IACAC,EAAeb,EAAKpD,MACpBoD,EAAKG,GAAG,eAAgB,SAACC,GACrB,GAAIG,EAAK,CACL,qBAAiCH,EAAMC,KAAKG,QAAjCM,EAAX,EAAQzC,EAAY0C,EAApB,EAAiBxC,EAOjB,GANAyB,EAAK3B,IAAMyC,EAAOL,GAAUhE,EAC5BuD,EAAKzB,IAAMwC,EAAOL,GAAUjE,EAC5BmE,EAAWvC,EAAI2B,EAAK3B,EACpBuC,EAAWrC,EAAIyB,EAAKzB,GAGf6B,EAAMC,KAAKW,cAAcC,QAAS,CACnC,IAAM/D,EAAWW,EAAemC,GAChC,GAAI9C,EAASa,OAAS,EAClB,IAAK,IAAID,EAAE,EAAGA,EAAEZ,EAASa,OAAQD,IAAK,CAClCZ,EAASY,GAAGO,IAAMyC,EAAOL,GAAUhE,EACnCS,EAASY,GAAGS,IAAMwC,EAAOL,GAAUjE,EACnC,IAAM4D,EAAOpB,EAAY/B,EAASY,GAAGlB,KAAM+D,GAC3CN,EAAKhC,EAAInB,EAASY,GAAGO,EACrBgC,EAAK9B,EAAIrB,EAASY,GAAGS,GAIjC2C,GAAcP,GACdF,EAASK,EACTJ,EAASK,MAGjBf,EAAKG,GAAG,aAAa,WAAQI,GAAM,KACnCP,EAAKG,GAAG,oBAAoB,WAAQI,GAAM,cAM7CY,EAAS,SAACC,EAAGC,GACtB,IAAQ3C,EAAQC,OAARD,IACAjC,EAAU0C,EAAMC,WAAhB3C,MAER,IAAI2E,GAAMA,EAAEH,QAAZ,CAGA,MAAiBvC,EAAIE,MAAbP,EAAR,EAAQA,EAAGE,EAAX,EAAWA,EACL+C,EAAWD,GAAME,QAAQ9E,EAAQ2E,EAAEI,YAAc,IAAM,KAAKC,QAAQ,IACtEH,GAAY,GAAKA,GAAY,KAC7B5C,EAAIE,MAAM8C,aAAarD,EAAGE,EAAG+C,EAAUA,GACvC5C,EAAIE,MAAM+C,QAAQtD,GAAKK,EAAIE,MAAMP,EAAIiD,EACrC5C,EAAIE,MAAM+C,QAAQpD,GAAKG,EAAIE,MAAML,EAAI+C,EACrC5C,EAAIE,MAAM+C,QAAQrD,MAAQI,EAAIkD,KAAKtD,MAAQgD,EAC3C5C,EAAIE,MAAM+C,QAAQnD,OAASE,EAAIkD,KAAKpD,OAAS8C,EAE7CO,EAAYP,MAKPQ,EAAgB,SAAC7F,GAC1B,OAAO8F,SAAS9F,EAAM+F,QAAQ,IAAK,MAAO,KAIjCC,EAAW,SAACC,EAAMC,GAC3B,IAAMC,EAAMC,SAASC,cAAc,SACnCF,EAAIG,aAAa,KAAM,YACvBH,EAAII,MAAQN,EACZG,SAASI,KAAKC,YAAYN,GAC1BA,EAAIO,SACJN,SAASO,YAAY,QACrBP,SAASI,KAAKI,YAAYT,GACvBD,GACCA,EAASD,IASJY,EAAM,SAAAC,GACf,IAAMD,EAAME,IAAOC,WAAW,OAE9B,OADAH,EAAII,OAAOH,GAAO,GAAI,QACfD,EAAIK,OAAO,QASTC,EAAgB,SAAC/C,GAC1B,IAAQ7C,EAAiB2B,EAAMC,WAAvB5B,aA2CAkB,EAAQC,OAARD,IACJ2E,EAAM,GACV,GAAoB,kBAAThD,EACP,IAEIgD,EAAM,IAAIC,SAAJ,iBAAuBjD,GAAvB,GACR,MAAOe,GACL,IACIiC,EAAME,KAAKC,MAAMnD,GACnB,MAAOe,GAEL,YADAqC,IAAQC,MAAR,wCAAsBtC,UAK9BiC,EAAMhD,EAGV,IACIQ,EAAe,IACfK,GAAcmC,GAFd,oBAGc1E,OAAOD,IAAIE,MAAM1B,SAAS2B,QAAO,SAAAC,GAAC,MAAe,OAAXA,EAAElC,MAA4B,UAAXkC,EAAElC,SAHzE,IAGA,2BAA4F,CAAC,IAApFkB,EAAmF,QACxFa,OAAOD,IAAIE,MAAMiE,YAAY/E,IAJjC,8BAMA,GAAIuF,EAAIrG,GAAGC,MAAO,CAAC,IAAD,EACR0G,EAAUC,IAAaC,KAAKR,EAAIrG,GAAGC,OACnCA,EAAQ,IAAI2G,IAAYD,GAC9B1G,EAAML,KAAO,KACbK,EAAM6G,QAAU,EAChB7G,EAAMyE,aAAa,EAAG,EAAG2B,EAAIrG,GAAGP,MAAO4G,EAAIrG,GAAGP,QAC9C,EAAAkC,OAAOD,IAAIE,OAAMiE,YAAjB,oBAAgCnE,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,UACjE8B,EAAIE,MAAMoF,SAAS/G,IAxEA,SAArBgH,EAAsB/E,GACxB,GAAIA,EAAIhC,SAASa,OAAS,EAAG,CAAC,IAAD,gBACXmB,EAAIhC,UADO,IACzB,2BAA4B,CAAC,IAApB6G,EAAmB,QAClBG,EAAY,CACdC,WAAY,QACZC,SAAU,OACVC,WAAY,OACZC,KAAMP,EAAE9H,MACRsI,OAAQC,IAAMT,EAAE9H,OAAOwI,UAAY,qBAAuB,2BAC1DC,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,UACjBC,gBAAiBC,KAAKC,GAAK,EAC3BC,mBAAoB,EACpBC,eAAgB,EAChBC,UAAU,EACVC,cAAe,KAEbC,EAAW,IAAIxB,IACf3H,EAAQ6F,EAAciC,EAAE9H,OAC9BmJ,EAASxI,KAAOmH,EAAEpH,GAClByI,EAASC,UAAU,EAAGpJ,EAAO,GAC7BmJ,EAASE,UAAUrJ,EAAO,IAC1BmJ,EAAS/G,EAAI0F,EAAE1F,EACf+G,EAAS7G,EAAIwF,EAAExF,EACf6G,EAASlD,KAAO6B,EAAEnH,KAClBwI,EAASG,SAAS,EAAG,EAAGxB,EAAEzF,MAAOyF,EAAEvF,QACnC4G,EAASI,UACT,IAAIC,EAAY,IAAI7B,IAAUwB,EAASlD,KAAMgC,GAC7CuB,EAAU7I,KAAO,OACjB6I,EAAUpH,EAAI,EACdoH,EAAUlH,GAAK,GACfkH,EAAUC,WAAa,EACvBD,EAAUE,QAAUnI,EAAaC,WACjC2H,EAASpB,SAASyB,GAClB9G,OAAOD,IAAIE,MAAMoF,SAASoB,GAC1BnB,EAAmBF,IAnCE,gCAyE7BE,CAAmBZ,GACnB/D,IACAmE,IAAQmC,QAAQ,kCAClB,MAAOxE,GACLqC,IAAQC,MAAR,oCAAuBtC,MAUlByE,EAA0B,WAAyC,IAAxCnJ,EAAuC,uDAA7ByC,EAAMC,WAAW1C,QAC3D2G,EAAM,GAEJyC,EAAU,SAAVA,EAAW5G,GAMb,GALIA,EAAI6G,QAAU7G,EAAI6G,OAAOC,MAAQ9G,EAAI6G,OAAOC,KAAKjI,OAAS,GAC1DmB,EAAI6G,OAAOC,KAAKjG,SAAQ,SAAAgE,GACpBV,EAAI4C,KAAJ,2BAAalC,GAAb,IAAgBpH,GAAIuC,EAAIvC,SAG5BuC,EAAIhC,UAAYgC,EAAIhC,SAASa,OAAS,EACtC,IAAK,IAAID,KAAKoB,EAAIhC,SACd4I,EAAQ5G,EAAIhC,SAASY,KAMjC,OADAgI,EAAQpJ,GACD2G,GCpJI6C,I,EAAAA,EA9Gf,WAAiD,IAA/BC,EAA8B,uDAAtB9J,EAAc+J,EAAQ,uCAC5C,OAAQA,EAAOC,MACX,IAAK,aAAc,OAAO,2BAAKF,GAAZ,IAAmB7J,IAAK8J,EAAO9J,MAClD,IAAK,cAAe,OAAO,2BAAK6J,GAAZ,IAAmB5J,KAAM6J,EAAO7J,OACpD,IAAK,eAAgB,OAAO,2BAAK4J,GAAZ,IAAmB1J,MAAO2J,EAAO3J,QACtD,IAAK,iBAAkB,OAAO,2BAAK0J,GAAZ,IAAmBzJ,QAAS0J,EAAO1J,UAC1D,IAAK,gBAAiB,OAAO,2BAAKyJ,GAAZ,IAAmB/I,OAAQgJ,EAAOhJ,SACxD,IAAK,kBAAmB,OAAO,2BAAK+I,GAAZ,IAAmB9I,SAAU+I,EAAO/I,WAC5D,IAAK,sBAAuB,OAAO,2BAAK8I,GAAZ,IAAmB7I,aAAc8I,EAAO9I,eACpE,IAAK,wBAAyB,OAAO,2BAAK6I,GAAZ,IAAmB3J,eAAgB4J,EAAO5J,iBACxE,IAAK,kBAAmB,OAAO,2BAAK2J,GAAZ,IAAmB5I,SAAU6I,EAAO7I,WAC5D,IAAK,sBAAuB,OAAO,2BAAK4I,GAAZ,IAAmB3I,aAAc4I,EAAO5I,eAEpE,IAAK,kBACD,MAAgBmB,OAARD,EAAR,EAAQA,IACAvB,EAAaiJ,EAAbjJ,SAKR,MAJiB,KAAbA,GAAgC,MAAbA,IACnBuB,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,MAA4B,UAAXmH,EAAEnH,QAAkBmD,SAAQ,SAAAjB,GAAC,OAAIA,EAAEgF,OAAS,KAC9FpF,EAAIE,MAAM1B,SAAS0C,MAAK,SAAAmE,GAAC,OAAIA,EAAEnH,OAASwJ,EAAOjJ,YAAU2G,OAAS,KAE/D,2BAAKqC,GAAZ,IAAmBhJ,SAAUiJ,EAAOjJ,WAExC,IAAK,cAKD,IAJA,IAAMmJ,EAAMF,EAAOzJ,GAAG0C,MAAM,KACtBhC,EAAWiJ,EAAIvI,OAAS,EAAIuI,EAAIC,MAAM,GAAI,GAAGC,KAAK,KAAM,IACxD7F,EAAU,eAAOwF,EAAMzJ,SACvB+J,EAASxH,EAAY5B,EAAUsD,GAC5B+F,EAAE,EAAEA,EAAED,EAAOvJ,SAASa,OAAO2I,IAClC,GAAID,EAAOvJ,SAASwJ,GAAG/J,KAAOyJ,EAAOzJ,GAAG,CACpC8J,EAAOvJ,SAASyJ,OAAOD,EAAE,GACzB,MAGR,OAAO,2BAAKP,GAAZ,IAAmBzJ,QAASiE,EAAYxD,SAAU,GAAIZ,KAAM,WAEhE,IAAK,YASD,IAPA,MAAsD6J,EAAOlH,IAArD0H,EAAR,EAAQA,SAASC,EAAjB,EAAiBA,UAAUC,EAA3B,EAA2BA,UAAUC,EAArC,EAAqCA,aAC/BpG,EAAU,eAAQwF,EAAMzJ,SACxBsK,EAAY/H,EAAY4H,EAAU,GAAIlG,GACtCsG,EAAiBD,EAAUrK,GAAG0C,MAAM,KAAKtB,OAAS,EAAIiJ,EAAUrK,GAAG0C,MAAM,KAAKkH,MAAM,GAAI,GAAGC,KAAK,KAAM,IACtGU,EAAejI,EAAYgI,EAAgBtG,GAGxC+F,EAAE,EAAEA,EAAEQ,EAAahK,SAASa,OAAO2I,IACxC,GAAIQ,EAAahK,SAASwJ,GAAG/J,KAAOkK,EAAU,GAAG,CAC7CK,EAAahK,SAASyJ,OAAOD,EAAE,GAC/B,MAIR,GAAIE,EAAS,CAET,IAAIO,EAASlI,EAAY6H,EAAWnG,GAChCyG,EAAqB,MAAdD,EAAOxK,GAAawK,EAAOrK,cAAgB,GAA3C,UAAmDqK,EAAOxK,GAA1D,YAAgEwK,EAAOrK,eAE5EuK,EAAa,SAAbA,EAAsBnI,EAAIoI,GAG5B,GAFA3I,OAAOD,IAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASsC,EAAIvC,MAAIC,KAAO0K,EAC9DpI,EAAIvC,GAAK2K,EACLpI,EAAIhC,SACJ,IAAK,IAAIY,EAAE,EAAEA,EAAEoB,EAAIhC,SAASa,OAAOD,IAAI,CACnC,IAAMsJ,EAAI,UAAMlI,EAAIvC,GAAV,YAAgBuC,EAAIpC,eAC9BoC,EAAIpC,gBACJuK,EAAWnI,EAAIhC,SAASY,GAAGsJ,KAQvC,OAHAC,EAAWL,EAAWI,GACtBD,EAAOjK,SAAS+I,KAAKe,GACrBG,EAAOrK,gBACA,2BAAKqJ,GAAZ,IAAmBhJ,SAAU6J,EAAUrK,GAAID,QAASiE,IAGpD,IAAM4G,EAAiBT,EAAUzH,MAAM,KAAKtB,OAAS,EAAI+I,EAAUzH,MAAM,KAAKkH,MAAM,GAAI,GAAGC,KAAK,KAAM,IAClGgB,EAAevI,EAAYsI,EAAe5G,GAE1CyG,EAA2B,MAApBI,EAAa7K,GAAa6K,EAAa1K,cAAgB,GAAvD,UAA+D0K,EAAa7K,GAA5E,YAAkF6K,EAAa1K,eACpGuK,EAAa,SAAbA,EAAsBnI,EAAIoI,GAI5B,GAHA3I,OAAOD,IAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASsC,EAAIvC,MAAIC,KAAO0K,EAC9DpI,EAAIvC,GAAK2K,EAELpI,EAAIhC,SACJ,IAAK,IAAIY,EAAE,EAAEA,EAAEoB,EAAIhC,SAASa,OAAOD,IAAI,CACnC,IAAMsJ,EAAkB,MAAXlI,EAAIvC,GAAauC,EAAIpC,cAAgB,GAArC,UAA6CoC,EAAIvC,GAAjD,YAAuDuC,EAAIpC,eACxEoC,EAAIpC,gBACJuK,EAAWnI,EAAIhC,SAASY,GAAGsJ,KAIvCC,EAAWL,EAAUI,GACrB,IAAK,IAAItJ,EAAE,EAAGA,EAAE0J,EAAatK,SAASa,OAAQD,IAC1C,GAAI0J,EAAatK,SAASY,GAAGnB,KAAOmK,EAAU,CAC1C,GAAqB,QAAjBC,EAAuB,CACvBS,EAAatK,SAASyJ,OAAO7I,EAAE,EAAEkJ,GACjC,MAEAQ,EAAatK,SAASyJ,OAAO7I,EAAE,EAAE,EAAEkJ,GACnC,MAKZ,OADAQ,EAAa1K,gBACN,2BAAIqJ,GAAX,IAAkBhJ,SAAU6J,EAAUrK,GAAID,QAASiE,IAG3D,QAAS,OAAOwF,ICxGlBsB,EAAmB9I,OAAO+I,sCAAwCC,IASzDxI,EARDyI,YACVC,EACAxL,EACAoL,EACIK,YAAgBC,OCRXC,EAAY,SAAA1L,GAAG,OAAI6C,EAAM8I,SAAS,CAAE5B,KAAK,aAAc/J,SACvDiD,EAAa,SAAAhD,GAAI,OAAI4C,EAAM8I,SAAS,CAAE5B,KAAK,cAAe9J,UAC1DsF,EAAc,SAAApF,GAAK,OAAI0C,EAAM8I,SAAS,CAAE5B,KAAK,eAAgB5J,WAC7DoE,EAAiB,SAAA1D,GAAQ,OAAIgC,EAAM8I,SAAS,CAAE5B,KAAK,kBAAmBlJ,cACtEqC,EAAe,SAAApC,GAAM,OAAI+B,EAAM8I,SAAS,CAAE5B,KAAM,gBAAiBjJ,YACjE8K,GAAiB,SAAA7K,GAAQ,OAAI8B,EAAM8I,SAAS,CAAE5B,KAAM,kBAAmBhJ,cACvE8K,GAAqB,SAAA7K,GAAY,OAAI6B,EAAM8I,SAAS,CAAE5B,KAAM,sBAAuB/I,kBACnF8K,GAAuB,SAAA5L,GAAc,OAAI2C,EAAM8I,SAAS,CAAE5B,KAAM,wBAAyB7J,oBACzF6L,GAAiB,SAAA9K,GAAQ,OAAI4B,EAAM8I,SAAS,CAAE5B,KAAM,kBAAmB9I,cACvE+K,GAAqB,SAAA9K,GAAY,OAAI2B,EAAM8I,SAAS,CAAE5B,KAAM,sBAAuB7I,kBAEnF0D,GAAgB,SAAAxE,GAAO,OAAIyC,EAAM8I,SAAS,CAAE5B,KAAK,iBAAkB3J,aACnE6L,GAAa,SAAA5L,GAAE,OAAIwC,EAAM8I,SAAS,CAAE5B,KAAM,cAAe1J,QACzD6L,GAAW,SAAAtJ,GAAG,OAAIC,EAAM8I,SAAS,CAAE5B,KAAM,YAAanH,S,kBCbtDuJ,GAAoBC,KAAOC,KAAV,6lBCOxBC,G,4MAEFC,OAAS,a,EAITC,aAAe,SAAC1H,GACZ,IAAQ1C,EAAQC,OAARD,IACAqK,EAAR,YAAiB3H,EAAE4H,cAAcC,MAAjC,MACMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcL,GACrBG,EAAOG,OAAQ,SAACC,GACZC,IAAMC,KAAN,mDAA+D,CAC3D/G,KAAM,CACFpC,KAAMiJ,EAAGnC,OAAOsC,OAChBC,eAAe,EACfC,SAAU,GACVC,aAAc,MAEnBC,MAAK,SAAAxG,GACJ,GAAsB,IAAlBA,EAAIhD,KAAKyJ,KAAY,CAAC,IAAD,EACfnG,EAAUC,IAAaC,KAAKyF,EAAGnC,OAAOsC,QACtCxM,EAAQ,IAAI2G,IAAYD,GAC9B1G,EAAML,KAAO,KACbK,EAAM6G,QAAU,GAEhB,EAAApF,EAAIE,OAAMiE,YAAV,oBAAyBnE,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,UAC1D8B,EAAIE,MAAMoF,SAAS/G,GACnB,IAAQP,EAAY,EAAKX,MAAjBW,QACFiE,EAAU,eAAOjE,GACvBiE,EAAW3D,GAAGC,MAAQoG,EAAIhD,KAAKA,KAAK0J,IACpC7I,GAAcP,GACd8C,IAAQmC,QAAQ,iCAEhBnC,IAAQC,MAAR,wCAAsBL,EAAIhD,KAAKoD,e,4CAM/C,WACI,IAAyBxG,EAAcnB,KAAKC,MAApCW,QAAWM,GAAMC,MACzB,OACI,eAACwL,GAAD,WACI,cAAC,IAAD,CAASuB,MAAM,2DAAf,SACI,wBAAQ7N,UAAS,oBAAgBc,EAAkB,GAAV,SAAgBgN,QAASnO,KAAK+M,OAAvE,SAA+E,cAAC,EAAD,CAAM7M,KAAK,iBAE9F,uBAAOqK,KAAK,OAAO6D,OAAO,UAAUvN,GAAG,cAAcwN,QAAM,EAACC,SAAUtO,KAAKgN,sB,GA/CjE1M,iBA0DXiO,oBALf,SAAyBlE,GAErB,MAAO,CAAEzJ,QADWyJ,EAAZzJ,WAIG2N,CAAyBzB,I,oBC/DlC0B,G,4MAEFnE,MAAQ,CACJoE,kBAAkB,G,EAGtBC,MAAQ,SAACpJ,GACL,IAAQmJ,EAAqB,EAAKpE,MAA1BoE,iBACRnJ,EAAEqJ,kBACF,IAAMC,EAAQrI,SAASsI,eAAe,cAClCJ,GACIG,EAAMlI,OACNY,EAAcsH,EAAMlI,OAExB,EAAKoI,SAAS,CAAEL,kBAAkB,KAE9BM,UAAUC,UACVD,UAAUC,UAAUC,WACflB,MAAK,SAAC3H,GACCA,EACAkB,EAAclB,GAEduB,IAAQC,MAAM,qCAGrBsH,OAAM,SAAA5J,GACHqC,IAAQwH,KAAK,4HACb5I,SAAS6I,iBAAiB,QAAS,EAAKC,aACxC,EAAKP,SAAS,CACVL,kBAAkB,IAElBG,GACAA,EAAMU,YAIlB3H,IAAQwH,KAAK,4HACb5I,SAAS6I,iBAAiB,QAAS,EAAKC,aACxC,EAAKP,SAAS,CACVL,kBAAkB,M,EAMlCY,YAAc,SAAC/J,GACGiB,SAASsI,eAAe,gBACxBvJ,EAAE+F,SACZ,EAAKyD,SAAS,CAAEL,kBAAkB,IAClClI,SAASgJ,oBAAoB,QAAS,EAAKF,e,EAInDG,iBAAmB,SAAClK,GAChBgC,EAAchC,EAAE+F,OAAO3E,OACvB,EAAKoI,SAAS,CAAEL,kBAAkB,K,4CAGtC,WACI,IAAQA,EAAqBzO,KAAKqK,MAA1BoE,iBAER,OACI,cAAC,KAAD,CACI5E,QAAS4E,EACTgB,UAAU,cACVC,oBAAoB,EACpBC,sBAAoB,EACpBC,QAAS,cAAC,KAAD,CAAO/O,GAAG,aAAagP,YAAY,kBAAQC,WAAS,EAAC1P,MAAO,CAAEoC,MAAO,SAAWuN,aAAc/P,KAAKwP,mBALhH,SAMI,eAAC,IAAD,CAAQnP,UAAS,gBAAWoO,EAAmB,SAAW,IAAMlE,KAAK,UAAU4D,QAASnO,KAAK0O,MAA7F,UACI,qBAAKsB,IAAI,kGAAkGC,IAAI,UAC9GxB,EAAmB,eAAO,wB,GAtE3BnO,iBA6ELkO,MC3ET0B,G,4MAEFC,WAAa,WACT,MAA+B,EAAKlQ,MAA5BoB,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAEd6K,GADA/K,IAAaE,EACE,GAEAF,I,EAIvB+O,YAAc,SAAC9K,GACXA,EAAEqJ,kBACFvC,GAAe,K,4CAGnB,WACI,MAA+BpM,KAAKC,MAA5BoB,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAElB,OACI,cAAC,IAAD,CAAS2M,MACL,gCACI,wEACA,uBACA,uBAAM9N,MAAO,CAAEmI,WAAY,WAA3B,uJAA+D,sBAAMnI,MAAO,CAAED,MAAO,WAAtB,4CAJvE,SAOI,yBAAQE,UAAS,qBAAgBkB,GAAYA,IAAaF,EAAW,SAAU,IAAM8M,QAASnO,KAAKmQ,WAAnG,UACI,cAAC,EAAD,CAAMjQ,KAAK,WAEPqB,GACA,qBAAKlB,UAAU,cAAc8N,QAASnO,KAAKoQ,YAA3C,SACI,cAAC,EAAD,CAAMlQ,KAAK,iB,GAhClBI,iBA8CNiO,oBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SAD+BgJ,EAAhChJ,SACWE,SADqB8I,EAAtB9I,SACWX,QADWyJ,EAAZzJ,WAIjB2N,CAAyB2B,I,UC/ChCG,GAAWC,KAAXD,OACFE,GAAa,CAAE,GAAK,IAAM,GAAK,EAAG,IAAK,EAAG,GAE1CC,G,4MAEFC,UAAYC,IAAMC,Y,EAElBC,SAAW,SAAAtL,GACPD,EAAO,KAAMC,EAAEoB,Q,EAGnBmK,WAAa,WACT,EAAKJ,UAAUK,QAAQC,Q,EAG3BC,aAAe,SAAC1L,GACZ,IAAQ2L,EAAc3L,EAAE4H,cAAcgE,QAA9BD,UACAtQ,EAAU,EAAKV,MAAfU,MACR,GAAkB,MAAdsQ,EAAmB,CACnB,IAAM9M,EAAQoM,GAAWY,WAAU,SAAAC,GAAC,OAAIA,GAAKzQ,KAEzCwD,EAAQ,GACRkB,EAAO,KAAMkL,GAAWpM,EAAQ,QAEjC,CACH,IAAMA,EAAQoM,GAAWY,WAAU,SAAAC,GAAC,OAAIA,EAAIzQ,KACxCwD,EAAQoM,GAAWtO,QACnBoD,EAAO,KAAMkL,GAAWpM,M,4CAKpC,WACI,IAAQxD,EAAUX,KAAKC,MAAfU,MACR,OACI,sBAAKN,UAAU,SAAf,UACI,wBAAQ,iBAAe,IAAIA,UAAU,MAAMD,MAAO,CAAEiR,OAAQ,SAAWlD,QAASnO,KAAKgR,aAArF,eACA,cAAC,KAAD,CACIM,IAAKtR,KAAKyQ,UACV/J,MAAO,CAAEA,MAAO/F,EAAO4Q,MAAOtL,SAAiB,IAARtF,GAAe,KACtD6Q,cAAY,EACZC,WAAW,EACXnD,SAAUtO,KAAK4Q,SACfc,SAAU1R,KAAK6Q,WACfc,cAAe,CAAEC,UAAW,UAC5BxR,MAAO,CAAEoC,MAAO,GAAIoP,UAAW,UARnC,SAWQrB,GAAWsB,KAAI,SAAClR,EAAOwD,GACnB,OAAO,cAACkM,GAAD,CAAQ3J,MAAO/F,EAAf,SAA2C,IAARA,EAAc,KAAtBwD,QAI9C,wBAAQ,iBAAe,IAAI9D,UAAU,MAAMD,MAAO,CAAEiR,OAAQ,SAAYlD,QAASnO,KAAKgR,aAAtF,sB,GAlDK1Q,iBA6DNiO,oBALf,SAAyBlE,GAErB,MAAO,CAAE1J,MADS0J,EAAV1J,SAIG4N,CAAyBiC,ICjElCsB,G,4JACF,WACI,OACI,cAAC,KAAD,CAASlC,QACL,qBAAKxP,MAAO,CAAEkI,SAAU,QAAxB,SACI,qBAAIlI,MAAO,CAAC2R,cAAe,EAAGC,YAAa,OAAQX,OAAQ,GAA3D,UACI,iGACA,gFACA,iEACA,mHACA,6FAPZ,SAWI,wBAAQhR,UAAU,WAAlB,SAA6B,cAAC,EAAD,CAAMH,KAAK,gB,GAdrCI,iBAoBJwR,M,+BCXTG,GAAgB,IAAIC,KAAW,CAAEC,SAAU,EAAGC,cAAe,EAAGjS,MAAO,SAAUkS,QAAS,IAE1FC,G,4MAOFjI,MAAQ,CACJkI,UAAW,KACXC,cAAe,I,EAanBC,SAAW,SAACnN,GACR,IAAQ7E,EAAS,EAAKR,MAAdQ,KAGU,KAAd6E,EAAEoN,SAA2B,SAATjS,GACpB+C,IAIc,CAAC,QAAS,WAAY,SAAU,UACpCmP,SAASrN,EAAE+F,OAAOuH,QAAQC,gBAItB,KAAdvN,EAAEoN,SAAmBpN,EAAEH,SACvB,EAAK2N,c,EAIbA,WAAa,WACT,MAA+C,EAAK7S,MAA5CW,EAAR,EAAQA,QAASmS,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,eACpBpQ,EAAQC,OAARD,IACFqQ,EAASrQ,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,MAA4B,UAAXmH,EAAEnH,QACnE2C,EAAW,QACXwP,EAAOhP,SAAQ,SAAAiP,GAAC,OAAIA,EAAE9O,aAAc,KACpCxB,EAAIE,MAAMc,qBACVhB,EAAIE,MAAMuB,GAAG,cAAe,EAAK8O,SACjC,IAIIC,EAJAC,EAAQ,GACRC,EAAa,IAAIxL,IACrBlF,EAAIE,MAAMa,OAAS,YAGnB,IAAIxD,EAAQoT,KAAY,CAAEC,WAAYR,EAAgBS,IAAKV,IAC3DK,EAAYpN,EAAc7F,GACR,QAAd4S,GACA,EAAKjE,SAAS,CACV0D,cAAerS,IAGvB,IAAMuT,EAAY,SAACpP,GACf,MAA0C,EAAKrE,MAAvCsB,EAAR,EAAQA,SAAUZ,EAAlB,EAAkBA,MAAOe,EAAzB,EAAyBA,aACNmC,EAAQ,EAAKwG,MAAxBkI,UACFoB,EAAG,eAAOrP,EAAMC,KAAKG,QAErBkP,EAAQ,IAAI9L,IAGlB,GAFAlF,EAAIE,MAAMiE,YAAYuM,GAElBtK,KAAK6K,IAAIF,EAAIpR,EAAI8Q,EAAM9Q,GAAK,GAAKyG,KAAK6K,IAAIF,EAAIlR,EAAE4Q,EAAM5Q,GAAK,EAG3D,OAFAG,EAAIE,MAAMgR,IAAI,kBACdlR,EAAIE,MAAMgR,IAAI,oBAIlB,IAAMtR,EAAQwG,KAAK6K,IAAIF,EAAIpR,EAAE8Q,EAAM9Q,GAAK5B,EAClC+B,EAASsG,KAAK6K,IAAIF,EAAIlR,EAAE4Q,EAAM5Q,GAAK9B,EAczC,GAbAiT,EAAMrK,UAAU,EAAG6J,EAAW,GAC9BQ,EAAMpK,UAAU4J,EAAW,IAC3BQ,EAAMnK,SACF,EACA,EACAjH,EACAE,GAEJkR,EAAMrR,GAAKyG,KAAK+K,IAAIV,EAAM9Q,EAAGoR,EAAIpR,GAAKK,EAAIE,MAAMP,GAAK5B,EACrDiT,EAAMnR,GAAKuG,KAAK+K,IAAIV,EAAM5Q,EAAGkR,EAAIlR,GAAKG,EAAIE,MAAML,GAAK9B,EACrDiT,EAAMlK,UAGFnI,GAAYsC,EAAK,CACjB,IACI8G,EADE9F,EAAU,eAAQjE,GAQlBoT,GALFrJ,EAASxH,EADT5B,GAGqBsC,EAAI/C,KAFM+D,IAKdhE,GAAK,IAAM8J,EAAO3J,cACvC2J,EAAOvJ,SAAS+I,KAAK,CACjBtJ,GAAImT,EACJlT,KAAK,eAAD,OAAOkT,GACXzR,EAAGqR,EAAMrR,EACTE,EAAGmR,EAAMnR,EACTD,QACAE,SACAtB,SAAU,GACVjB,QACAa,cAAe,IAEnB2J,EAAO3J,gBACP4S,EAAM9S,KAAOkT,EACbJ,EAAMxN,KAAN,sBAAkB4N,GAClBpR,EAAIE,MAAMoF,SAAS0L,GAEnB7O,EAAeiP,GACftQ,EAAasQ,GACb5O,GAAcP,OACX,CAEH,IAAMmP,EAAQpT,EAAQI,cAAgB,GACtCoE,GAAc,2BACPxE,GADM,IAETI,cAAeJ,EAAQI,cAAgB,EACvCI,SAAS,GAAD,mBACDR,EAAQQ,UADP,CAEJ,CACIP,GAAImT,EACJlT,KAAK,eAAD,OAAOkT,GACXzR,EAAGqR,EAAMrR,EACTE,EAAGmR,EAAMnR,EACTD,QACAE,SACAtB,SAAU,GACVjB,QACAa,cAAe,QAI3B4S,EAAM9S,KAAOkT,EACbJ,EAAMxN,KAAN,sBAAkB4N,GAClBpR,EAAIE,MAAMoF,SAAS0L,GACnB7O,EAAeiP,GACftQ,EAAasQ,GAEjBX,EAAQ,GACR,IAAMjL,EAAY,CACdC,WAAY,QACZC,SAAU,OACVC,WAAY,OACZC,KAAMrI,EACNsI,OAAQC,IAAMvI,GAAOwI,UAAY,qBAAuB,2BACxDC,gBAAiB,EACjBC,YAAY,EACZC,gBAAiB,UACjBC,gBAAiBC,KAAKC,GAAK,EAC3BC,mBAAoB,EACpBC,eAAgB,EAChBC,UAAU,EACVC,cAAe,KAEfM,EAAY,IAAI7B,IAAU8L,EAAMxN,KAAMgC,GAC1CuB,EAAU7I,KAAO,OACjB6I,EAAUpH,EAAI,EACdoH,EAAUlH,GAAK,GACfkH,EAAUC,WAAa,EACvBD,EAAUE,QAAUnI,EAAaC,WACjCiS,EAAM1L,SAASyB,GACf,EAAKmJ,aACLlQ,EAAIE,MAAMgR,IAAI,aACdlR,EAAIE,MAAMgR,IAAI,qBAGlBlR,EAAIE,MAAMuB,GAAG,eAAe,SAACC,GACzB,MAA8B,EAAKrE,MAA3BsB,EAAR,EAAQA,SAAUX,EAAlB,EAAkBA,QACCiD,EAAQ,EAAKwG,MAAxBkI,UAER,GAAkB,QAAdQ,IAAwBxR,GAAYsC,GAAM,CAC1C,IAAI8G,EAASxH,EAAY5B,GAAYsC,EAAI/C,KAAMF,GAC/CT,EAAQoT,KAAY,CAAEE,IAAK9I,EAASA,EAAOxK,MAAQ,GAAIqT,WAAYR,IAEvEI,EAAYpN,EAAc7F,GAC1B,EAAK2O,SAAS,CACV0D,cAAerS,IAGO,IAAtBmE,EAAMC,KAAKC,SAGf6O,EAAK,eAAO/O,EAAMC,KAAKG,QACvB9B,EAAIE,MAAMgR,IAAI,cAAe,EAAKX,SAClCG,EAAWzJ,SAAU,EACrByJ,EAAWxS,KAAO,MAClB8B,EAAIE,MAAMoF,SAASoL,GAEnB1Q,EAAIE,MAAMuB,GAAG,eAAe,SAACC,GACzBgP,EAAWzJ,SAAU,EACrB,IAAMiH,EAAO,eAAOxM,EAAMC,KAAKG,QAC/B4O,EAAWW,QACXX,EAAW/J,UAAU,EAAG6J,EAAW,GACnCE,EAAW9J,UAAU4J,EAAW,IAChCE,EAAW7J,UACN4J,EAAM9Q,EAAIK,EAAIE,MAAMP,GAAKK,EAAIE,MAAMnC,MAAM4B,GACzC8Q,EAAM5Q,EAAIG,EAAIE,MAAML,GAAKG,EAAIE,MAAMnC,MAAM8B,GACzCqO,EAAQvO,EAAE8Q,EAAM9Q,GAAKK,EAAIE,MAAMnC,MAAM4B,GACrCuO,EAAQrO,EAAE4Q,EAAM5Q,GAAKG,EAAIE,MAAMnC,MAAM8B,GAE1C6Q,EAAW5J,aAEf9G,EAAIE,MAAMuB,GAAG,YAAaqP,GAC1B9Q,EAAIE,MAAMuB,GAAG,mBAAoBqP,Q,EAIzCP,QAAU,SAAC7O,GACP,IAAQiO,EAAc,EAAKlI,MAAnBkI,UACF1O,EAAMjC,EAAQ0C,EAAMC,KAAKG,UAC1B6N,IAAc1O,GAAQ0O,GAAa1O,GAAOA,EAAI/C,OAASyR,EAAUzR,QAC9DyR,IACAA,EAAUvO,QAAU,GACpBuO,EAAUxO,OAAQ,GAElBF,IACAA,EAAIG,QAAU,CAACiO,IACfpO,EAAIE,OAAQ,GAEhB,EAAK+K,SAAS,CACVyD,UAAW1O,M,uDAxNvB,WACI0C,SAAS6I,iBAAiB,UAAWpP,KAAKyS,UAAU,K,kCAGxD,WACI,IAAQ7P,EAAQC,OAARD,IACR2D,SAASgJ,oBAAoB,UAAWvP,KAAKyS,UAAU,GACvD7P,EAAIE,MAAMc,uB,oBAsNd,WACI,IAAQnD,EAAST,KAAKC,MAAdQ,KACA+R,EAAkBxS,KAAKqK,MAAvBmI,cAER,OACI,cAAC,IAAD,CAAStE,MAAM,+BAAf,SACI,wBAAQC,QAASnO,KAAK8S,WAAYzS,UAAS,cAAkB,SAATI,EAAkB,SAAU,IAAML,MAAgB,SAATK,EAAkB,CAAEN,MAAOqS,GAAkB,GAA1I,SACI,cAAC,EAAD,CAAMtS,KAAK,iB,GAhPVI,iBA4PNiO,I,MAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE5J,KADgD4J,EAAjD5J,KACOE,MAD0C0J,EAA3C1J,MACQY,SADmC8I,EAApC9I,SACWX,QADyByJ,EAA1BzJ,QACUc,aADgB2I,EAAjB3I,gBAI7B6M,CAAyB+D,ICzQ3B4B,GAAoBtH,KAAOuH,IAAV,ssBCGxBC,G,4MAQF/J,MAAQ,CACJgK,gBAAiB,I,EAGrBC,iBAAmB,SAAC/J,GAChB,MACS,QADDA,EAGI,sBAAKnK,MAAO,CAAEiR,OAAQ,SAAtB,UACI,sBAAMjR,MAAO,CAACD,MAAO,WAArB,oBACA,sBAAMC,MAAO,CAACD,MAAO,WAArB,oBACA,sBAAMC,MAAO,CAACD,MAAO,WAArB,oBACA,sBAAMC,MAAO,CAACD,MAAO,WAArB,uBAII,qBAAKC,MAAO,CAAEiR,OAAQ,QAASkD,gBAAgB,6GAA+GC,qBAAsB,OAAQrU,MAAO,eAAnM,uC,EAIxBsU,sBAAwB,SAAClK,GACrB,OAAQA,GACJ,IAAK,QAAS,OAAO,qBAAKnK,MAAO,CAAED,MAAO,SAAUuU,WAAY,sBAAuBrD,OAAQ,SAA1E,0BACrB,IAAK,OAAQ,OAAO,qBAAKjR,MAAO,CAAEmI,WAAY,OAAQ8I,OAAQ,SAA1C,0BACpB,QAAS,OAAO,O,EAIxBsD,aAAe,SAACrP,GACZ,IAAQgJ,EAAa,EAAKrO,MAAlBqO,SACR,EAAwBhJ,EAAE4H,cAAcgE,QACxC5C,EADA,EAAQ/D,KAAR,EAAc7D,Q,4CAIlB,WACI,MAAsC1G,KAAKC,MAAnC8S,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eAEnB,OACI,cAAC,KAAD,CACI4B,QAAQ,QACRnF,UAAW,cACXG,QACI,eAACsE,GAAD,WACI,gCACI,qBAAK7T,UAAU,aAAf,wDACA,sBAAKA,UAAU,UAAf,UACI,qBAAK,YAAU,YAAY,aAAW,MAAMA,UAAS,qBAA8B,QAAd0S,EAAsB,SAAW,IAAM5E,QAASnO,KAAK2U,aAA1H,SAAyI3U,KAAKsU,iBAAiB,SAC/J,qBAAK,YAAU,YAAY,aAAW,GAAGjU,UAAS,qBAA8B,KAAd0S,EAAmB,SAAW,IAAM5E,QAASnO,KAAK2U,aAApH,SAAmI3U,KAAKsU,iBAAiB,YAGjK,gCACI,qBAAKjU,UAAU,aAAf,gCAEA,sBAAKA,UAAU,UAAf,UACI,qBAAK,YAAU,iBAAiB,aAAW,GAAGA,UAAS,qBAAmC,KAAnB2S,EAAwB,SAAW,IAAM7E,QAASnO,KAAK2U,aAA9H,SAA4I,iDAC5I,qBAAK,YAAU,iBAAiB,aAAW,QAAQtU,UAAS,qBAAmC,UAAnB2S,EAA6B,SAAW,IAAM7E,QAASnO,KAAK2U,aAAxI,SAAuJ3U,KAAKyU,sBAAsB,WAClL,qBAAK,YAAU,iBAAiB,aAAW,OAAOpU,UAAS,qBAAmC,SAAnB2S,EAA4B,SAAW,IAAM7E,QAASnO,KAAK2U,aAAtI,SAAqJ3U,KAAKyU,sBAAsB,mBAlBpM,SAwBI,sBAAKpU,UAAU,YAAf,UACKL,KAAKsU,iBAAiBvB,GACtB/S,KAAKyU,sBAAsBzB,Y,GAxEtB1S,iBA+EX8T,M,wCCpFFS,GAAmB,CAC5BC,OAAQ,CACJ,CACIhU,KAAM,UACNiU,KAAM,2BACNC,IAAK,qGACLC,QAAS,iGAEb,CACInU,KAAM,UACNiU,KAAM,eACNC,IAAK,qGACLC,QAAS,gGACT/U,KAAM,WAEV,CACIY,KAAM,gBACNiU,KAAM,iCACNC,IAAK,qGACLC,QAAS,sGACT/U,KAAM,WAEV,CACIY,KAAM,kBACNiU,KAAM,qBACNC,IAAK,qGACLC,QAAS,sGACT/U,KAAM,UAEV,CACIY,KAAM,mBACNiU,KAAM,uCACNC,IAAK,qGACLC,QAAS,oHACT/U,KAAM,WAGdgV,GAAI,CACA,CACIpU,KAAM,QACNiU,KAAM,iCACNC,IAAK,qGACLC,QAAS,yFACT/U,KAAM,QACNiV,aAAc,CAAC,0BAEnB,CACIrU,KAAM,UACNiU,KAAM,eACNC,IAAK,qGACLC,QAAS,4FACT/U,KAAM,UACNiV,aAAc,CAAC,4BClDdC,GAAqBxI,KAAOuH,IAAV,ixBCMzBkB,G,4MAOFhL,MAAQ,CACJ8K,aAAc,I,EA+BlBR,aAAe,SAACW,EAAM5O,IAElB6O,EAD4B,EAAKtV,MAAzBsV,iBACQD,EAAM5O,I,EAG1B8O,2BAA6B,SAAClQ,GAC1B,IAAQmQ,EAAYnQ,EAAE+F,OAAdoK,QACAF,EAAoB,EAAKtV,MAAzBsV,gBACAJ,EAAiB,EAAK9K,MAAtB8K,aAGJI,EAAgB,6BADhBE,GAC4CN,I,uDAvCpD,WACI,IAAQI,EAAoBvV,KAAKC,MAAzBsV,gBACJG,EfyPmC,WAAyC,IAAxC9U,EAAuC,uDAA7ByC,EAAMC,WAAW1C,QACnE2G,EAAM,GAaV,OAXwB,SAAlBoO,EAAmBvS,GAIrB,GAHIA,EAAI6G,QAAU7G,EAAI6G,OAAO2L,WAAaxS,EAAI6G,OAAO2L,UAAUC,cAC3DtO,EAAI4C,KAAJ,MAAA5C,EAAG,YAASnE,EAAI6G,OAAO2L,UAAUC,eAEjCzS,EAAIhC,UAAYgC,EAAIhC,SAASa,OAAS,EACtC,IAAK,IAAID,KAAKoB,EAAIhC,SACduU,EAAgBvS,EAAIhC,SAASY,IAIzC2T,CAAgB/U,GACT2G,EevQcuO,GACbX,EAAe,GACXD,EAAeL,GAAfK,GAAIJ,EAAWD,GAAXC,OACZiB,MAAMhO,KAAK,IAAIiO,IAAIN,IAAazR,SAAQ,SAAAgE,GACpC,IAAIgO,EAAO,KACI,OAAXhO,EAAEsC,OACF0L,EAAOf,EAAGpR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASmH,EAAEnH,SAEtB,WAAXmH,EAAEsC,OACF0L,EAAOnB,EAAOhR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASmH,EAAEnH,SAErCmV,GACAd,EAAahL,KAAb,MAAAgL,EAAY,YAASc,EAAKd,kBAGlC,IAAMe,EAAYH,MAAMhO,KAAK,IAAIiO,IAAIb,IACjCe,EAAUjU,OAAS,EACnBsT,EAAgB,4BAA4B,GAE5CA,EAAgB,2BAA4BW,GAEhDlW,KAAK8O,SAAS,CACVqG,aAAce,M,oBAqBtB,WAAU,IAAD,OACGf,EAAiBnV,KAAKqK,MAAtB8K,aACR,EAAyBnV,KAAKC,MAAtBO,EAAR,EAAQA,IAAK2V,EAAb,EAAaA,QACPC,EAAmB,WAAR5V,EAEjB,OACI,eAAC4U,GAAD,WACI,4DAAU,4CAAV,sBAAqC,sBAAM/U,UAAS,oBAAgB+V,EAAW,SAAW,UAArD,SAAkEA,EAAW,eAAO,iBAAzH,8EACA,qBAAI/V,UAAU,UAAd,UACI,gEAAW+V,EAAW,eAAO,eAA7B,SAAoC,sBAAM/V,UAAU,OAAhB,6BAApC,kBACA,sEAAU,sBAAMA,UAAU,OAAhB,uBAAV,0BACA,kOAAoC,sBAAMA,UAAU,OAAhB,2BAApC,qEAEJ,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,aAAf,8DAEI8U,EAAalT,OAAS,GACtB,sBAAK5B,UAAU,QAAf,UACI,cAAC,KAAD,CAAUoV,QAASU,EAAQE,yBAA0B/H,SAAUtO,KAAKwV,6BADxE,uFAEI,cAAC,KAAD,CACI5F,QACI,oBAAIxP,MAAO,CAAEkW,QAAS,aAAcjF,OAAQ,GAA5C,SACK8D,EAAatD,KAAI,SAAC0E,EAAGvU,GAAJ,OAAU,oBAAI5B,MAAO,CAAEkI,SAAU,QAAvB,SAA0CiO,GAAJvU,QAH9E,SAMI,cAAC,IAAD,CAAQuI,KAAK,OAAOnK,MAAO,CAAEkI,SAAS,OAAQgO,QAAS,EAAG5T,OAAQ,QAAlE,wCARR,4DAaJ,sBAAKrC,UAAU,QAAQD,MAAO,CAAED,MAAO,WAAvC,UACI,cAAC,KAAD,CAAUsV,QAASU,EAAQK,eAAgBC,UAAQ,EAACnI,SAAU,SAAChJ,GAAD,OAAO,EAAKqP,aAAa,iBAAkBrP,EAAE+F,OAAOoK,YADtH,0FAIA,qBAAKpV,UAAU,QAAQD,MAAO,CAAEsW,UAAW,MAAOvW,MAAO,WAAzD,iDACA,qBAAKE,UAAU,QAAQD,MAAO,CAAE4R,YAAa,OAAQ0E,UAAW,MAAOvW,MAAO,WAA9E,SACI,eAAC,KAAMwW,MAAP,CAAaF,UAAQ,EAAC/P,MAAOyP,EAAQS,UAAWtI,SAAU,SAAChJ,GAAD,OAAO,EAAKqP,aAAa,YAAarP,EAAE+F,OAAO3E,QAAzG,UACI,cAAC,KAAD,CAAOA,MAAM,WAAb,SAAwB,sBAAMtG,MAAO,CAAEkI,SAAU,QAAzB,8CACxB,cAAC,KAAD,CAAO5B,MAAM,QAAb,SAAqB,sBAAMtG,MAAO,CAAEkI,SAAU,QAAzB,iD,GA9FtBhI,iBA4GZiO,I,MAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE7J,IADO6J,EAAR7J,OAIG+N,CAAyB8G,IClH3BwB,GAAejK,KAAOuH,IAAV,u7BA0DZ2C,GAAoBlK,KAAOuH,IAAV,wUCpDtB4C,GAAYC,KAAZD,QAEFE,GAAU,CACZ,eACA,eACA,gBAGEC,G,4MAEF7M,MAAQ,CACJ8M,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,SAAU,IACVC,eAAe,EACf7V,aAAc,CACV2U,0BAA0B,EAC1BG,gBAAgB,EAChBI,UAAW,a,EAInBY,IAAM9G,IAAMC,Y,EAEZ8G,kBAAoB,kBAAM,EAAK3I,SAAS,CAAEqI,aAAc,EAAK9M,MAAM8M,e,EACnEO,eAAiB,kBAAM,EAAK5I,SAAS,CAAEsI,UAAW,EAAK/M,MAAM+M,Y,EAE7DO,UAAY,kBAAM,EAAK7I,SAAS,CAAEuI,SAAS,K,EAC3CO,WAAa,kBAAM,EAAK9I,SAAS,CAAEuI,SAAS,K,EAE5CQ,eAAiB,SAAC1T,GAAD,OAAW,EAAK2K,SAAS,CAAEwI,SAAUnT,K,EAEtDqI,mBAAqB,SAAC8I,EAAM5O,GACxB,IAAQhF,EAAiB,EAAK2I,MAAtB3I,aAER,EAAKoN,SAAS,CACVpN,aAAa,2BACNA,GADK,kBAEP4T,EAAO5O,O,EAKpBoR,OAAS,WACL,IAAQlX,EAAY,EAAKX,MAAjBW,QACAc,EAAiB,EAAK2I,MAAtB3I,aACR,EAAKoN,SAAS,CACVyI,eAAe,IAEnB1U,OAAOkV,OAAOC,YAAY,CACtBzN,KAAM,SACNhG,KAAM,CACF3D,UACAqX,SAAUlO,IACVrI,iBAEL,KACHmB,OAAOuM,iBAAiB,UAAW,EAAK8I,cAAc,I,EAG1DA,aAAe,SAAC5S,GACZ,IAAQiF,EAASjF,EAAEf,KAAXgG,KACA+M,EAAa,EAAKjN,MAAlBiN,SACK,mBAAT/M,IACA,EAAKuE,SAAS,CACVyI,eAAe,EACfJ,aAAa,IAEjBxP,IAAQmC,QAAR,UAAmBmN,GAAQK,GAA3B,iBACAzU,OAAO0M,oBAAoB,UAAW,EAAK2I,cAAc,K,4CAIjE,WACI,IAAQ1X,EAAQR,KAAKC,MAAbO,IACR,EAAkFR,KAAKqK,MAA/E8M,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,QAASC,EAAxC,EAAwCA,SAAU5V,EAAlD,EAAkDA,aAAc6V,EAAhE,EAAgEA,cAEhE,OACI,eAACV,GAAD,WACI,eAAC,IAAD,CAAQxW,UAAU,SAASuT,MAAM,QAAQrJ,KAAK,UAAU4D,QAASnO,KAAKyX,kBAAmBU,aAAcnY,KAAK4X,WAAYQ,aAAcpY,KAAK2X,UAA3I,UACI,sBAAKtX,UAAU,OAAf,UACI,cAAC,EAAD,CAAMH,KAAK,SAASE,MAAO,CAAEkI,SAAU,QAAUjI,UAAS,iBAAYgX,EAAU,QAAU,MAC1F,cAAC,EAAD,CAAMnX,KAAK,KAAKG,UAAU,UAHlC,2BAOA,cAAC,KAAD,CACI6N,MACI,sBAAK9N,MAAO,CAAEyN,SAAU,YAAxB,UACI,yDACA,cAAC,IAAD,CAAQtD,KAAK,OAAO+G,IAAKtR,KAAKwX,IAAKpX,MAAO,CAAEyN,SAAU,WAAYwK,IAAK,EAAGC,MAAO,OAAQhC,QAAS,EAAG5T,OAAQ,OAAQ6V,QAAS,QAAUJ,aAAcnY,KAAK0X,eAAgBU,aAAcpY,KAAK0X,eAA9L,SACI,cAAC,EAAD,CAAMxX,KAAK,MAAME,MAAO,CAAEsC,OAAQ,OAAQ8V,YAAa,cAInEnY,UAAW+W,EAAW,UAAY,GAClCvN,QAASsN,EACTsB,gBAAc,EACdjW,MAAO,IACPkW,OAAQzB,GAAQK,GAChBqB,WAAW,eACXC,eAAgBrB,EAChBsB,KAAM7Y,KAAK8X,OACXgB,SAAU9Y,KAAKyX,kBAjBnB,SAkBI,cAACX,GAAD,UACI,eAAC,KAAD,CAAMiC,YAAY,OAAOC,UAAW1B,EAAU2B,KAAK,QAAQ3K,SAAUtO,KAAK6X,eAA1E,UACI,cAACd,GAAD,CACImC,IACI,sBAAK7Y,UAAU,WAAf,UACI,wEACA,qBAAKA,UAAU,WAAf,+CAJZ,SAQI,cAAC,GAAD,CAAc8V,QAASzU,EAAc6T,gBAAiBvV,KAAKwM,sBADtD,GAGT,cAACuK,GAAD,CACImC,IACI,sBAAK7Y,UAAU,WAAf,UACI,2DACA,qBAAKA,UAAU,WAAf,qDAGRoW,SAAoC,IAA1BjW,EAAI0C,QAAQ,UAP1B,cAQS,GAGT,cAAC6T,GAAD,CACImC,IACI,sBAAK7Y,UAAU,WAAf,UACI,sDACA,qBAAKA,UAAU,WAAf,sCAJZ,cAOS,iB,GA/HhBC,iBA+INiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE7J,IADgB6J,EAAjB7J,IACMI,QADWyJ,EAAZzJ,WAIF2N,CAAyB2I,IC7J3BiC,GAAmBvM,KAAOC,KAAV,6KCGvBuM,G,4MAcF/O,MAAQ,CACJgP,WAAW,G,EAGfC,SAAW5I,IAAMC,Y,EAEjB4I,UAAY,WACa,EAAKtZ,MAAlBuZ,WAIR,EAAK1K,SAAS,CACVuK,WAAW,IAEfI,YAAW,WACPlT,SAAS6I,iBAAiB,QAAS,EAAKsK,iB,EAIhDA,WAAa,SAACpU,GACV,IAAQgJ,EAAa,EAAKrO,MAAlBqO,SACJ,EAAKgL,SAASxI,UAAY,EAAKwI,SAASxI,QAAQlC,MAAM+K,SAASrU,EAAE+F,UAC7DiD,GACAA,EAAS,EAAKgL,SAASxI,QAAQlC,MAAMlI,OAEzC,EAAKoI,SAAS,CAAEuK,WAAW,IAC3B9S,SAASgJ,oBAAoB,QAAS,EAAKmK,c,EAInDE,YAAc,YAEVtL,EADqB,EAAKrO,MAAlBqO,UACC,EAAKgL,SAASxI,QAAQlC,MAAMlI,OACrC,EAAKoI,SAAS,CAAEuK,WAAW,IAC3B9S,SAASgJ,oBAAoB,QAAS,EAAKmK,a,4CAG/C,WACI,MAAwD1Z,KAAKC,MAArDmB,EAAR,EAAQA,SAAUhB,EAAlB,EAAkBA,MAAO6Y,EAAzB,EAAyBA,KAAMY,EAA/B,EAA+BA,WAAYL,EAA3C,EAA2CA,SAG3C,OAFsBxZ,KAAKqK,MAAnBgP,UAIA,cAAC,KAAD,CACI/H,IAAKtR,KAAKsZ,SACVL,KAAMA,EACNnJ,WAAS,EACTgK,aAAc1Y,EACd2O,aAAc/P,KAAK4Z,YACnBxZ,MAAOyZ,IAEX,eAACV,GAAD,CAAkB/Y,MAAOA,EAAO+N,QAASnO,KAAKuZ,UAA9C,UACKnY,GAEIoY,GAAY,qBAAKxJ,IAAI,kGAAkGC,IAAI,Y,GApE3H3P,iBAAnB8Y,GAUKW,aAAe,CAClBP,UAAU,GA+DHJ,I,GAAAA,MC7EFY,GAAgBpN,KAAOuH,IAAV,irJCepB8F,G,4MAEF5P,MAAQ,CACJ0I,UAAW,MACXC,eAAgB,I,EAGpBkH,MAAQ,WACJ,IAAQtZ,EAAY,EAAKX,MAAjBW,QACRuF,EAASsB,KAAK0S,UAAUvZ,IACxBwZ,QAAQC,IAAI,gBAAYzZ,GACxB+G,IAAQmC,QAAQ,uE,EAGpBwQ,aAAe,SAAC/P,EAAM7D,GAClB,IAAQ9F,EAAY,EAAKX,MAAjBW,QACFiE,EAAU,eAAOjE,GACV,OAAT2J,IACA1F,EAAW/D,KAAO4F,GAET,OAAT6D,IACA1F,EAAW9D,MAAQ2F,GAEvBtB,GAAcP,I,EAGlB0V,kBAAoB,SAACjF,EAAM5O,GACvB,EAAKoI,SAAL,eACKwG,EAAO5O,K,4CAIhB,WAAU,IAAD,OACL,EAA+B1G,KAAKC,MAA5BO,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KAAMG,EAAnB,EAAmBA,QACnB,EAAsCZ,KAAKqK,MAAnC0I,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,eACXlS,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACd,OACI,eAACiZ,GAAD,WAEI,sBAAK3Z,UAAU,OAAf,UAEI,cAAC,IAAD,CAAS6N,MAAM,qBAAf,SACI,wBAAQC,QAAS3K,EAAanD,UAAS,cAAkB,WAATI,EAAoB,SAAU,IAA9E,SACI,cAAC,EAAD,CAAMP,KAAK,eAInB,cAAC,GAAD,CAAQ6S,UAAWA,EAAWC,eAAgBA,IAE9C,cAAC,GAAD,CAAaD,UAAWA,EAAWC,eAAgBA,EAAgB1E,SAAUtO,KAAKua,uBAGtF,qBAAKla,UAAU,aAAf,SACI,sBAAKA,UAAU,aAAf,UACI,cAAC,GAAD,CAAYD,MAAO,CAACkI,SAAU,OAAQC,WAAY,QAAUsR,WAAY,CAAErX,MAAO,QAAS+F,WAAY,QAAU+F,SAAU,SAAC5H,GAAD,OAAW,EAAK4T,aAAa,KAAM5T,IAA7J,SACK5F,IAEL,qCACA,cAAC,GAAD,CAAY0Y,SAAoC,IAA1BhZ,EAAI0C,QAAQ,UAAiB9C,MAAO,CAACkI,SAAU,QAAUuR,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAUgG,SAAU,SAAC5H,GAAD,OAAW,EAAK4T,aAAa,KAAM5T,IAA9K,SACK3F,SAKb,sBAAKV,UAAU,OAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,IAAD,CAAQkK,KAAK,UAAU4D,QAASnO,KAAKka,MAAO9Z,MAAO,CAAEoa,WAAY,QAAjE,0BACA,cAAC,GAAD,IACA,cAAC,GAAD,c,GAvEEla,iBAmFPiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE7J,IADsB6J,EAAvB7J,IACMC,KADiB4J,EAAlB5J,KACOG,QADWyJ,EAAZzJ,WAIR2N,CAAyB0L,I,UClG3BQ,GAAiB7N,KAAOuH,IAAV,wvDCOrBuG,G,4MAEFrQ,MAAQ,CACJsQ,aAAc,CAAC,KACfC,YAAa,GACbC,gBAAgB,EAChBC,aAAa,G,EASjBC,aAAe,SAACla,GACZ,MAAuC,EAAKZ,MAApCoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAEtB0F,EAAM,GAUV,OATI5F,IAAaR,IACboG,GAAO,0BAHa,EAAKoD,MAArByQ,aAKWxZ,IAAWT,IAC1BoG,GAAO,SAEP1F,IAAaV,IACboG,GAAO,WAEJA,G,EAGX+T,WAAa,SAAC1V,GACV,IAAQoB,EAAUpB,EAAE+F,OAAZ3E,MACR,EAA4B,EAAKzG,MAAzBqB,EAAR,EAAQA,OAAQV,EAAhB,EAAgBA,QACViE,EAAU,eAAOjE,GACVuC,EAAY7B,EAAQuD,GAC5B/D,KAAO4F,EACZ,IAAMuU,EAAUpY,OAAOD,IAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASQ,KAC3D2Z,IACaA,EAAQ7Z,SAAS0C,MAAK,SAAAd,GAAC,MAAe,SAAXA,EAAElC,QACrCsF,KAAOM,GAEhBtB,GAAcP,I,EAGlB+U,YAAc,SAACtU,GACX,EAAK0V,WAAW1V,GAChB,EAAKwJ,SAAS,CACV8L,YAAa,KAEjBlX,EAAa,K,EAGjBgW,WAAa,SAACpU,GACU,kBAAhBA,EAAE+F,OAAOxK,KAGb,EAAKiO,SAAS,CACV8L,YAAa,KAEjBlX,EAAa,IACb6C,SAASgJ,oBAAoB,YAAa,EAAKmK,c,EAGnDwB,UAAY,SAAC5V,GACTA,EAAE4H,cAAcrG,SAChBN,SAAS6I,iBAAiB,YAAa,EAAKsK,a,EAGhDyB,gBAAkB,SAACC,EAAM9V,GACF,EAAKrF,MAAhBqB,SACOgE,EAAE+V,KAAK7P,MAGtBzG,EAAeO,EAAE+V,KAAK7P,KACtB,EAAKsD,SAAS,CACV8L,YAAa,KAEjBlX,EAAa,IACbF,M,EAGJ8X,sBAAwB,SAAChW,EAAGiW,GACxB,IAAM1a,EAAK0a,EAAS/P,IACpB,EAAKsD,SAAS,CACV8L,YAAa/Z,IAEjBkE,EAAelE,GACf6C,EAAa7C,I,EAGjB2a,aAAe,SAAClW,GACZ,EAAKwJ,SAAS,CACV6L,aAAcrV,K,EAItBmW,mBAAqB,WACjB,IAAQpa,EAAa,EAAKpB,MAAlBoB,SACAsZ,EAAiB,EAAKtQ,MAAtBsQ,aACFe,EAAUra,EAASkC,MAAM,KACzB6X,EAAO,CAACM,EAAQ,IACtBA,EAAQC,QAAO,SAAC3Y,EAAGkQ,GACf,IAAM0I,EAAI5Y,EAAE,IAAIkQ,EAEhB,OADAkI,EAAKjR,KAAKyR,GACHA,KAEX,IAAMC,EAAO,YAAOlB,GACpBS,EAAKnX,SAAQ,SAAA2X,GACJC,EAAQlJ,SAASiJ,IAClBC,EAAQ1R,KAAKyR,MAGrB,EAAK9M,SAAS,CACV6L,aAAckB,K,EAItBC,KAAO,SAACxW,GACyB,MAA1BA,EAAE+V,KAAKpb,MAAM8b,UAAqBzW,EAAE+V,KAAKpb,MAAM+b,SAG9CtP,GAAS,CACL5B,SAAUxF,EAAE+V,KAAKpb,MAAM+b,SACvBjR,UAAWzF,EAAE2W,cACbjR,UAAW1F,EAAE+V,KAAKpb,MAAM8b,SACxB9Q,aAAc3F,EAAE+V,KAAKpb,MAAMic,eAAiB,MAAM,WANtDvU,IAAQC,MAAM,qD,EAWtBuU,cAAgB,SAAC7W,GACb,IAAQ6Q,EAAY7Q,EAAE4H,cAAcgE,QAA5BiF,QACQ,gBAAZA,GACAzS,EAAa,IAEjB,EAAKoL,SAAL,eACKqH,GAAW,EAAK9L,MAAM8L,M,EAI/BiG,iBAAmB,WACf,IADqB,EACrB,EAAuD,EAAKnc,MAApDyB,EAAR,EAAQA,aAA8BC,EAAtC,EAAsBD,aAAgBC,WAChC2H,EAAWzG,OAAOD,IAAIE,MAAM1B,SAAS2B,QAAO,SAAAC,GAAC,MAAe,OAAXA,EAAElC,MAA2B,UAAVkC,EAAElC,QACxEsF,EAAO,GAHU,cAIPkD,GAJO,IAIrB,2BAAwB,CAAC,IAAhBtH,EAAe,QACpBoE,EAAK+D,KAAKnI,EAAEZ,SAAS0C,MAAK,SAAAd,GAAC,MAAe,SAAXA,EAAElC,UALhB,8BAOrB,cAAcsF,EAAd,eAAoB,CAAV,KACJyD,SAAWlI,EAEjB6K,GAAmB,2BACZ9K,GADW,IAEdC,YAAaA,M,EAIrB0a,YAAc,SAACC,GACX,IAAQhb,EAAW,EAAKrB,MAAhBqB,OACR,EAAqD,EAAK+I,MAAlDwQ,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,YAAaF,EAArC,EAAqCA,YACrC,OAAO0B,EAECA,EAAKzK,KAAI,SAAAtN,GACL,IAAIgY,EAAW,MACf,GAAIhY,EAAK0F,QAAU1F,EAAK0F,OAAO2L,UAAW,CACtC,IAAQC,EAAiBtR,EAAK0F,OAAO2L,UAA7BC,aACFX,EAAKW,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAChCuK,EAASe,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QACtC2K,EAAGjT,OAAS6S,EAAO7S,OAAS,EAC5Bsa,EAAW,OAEPzH,EAAO7S,OAAS,IAChBsa,EAAW1H,GAAiBC,OAAOhR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASgU,EAAO,GAAGhU,QAAMZ,MAExEgV,EAAGjT,OAAS,IACZsa,EAAW1H,GAAiBK,GAAGpR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASoU,EAAG,GAAGpU,QAAMZ,OAI5E,MAAO,CACHsL,IAAKjH,EAAK1D,GACVR,UAAW,EAAK0a,aAAaxW,EAAK1D,IAClCX,KAAM,cAAC,EAAD,CAAMA,KAAMqc,GAAY,MAAOpc,MAAOoE,EAAKpE,QACjD+N,MACI,sBAAK7N,UAAU,YAAf,UACI,+BAESya,GAAexZ,IAAWiD,EAAK1D,IAAO+Z,IAAgBrW,EAAK1D,GAExD,+BACI,cAAC,KAAD,CAAOiP,WAAS,EAACjP,GAAG,gBAAgB6F,MAAOnC,EAAKzD,KAAMV,MAAO,CAAEoC,MAAO,SAAWyW,KAAK,QAAQ3K,SAAU,EAAK0M,WAAYyB,QAAS,EAAKvB,UAAWnL,aAAc,EAAK6J,gBAEvKrV,EAAKzD,OAGnB,uBAAMT,UAAU,WAAhB,UAEQwa,GAAkBtW,EAAK0F,QAAU1F,EAAK0F,OAAOyS,OAASnY,EAAK0F,OAAOyS,MAAMC,SACxE,qBAAKvc,MAAO,CAAEoC,MAAO,QAAUwN,IAAI,kGAAkGC,IAAI,KAGzI4K,GAAkBtW,EAAK0F,QAAU1F,EAAK0F,OAAOC,MAAQ3F,EAAK0F,OAAOC,KAAKjI,OAAS,GAC3E,uBAAM5B,UAAU,WAAhB,UACI,qBAAK2P,IAAI,kGAAkGC,IAAI,KAC/G,+BAAO1L,EAAK0F,OAAOC,KAAKjI,kBAOhDb,SAAU,EAAKib,YAAY9X,EAAKnD,cAG1C,I,wDA7MV,SAAmBwb,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAClCrB,KAAKyb,uB,oBA8Mb,WACI,MAA4Czb,KAAKC,MAAzCW,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,SAAUK,EAA3B,EAA2BA,aAC3B,EAAmE1B,KAAKqK,MAAhEsQ,EAAR,EAAQA,aAAcE,EAAtB,EAAsBA,eAAgBC,EAAtC,EAAsCA,YAAaF,EAAnD,EAAmDA,YAC3CjZ,EAAeD,EAAfC,WACAb,EAAiBF,EAAjBE,KAAMmJ,EAAWrJ,EAAXqJ,OACd,OACI,eAACwQ,GAAD,WACI,sBAAKpa,UAAU,UAAf,UACI,cAAC,IAAD,CAAS6N,MAAM,iCAAf,SACI,wBAAQ,eAAa,iBAAiBC,QAASnO,KAAKmc,cAAe9b,UAAS,cAASwa,EAAiB,SAAU,IAAhH,SACI,cAAC,EAAD,CAAM3a,KAAK,WAAWE,MAAO,CAAEkI,SAAU,QAAUnI,MAAM,yBAGjE,cAAC,IAAD,CAAS+N,MAAM,yGAAf,SACI,wBAAQ,eAAa,cAAcC,QAASnO,KAAKmc,cAAe9b,UAAS,cAASya,EAAc,SAAU,IAA1G,SACI,cAAC,EAAD,CAAM5a,KAAK,gBAAgBE,MAAO,CAAEkI,SAAU,QAAUnI,MAAM,yBAGtE,cAAC,IAAD,CAAS+N,MAAM,+DAAf,SACI,wBAAQC,QAASnO,KAAKoc,iBAAkB/b,UAAS,cAASsB,EAAa,SAAU,IAAjF,SACI,cAAC,EAAD,CAAMzB,KAAK,OAAOC,MAAM,4BAIpC,cAAC,KAAD,CACI4c,SAAUlC,EACVmC,UAAW,CAAE9c,MAAM,GACnB+c,UAAW,kBAAM,GACjBC,aAAc,CAAC7b,GACfsZ,aAAcA,EACdwC,SAAUnd,KAAKwb,aACf4B,cAAepd,KAAKsb,sBACpB5J,SAAU1R,KAAKmb,gBACfkC,OAAQrd,KAAK8b,KACbwB,SACI,CACI,CACI9R,IAAK,IACLtL,KAAM,cAAC,EAAD,CAAMA,KAAK,QACjBG,UAAWL,KAAK+a,aAAa,KAC7B7M,MACI,sBAAK7N,UAAU,YAAf,UACI,+BAEwB,MAAhBua,EAEI,+BACI,cAAC,KAAD,CAAO9K,WAAS,EAACjP,GAAG,gBAAgB6F,MAAO5F,EAAMV,MAAO,CAAEoC,MAAO,SAAWyW,KAAK,QAAQ3K,SAAUtO,KAAKgb,WAAYyB,QAASzc,KAAKkb,UAAWnL,aAAc/P,KAAK4Z,gBAEtK9Y,IAGV,uBAAMT,UAAU,WAAhB,UAEQwa,GAAkB5Q,GAAUA,EAAOyS,OAASzS,EAAOyS,MAAMC,SACzD,qBAAKvc,MAAO,CAAEoC,MAAO,QAAUwN,IAAI,kGAAkGC,IAAI,KAGzI4K,GAAkB5Q,GAAUA,EAAOC,MAAQD,EAAOC,KAAKjI,OAAS,GAChE,uBAAM5B,UAAU,WAAhB,UACI,qBAAK2P,IAAI,kGAAkGC,IAAI,KAC/G,+BAAOhG,EAAOC,KAAKjI,kBAMvCb,SAAWR,GAAWA,EAAQQ,SAAYpB,KAAKqc,YAAYzb,EAAQQ,UAAY,c,GA5RxFd,iBA2SRiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADqDgJ,EAAtDhJ,SACWC,OAD2C+I,EAA5C/I,OACSC,SADmC8I,EAApC9I,SACWX,QADyByJ,EAA1BzJ,QACUc,aADgB2I,EAAjB3I,gBAIlC6M,CAAyBmM,I,4DClT3B6C,GAAc3Q,KAAOuH,IAAV,kiDCMhB9D,GAAWC,KAAXD,OAEFmN,GAAc,CAChB,CACIhS,IAAK,KACL9E,MAAO,IAEX,CACI8E,IAAK,OACL9E,MAAO,UAIT+W,GAAgB,CAClB,CACIjS,IAAK,OACL9E,MAAO,UAIXgX,GAAc,KAEZC,G,4MACFtT,MAAQ,CACJuT,WAAY,GACZC,UAAW,GACXC,WAAY,GACZC,YAAY,EACZC,UAAW,M,EAGfC,QAAUvN,IAAMC,Y,EAYhBvJ,OAAS,WACL,MAA8B,EAAKnH,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZ2D,EAAOpB,EAAY9B,EAAUT,GAC7Bgd,EACFrZ,EAAK0F,QAAU1F,EAAK0F,OAAOyS,MAEnBnY,EAAK0F,OAAOyS,MAEZ,CACIwB,MAAM,EACNC,cAAe,OACfC,qBAAsB,GACtBzB,QAAS,IAGzB,EAAK7N,SAAS,CACV8O,aACAE,WAAYF,EAAWS,WAAa,CAChC,CACI7S,IAAK,KACL9E,MAAO,IAEX,CACI8E,IAAK,OACL9E,MAAO,YAGhB,WACC,EAAKuX,QAAQnN,QAAQwN,cACrB,IAAMzZ,EAAU,eAAOjE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIyS,MAAM,2BACCkB,GADF,IAEDS,UAAWT,EAAWS,WAAab,OAG3CpY,GAAcP,O,EAItB0Z,YAAc,SAACjZ,GACX,IAAQuY,EAAc,EAAKxT,MAAnBwT,UACR,EAA4BvY,EAAE+F,OAAO6F,QAA7B/M,EAAR,EAAQA,MAAMqa,EAAd,EAAcA,UACVX,IAAcW,EAAYra,EAAQ,IAClC,EAAK2K,SAAS,CACV+O,UAAWW,EAAYra,EAAQ,KAGvCoC,SAAS6I,iBAAiB,QAAS,EAAKqP,a,EAG5CC,aAAe,SAACpZ,GACZ,IAAQuY,EAAc,EAAKxT,MAAnBwT,UACM,QAAVvY,EAAEkG,MACE,OAAOvI,KAAK4a,GACZ,EAAK/O,SAAS,CACV+O,UAAUA,EAAU3X,QAAQ,MAAM,WAGtC,EAAK4I,SAAS,CACV+O,UAAU,OAAO5X,SAAS,SAAS0Y,KAAKd,GAAW,IAAI,O,EAMvEe,iBAAmB,SAAClY,GAChB,IAAMmY,EAAqB,SAAVnY,EAAmB8W,GAAcC,GAClD,EAAK3O,SAAS,CACVgP,WAAYe,IAEhB,EAAKC,aAAaD,I,EAGtBE,mBAAqB,SAACzZ,GAClB,MAA6CA,EAAE+F,OAA/C,IAAM6F,QAAU/M,EAAhB,EAAgBA,MAAOqa,EAAvB,EAAuBA,UAAa9X,EAApC,EAAoCA,MACpCvC,GAASA,EACT,IAAQ2Z,EAAe,EAAKzT,MAApByT,WAEFkB,EAAa,YAAOlB,GACtB3Z,IAAU6a,EAAc/c,QACxB+c,EAAc7U,KAAK,CACfqB,IAAI,GACJ9E,MAAM,KAGdsY,EAAc7a,GAAOqa,GAAa9X,EAClC,EAAKoI,SAAS,CACVgP,WAAYkB,IAEhB,EAAKF,aAAaE,I,EAGtBC,aAAe,SAAC3Z,GACZ,IAAQnB,EAAUmB,EAAE+F,OAAO6F,QAAnB/M,MACA2Z,EAAe,EAAKzT,MAApByT,WACFkB,EAAa,YAAOlB,GAC1BkB,EAAcnU,QAAQ1G,EAAO,GAC7B,EAAK2K,SAAS,CACVgP,WAAYkB,EACZnB,UAAW,KAEf,EAAKiB,aAAaE,I,EAGtBE,iB,yCAAmB,WAAOC,EAAeC,GAAtB,0BAAApc,EAAA,+DACe,EAAK/C,MAA3BoB,EADO,EACPA,SAAUT,EADH,EACGA,QACVkd,EAAe,EAAKzT,MAApByT,WACFjZ,EAHS,eAGQjE,IACjB2D,EAAOpB,EAAY9B,EAAUwD,IAC9BoF,OAAL,2BACO1F,EAAK0F,QADZ,IAEIyS,MAAM,uCACCnY,EAAK0F,OAAOyS,OACZ0C,GAFF,IAGDf,UAAWP,MAGnB1Y,GAAcP,GAbC,SAcT,EAAKwa,YAAY9a,GAdR,2C,0DAiBnBua,aAAe,SAAChB,GACZ,MAA8B,EAAK7d,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZiE,EAAU,eAAOjE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIyS,MAAM,2BACEnY,EAAK0F,OAAS1F,EAAK0F,OAAOyS,MAAQ,IADrC,IAED2B,UAAWP,MAGnB1Y,GAAcP,GACd,EAAKwa,YAAY9a,I,EAGrBka,WAAa,SAACnZ,GACIiB,SAASsI,eAAe,cAC3B8K,SAASrU,EAAE+F,UAClB,EAAKyD,SAAS,CACV+O,UAAW,KAEftX,SAASgJ,oBAAoB,QAAS,EAAKkP,c,EAInDa,Y,wBAAc,+DAAAtc,EAAA,2DAC8D,EAAK/C,MAArEoB,EADE,EACFA,SAAUT,EADR,EACQA,QADR,IACiBA,QAAWE,EAD5B,EAC4BA,KAAMC,EADlC,EACkCA,MADlC,EAC2CL,eAD3C,oBAGDI,EAHC,uBAIF6G,IAAQC,MAAM,oDAJZ,0CAOsB6F,IAAMC,KAAK,4EAA6E,CAChH6R,YAAaze,EACb0e,YAAaze,EAAQ,iBATnB,UAW0B,KAJ1B0e,EAPA,QAWYlb,KAAKyJ,KAXjB,iBAYFrG,IAAQmC,QAAQ,oDAChBwC,GAAqBmT,EAAclb,KAAKA,KAAK1D,IAb3C,+BAeF8G,IAAQC,MAAM,wCAfZ,kCAmBJ/C,EAnBI,eAmBajE,GAnBb,EAoByB,EAAKyJ,MAAhCyT,EApBE,EAoBFA,WAAYF,EApBV,EAoBUA,WACdrZ,EAAOpB,EAAY9B,EAAUwD,GAC7B6a,EAAW,EAAKzB,QAAQnN,QAAQ6O,iBAtB5B,UAuBQlS,IAAMC,KAAK,oFAAX,2BACXgS,GADW,IAEdrB,UAAWP,EAAWjM,KAAI,SAAC2K,GAAD,MAAQ,CAC9BoD,wBAAyBpD,EAAEhR,IAC3BqU,eAAgBrD,EAAE9V,UAEtBoZ,SAAUvb,EAAKzD,KACfif,UAAW,EAAK9f,MAAMS,kBA9BhB,WAiCY,KAVhB6G,EAvBI,QAiCFhD,KAAKyJ,KAjCH,0BAkC8BzG,EAAIhD,KAAKA,KAArC1D,EAlCF,EAkCEA,GAAImf,EAlCN,EAkCMA,OAAQT,EAlCd,EAkCcA,YAlCd,UAmCA9R,IAAMC,KAAK,+EAAgF,CAC7F7M,KACAof,UAAU,EACVV,cACAS,WAvCE,QA0CNzb,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIyS,MAAM,2BACEnY,EAAK0F,OAAS1F,EAAK0F,OAAOyS,MAAQ,IADrC,IAEDC,QAAS9b,MAGjB,EAAKiO,SAAS,CACV8O,WAAW,2BACJA,GADG,IAENjB,QAAS9b,MAGjBuE,GAAcP,GACd8C,IAAQmC,QAAQ,wCAxDV,wBA0DNnC,IAAQC,MAAML,EAAIhD,KAAKA,KAAK,GAAGoD,SA1DzB,4C,EA8DduY,Y,wBAAc,uCAAAld,EAAA,+DACoB,EAAK/C,MAA3BoB,EADE,EACFA,SAAUT,EADR,EACQA,QACVgd,EAAe,EAAKvT,MAApBuT,WACF/Y,EAHI,eAGajE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GAJzB,SAKQ4I,IAAMC,KAAK,0EAA2E,CACpG7M,GAAI+c,EAAWjB,UANT,OAQY,IARZ,OAQFpY,KAAKyJ,OACTzJ,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIyS,MAAM,2BACEnY,EAAK0F,OAAS1F,EAAK0F,OAAOyS,MAAQ,IADrC,IAEDC,QAAS,OAGjB,EAAK7N,SAAS,CACV8O,WAAW,2BACJA,GADG,IAENjB,QAAS,OAGjBvX,GAAcP,GACd8C,IAAQmC,QAAQ,yCAvBV,2C,EA4BduV,Y,yCAAc,WAAO9a,GAAP,oBAAAvB,EAAA,yDACF8a,EAAe,EAAKzT,MAApByT,WACF4B,EAAW,EAAKzB,QAAQnN,QAAQ6O,kBAClCpb,EAAK0F,OAAOyS,MAAMC,QAHZ,uBAIN,EAAK7N,SAAS,CACViP,YAAY,IALV,SAOYtQ,IAAMC,KAAK,6EAAX,2BACXgS,GADW,IAEd7e,GAAI0D,EAAK0F,OAAOyS,MAAMC,QACtB0B,UAAWP,EAAWjM,KAAI,SAAC2K,GAAD,MAAQ,CAC9BoD,wBAAyBpD,EAAEhR,IAC3BqU,eAAgBrD,EAAE9V,UAEtBoZ,SAAUvb,EAAKzD,QAdb,OAgBgB,KAThByG,EAPA,QAgBEhD,KAAKyJ,MACT,EAAKc,SAAS,CACVkP,UAAW,IAEXN,IACAyC,aAAazC,IAEjBA,GAAcjE,YAAW,WACrB,EAAK3K,SAAS,CACVkP,UAAW,SAEhB,OAECN,IACAyC,aAAazC,IAEjB,EAAK5O,SAAS,CACVkP,UAAWzW,EAAIhD,KAAKA,KAAK,GAAGoD,WAGpC,EAAKmH,SAAS,CACViP,YAAY,IArCV,2C,6GAzPd,WACI/d,KAAKoH,W,gCAGT,SAAmBwV,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAClCrB,KAAKoH,W,oBA6Rb,WAAU,IAAD,OACL,EAAqEpH,KAAKqK,MAAlEwT,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYF,EAA/B,EAA+BA,WAAYG,EAA3C,EAA2CA,WAAYC,EAAvD,EAAuDA,UACvD,EAAoChe,KAAKC,MAAjCS,EAAR,EAAQA,eACAI,EADR,EAAwBF,QAChBE,KACR,OACI,eAACyc,GAAD,WACI,eAAC,KAAD,CAAMjM,IAAKtR,KAAKie,QAAShF,KAAK,QAAQmH,cAAa,eAAOxC,GAAcyC,eAAgBrgB,KAAKkf,iBAA7F,UACI,cAAC,KAAKoB,KAAN,CACI/O,MAAM,2BACNzQ,KAAK,OAFT,SAII,eAAC,KAAM6V,MAAP,WACI,cAAC,KAAD,CAAOjQ,OAAO,EAAd,gCACA,cAAC,KAAD,CAAOA,OAAO,EAAd,qBAGR,cAAC,KAAK4Z,KAAN,CAAW/O,MAAM,2BAAOzQ,KAAK,gBAA7B,SACI,eAAC,KAAD,CAAQV,MAAO,CAAEoC,MAAO,SAAW8L,SAAUtO,KAAK4e,iBAAlD,UACI,cAAC,GAAD,CAAQlY,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,SAAd,yBAGR,qBAAKtG,MAAO,CAAEkI,SAAU,OAAQ5F,OAAQ,OAAQ6d,WAAY,QAA5D,4CAEA,qBAAKlgB,UAAU,SAAf,SACI,uBAAOA,UAAW,iBAAkBmgB,OAAO,IAAI3f,GAAG,aAAlD,SACI,kCACI,+BACI,oBAAIT,MAAO,CAAEoC,MAAM,OAAOoP,UAAU,YACpC,oBAAIxR,MAAO,CAAEoC,MAAM,OAAnB,iBACA,0CAGAsb,EAAW2C,OAAO,CAACjV,IAAK,GAAI9E,MAAO,KAAKmL,KAAI,SAAC2K,EAAGxa,GAC5C,OACI,+BAEQA,IAAM8b,EAAW7b,OAAS,uBAAQ,oBAAI5B,UAAU,SAAS,aAAY2B,EAAGmM,QAAS,EAAK8Q,aAApD,eAEtC,oBAAI5e,UAAWwd,IAAS,aAAW7b,GAAK,UAAU,GAAlD,SACI,uBAAO0E,MAAO8V,EAAEhR,IAAK,aAAYxJ,EAAG,iBAAgB,MAAOya,QAAS,EAAK8B,YAAajQ,SAAU,EAAKyQ,mBAAoB2B,UAAW,EAAKhC,iBAE7I,oBAAIre,UAAWwd,IAAS,eAAa7b,GAAK,UAAU,GAApD,SACI,uBAAO0E,MAAO8V,EAAE9V,MAAO,aAAY1E,EAAG,iBAAgB,QAASya,QAAS,EAAK8B,YAAajQ,SAAU,EAAKyQ,mBAAoB2B,UAAW,EAAKhC,mBAR5I1c,aAkBjC,cAAC,KAAKse,KAAN,CAAW/O,MAAM,eAAKzQ,KAAK,uBAA3B,SACI,cAAC,KAAM6f,SAAP,CAAgB9Q,YAAY,eAAKzP,MAAO,CAAEkI,SAAU,eAG5D,qBAAKjI,UAAU,SAAf,SAEQK,EAESkd,EAAWjB,QACN,cAAC,IAAD,CAAQpS,KAAK,SAAS0O,KAAK,QAAQ9K,QAASnO,KAAKkgB,YAAjD,sCACA,cAAC,IAAD,CAAQ3V,KAAK,UAAU0O,KAAK,QAAQ9K,QAASnO,KAAKsf,YAAlD,sCAEN,cAAC,KAAD,CAAS7P,UAAU,OAAOG,QAAS,uBAAMxP,MAAO,CAAEkI,SAAU,QAAzB,wGAAmD,iCAASxH,IAA5D,iDAAnC,SACI,cAAC,IAAD,CAAQyJ,KAAK,UAAU0O,KAAK,QAAQ9K,QAASnO,KAAKsf,YAAlD,0CAIpB,sBAAKjf,UAAU,WAAf,UACI,cAAC,KAAD,CAAM4Y,KAAK,QAAQ2H,SAAU7C,IAEzBC,IAEyB,kBAAdA,EAEC,cAAC,KAAD,CACIvO,UAAU,OACVG,QACI,uBAAMxP,MAAO,CAAEkI,SAAU,QAAzB,UACI,kEACA,uBACA,+BAAO0V,OANnB,SASI,sBAAM3d,UAAU,QAAhB,qBAEN,sBAAMA,UAAU,UAAhB,2C,GAtYdC,iBAoZLiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE3J,eADqC2J,EAAtC3J,eACiBW,SADqBgJ,EAAtBhJ,SACWT,QADWyJ,EAAZzJ,WAIvB2N,CAAyBoP,I,8BChb3BkD,GAA2BjU,KAAOuH,IAAV,ujBCM/B2M,G,4MASFzE,YAAc,SAACC,GACX,IAAQyE,EAAe,EAAK9gB,MAApB8gB,WAER,OAAOzE,EAEHA,EAAKzK,KAAI,SAAAtN,GACL,IAAIgY,EAAW,MACf,GAAIhY,EAAK0F,QAAU1F,EAAK0F,OAAO2L,UAAW,CACtC,IAAQC,EAAiBtR,EAAK0F,OAAO2L,UAA7BC,aACFX,EAAKW,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAChCuK,EAASe,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QACtC2K,EAAGjT,OAAS6S,EAAO7S,OAAS,EAC5Bsa,EAAW,OAEPzH,EAAO7S,OAAS,IAChBsa,EAAW1H,GAAiBC,OAAOhR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASgU,EAAO,GAAGhU,QAAMZ,MAExEgV,EAAGjT,OAAS,IACZsa,EAAW1H,GAAiBK,GAAGpR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASoU,EAAG,GAAGpU,QAAMZ,OAI5E,MAAO,CACHwG,MAAOnC,EAAK1D,GACZX,KAAM,cAAC,EAAD,CAAMA,KAAMqc,GAAY,MAAOpc,MAAOoE,EAAKpE,QACjDE,UAAW,YACXoW,SAAUsK,IAAexc,EAAK1D,GAC9BqN,MACI,sBAAK7N,UAAU,YAAf,UACI,+BAAOkE,EAAKzD,OACZ,uBAAMT,UAAU,WAAhB,UAEQkE,EAAK0F,QAAU1F,EAAK0F,OAAOyS,OAASnY,EAAK0F,OAAOyS,MAAMC,SACtD,qBAAKvc,MAAO,CAAEoC,MAAO,QAAUwN,IAAI,kGAAkGC,IAAI,KAGzI1L,EAAK0F,QAAU1F,EAAK0F,OAAOC,MAAQ3F,EAAK0F,OAAOC,KAAKjI,OAAS,GAC7D,uBAAM5B,UAAU,WAAhB,UACI,qBAAK2P,IAAI,kGAAkGC,IAAI,KAC/G,+BAAO1L,EAAK0F,OAAOC,KAAKjI,kBAM5Cb,SAAU,EAAKib,YAAY9X,EAAKnD,cAGtC,I,EAGVuT,aAAe,SAACrP,IAEZgJ,EADqB,EAAKrO,MAAlBqO,UACChJ,I,4CAGb,WACI,MAA+CtF,KAAKC,MAA5CyG,EAAR,EAAQA,MAAOhE,EAAf,EAAeA,OAAQ9B,EAAvB,EAAuBA,QAASmgB,EAAhC,EAAgCA,WAEhC,OACI,cAACF,GAAD,UACI,cAAC,KAAD,CACIG,UAAU,EACVC,YAAU,EACVC,UAAQ,EACR9gB,MAAO,CAAEoC,MAAO,QAChB2e,WAAYze,EACZmN,YAAa,2BACbuR,YAAU,EACVC,sBAAoB,EACpB/S,SAAUtO,KAAK2U,aACfjO,MAAOA,EACP4W,SACI,CACI,CACI5W,MAAO,IACPxG,KAAM,cAAC,EAAD,CAAMA,KAAK,QACjBG,UAAW,YACX6N,MAAOtN,EAAQE,KACf2V,SAAyB,MAAfsK,EACV3f,SAAWR,GAAWA,EAAQQ,SAAYpB,KAAKqc,YAAYzb,EAAQQ,UAAY,a,GAzF9Ed,iBAwGlBiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEzJ,QADWyJ,EAAZzJ,WAIG2N,CAAyBuS,I,UC9G3BQ,GAAmB1U,KAAOuH,IAAV,iYCMvBoN,G,4MASFlX,MAAQ,CACJ4N,SAAU,GACVuJ,OAAQ,I,EAaZC,aAAe,WACX,MAA+E,EAAKxhB,MAA5EsK,EAAR,EAAQA,KAAYmX,EAApB,EAAcnd,KAAyBlD,EAAvC,EAAuCA,SAAUT,EAAjD,EAAiDA,QAAS0N,EAA1D,EAA0DA,SAAUqT,EAApE,EAAoEA,OAChEC,EAAW,GACf,GAAIF,GAAqBG,OAAOzG,KAAKsG,GAAmBzf,OAAS,EAEzD2f,EADAD,EACQ,2BAAQD,GAAR,IAA2B7gB,GAAI8gB,IAE/B,2BAAQD,GAAR,IAA2B7gB,GAAI,SAExC,CACH,IAAMU,EAAWF,EAASkC,MAAM,KAAKtB,OAAS,EAAIZ,EAASkC,MAAM,KAAKkH,MAAM,GAAI,GAAGC,KAAK,KAAMrJ,EACxFkD,EAAOpB,EAAY9B,EAAUT,GAC7B+J,EAASpJ,IAAaF,EAAWkD,EAAOpB,EAAY5B,EAAUX,GACpE,OAAQ2J,GACJ,IAAK,SACDqX,EAAW,CACP/gB,GAAI,GACJC,KAAM,OAASyD,EAAK1D,GACpBqN,MAAO3J,EAAKzD,KACZghB,MAAOnX,EAAO7J,MAElB,MAEJ,IAAK,YAWL,IAAK,SACD8gB,EAAW,CACP/gB,GAAI,GACJC,KAAM,OAASyD,EAAK1D,GACpBqN,MAAO3J,EAAKzD,KACZghB,MAAOnX,EAAO7J,KACdihB,UAAU,OAAD,OAASxd,EAAK1D,GAAd,aACTwF,UAAU,GAQtB,EAAKyI,SAAS,CAAE0S,OAAQjd,EAAK1D,KAEjC,EAAKiO,SAAS,CACVmJ,SAAU2J,IAEdtT,EAASsT,I,EAGbI,eAAiB,SAAC1M,EAAM5O,GACpB,IAAQuR,EAAa,EAAK5N,MAAlB4N,SACA3J,EAAa,EAAKrO,MAAlBqO,SACF2T,EAAW,eAAOhK,GACxBgK,EAAY3M,GAAQ5O,EACpB,EAAKoI,SAAS,CACVmJ,SAAUgK,IAEd3T,EAAS2T,I,uDA3Eb,WACIjiB,KAAKyhB,iB,gCAGT,SAAmB7E,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAAYub,EAAUrS,OAASvK,KAAKC,MAAMsK,MAC5EvK,KAAKyhB,iB,oBAwEb,WAAU,IAAD,OACL,EAA6BzhB,KAAKqK,MAA1B4N,EAAR,EAAQA,SAAUuJ,EAAlB,EAAkBA,OACZU,EAAWL,OAAOzG,KAAKnD,GAE7B,OACI,cAACqJ,GAAD,UACI,sBAAKjhB,UAAU,aAAf,UAGQ6hB,EAASvP,SAAS,OAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,0CAAhC,SACI,sBAAM7N,UAAU,YAAhB,wBAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,KAAMtb,IAA1H,SAAmIuR,EAASpX,QAMhJqhB,EAASvP,SAAS,SAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,0JAAhC,SACI,sBAAM7N,UAAU,YAAhB,0BAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,OAAQtb,IAA5H,SAAqIuR,EAASnX,UAMlJohB,EAASvP,SAAS,UAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,uLAAhC,SACI,sBAAM7N,UAAU,YAAhB,2BAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,QAAStb,IAA7H,SAAsIuR,EAAS/J,WAMnJgU,EAASvP,SAAS,UAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAO,6NAAoC,uBAApC,wMAAjC,SACI,sBAAM7N,UAAU,YAAhB,2BAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,QAAStb,IAA7H,SAAsIuR,EAAS6J,WAMnJI,EAASvP,SAAS,cAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,2JAAhC,SACI,sBAAM7N,UAAU,YAAhB,+BAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,YAAatb,IAAjI,SAA0IuR,EAAS8J,eAMvJG,EAASvP,SAAS,aAClB,sBAAKtS,UAAU,QAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,mLAAhC,SACI,sBAAM7N,UAAU,YAAhB,8BAEJ,cAAC,KAAD,CAAQ4Y,KAAK,QAAQ7Y,MAAO,CAAEoY,YAAa,QAAU/C,QAASwC,EAAS5R,SAAUiI,SAAU,SAACmH,GAAD,OAAa,EAAKuM,eAAe,WAAYvM,EAAO,cAAU+L,EAAV,YAA6B/L,MAExKwC,EAAS5R,UAAY,cAAC,GAAD,CAAYwT,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAKsb,eAAe,WAAYtb,IAAhI,SAAyIuR,EAAS5R,uB,GAnK9K/F,iBAkLViO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADqBgJ,EAAtBhJ,SACWT,QADWyJ,EAAZzJ,WAIP2N,CAAyBgT,ICxL3BY,GAAiBvV,KAAOuH,IAAV,+GCQnB9D,GAAWC,KAAXD,OACF+R,GAAkB,GAElBC,G,4MAmBFC,gBAAkB,SAAClf,GACf,IAAMmf,EAAM,eAAOnf,GACnB,EAA2B,EAAKnD,MAAxBqO,EAAR,EAAQA,SAAUpE,EAAlB,EAAkBA,UACAsY,IAAdD,EAAO1hB,IACPyN,EAAS,2BACFpE,GADC,IAEJyX,OAAQY,EAAO1hB,GACfoX,SAAUsK,YAEPA,EAAO1hB,IAEdyN,EAAS,2BACFpE,GADC,IAEJ+N,SAAUsK,M,EAKtBE,eAAiB,SAAClY,GACd,MAA2B,EAAKtK,MAAxBqO,EAAR,EAAQA,SAAUpE,EAAlB,EAAkBA,KAElBoE,EAAS,2BACFpE,GADC,IAEJgY,SAAU3X,M,EAIlBmY,SAAW,SAACC,GACR,MAAqC,EAAK1iB,MAAlCkE,EAAR,EAAQA,MAAO9C,EAAf,EAAeA,SAAUT,EAAzB,EAAyBA,QACnBiE,EAAU,eAAOjE,GACjBya,EAAOlY,EAAY9B,EAAUwD,GAC7B+d,EAAazf,EAAYwf,EAAU9d,GAEnCge,EAAUxH,EAAKpR,OAAOC,KACtB4Y,EAAWF,EAAW3Y,QAAU2Y,EAAW3Y,OAAOC,KAAQ0Y,EAAW3Y,OAAOC,KAAO,GAEzF4Y,EAAQ3Y,KAAK0Y,EAAQ1e,IACrB0e,EAAQhY,OAAO1G,EAAO,GAEtBkX,EAAKpR,OAAL,2BACOoR,EAAKpR,QADZ,IAEIC,KAAM2Y,IAGVD,EAAW3Y,OAAX,2BACO2Y,EAAW3Y,QADlB,IAEIC,KAAM4Y,IAEV1d,GAAcP,GACd8C,IAAQmC,QAAQ,6B,4CAGpB,WACI,MAAkF9J,KAAKC,MAAvF,IAAQiK,KAAOyX,EAAf,EAAeA,OAAQO,EAAvB,EAAuBA,SAAUjK,EAAjC,EAAiCA,SAAY8K,EAA7C,EAA6CA,SAAUC,EAAvD,EAAuDA,MAAOC,EAA9D,EAA8DA,MAAO5hB,EAArE,EAAqEA,SACrE,OACI,eAAC8gB,GAAD,WACI,sBAAK9hB,UAAU,WAAf,UACI,sBAAMA,UAAU,WAAhB,yCACA,eAAC,KAAD,CAAQoW,UAAWwM,EAAOhK,KAAK,QAAQvS,MAAOwb,EAAU9hB,MAAO,CAAEoC,MAAO,SAAW8L,SAAUtO,KAAKyiB,eAAlG,UACI,cAAC,GAAD,CAAQ/b,MAAM,GAAd,gCACA,cAAC,GAAD,CAAQA,MAAM,SAAd,sCACA,cAAC,GAAD,CAAQA,MAAM,YAAd,4CACA,cAAC,GAAD,CAAQA,MAAM,SAAd,kDAGR,8BAEQwb,GAAY,cAAC,GAAD,CAAY3X,KAAM2X,EAAUP,OAAQA,EAAQpd,KAAM0T,EAAU3J,SAAUtO,KAAKsiB,oBAG/F,qBAAKjiB,UAAU,SAAf,SAES4iB,EAwBMf,IAAaE,GAAgBzP,SAASuP,IAAa,eAAC,IAAD,CAAQ3X,KAAK,UAAU2Y,QAASjL,EAASpX,GAAIoY,KAAK,QAAQ9K,QAAS6U,EAAnE,UAA2E/K,EAASpX,GAAK,eAAO,eAAhG,kBAtBtD,qCACI,cAAC,KAAD,CACI4O,UAAU,OACVG,QACI,sBAAKxP,MAAO,CAAEoC,MAAO,SAArB,UACI,qBAAKpC,MAAO,CAAEkI,SAAU,OAAQ6a,aAAc,OAA9C,4CACA,cAAC,GAAD,CAAoBzgB,OAAQ,IAAKqe,WAAY1f,EAAUiN,SAAUtO,KAAK0iB,cAE9E9N,QAAS,CAAC,SAPd,SASI,cAAC,IAAD,CAAQrK,KAAK,UAAU2Y,OAAK,EAACjK,KAAK,QAAQ7Y,MAAO,CAAEgjB,YAAa,UAAhE,qCAEJ,cAAC,KAAD,CAAS3T,UAAU,OAAOG,QACtB,sBAAKxP,MAAO,CAAEkI,SAAU,QAAxB,UACI,4GAAyB,qGAFjC,SAKI,cAAC,KAAD,CAAYmH,UAAU,WAAWvB,MAAK,2DAAiBwK,OAAO,eAAKC,WAAW,eAAK0K,OAAO,SAASC,UAAWP,EAA9G,SACI,cAAC,IAAD,CAAQQ,QAAM,EAACtK,KAAK,QAAQiK,OAAK,EAAC9iB,MAAO,CAAEoC,MAAO,SAAlD,wD,GA/GjBlC,iBAAjB+hB,GAeKtI,aAAe,CAClBkJ,OAAO,GAgHA1U,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADqBgJ,EAAtBhJ,SACWT,QADWyJ,EAAZzJ,WAIP2N,CAAyB8T,IC3I3Bf,GAAmB1U,KAAOuH,IAAV,o+BCOvBqP,GAAkB,CACpBC,OAAQ,wDACRC,UAAW,4DAGTC,G,4MAEFtZ,MAAQ,CACJuZ,SAAS,EACTC,cAAe,GACff,QAAS,CACLnB,OAAQ,GACRO,SAAU,GACVjK,SAAU,K,EAclB6L,cAAgB,WACZ,MAA8B,EAAK7jB,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZ2D,EAAOpB,EAAY9B,EAAUT,GACnC,EAAKkO,SAAS,CAAEiV,MAAM,IACtB,IAAMtC,EACFld,EAAK0F,QAAU1F,EAAK0F,OAAOC,KAEvB3F,EAAK0F,OAAOC,KAEZ,GAER,EAAK4E,SAAS,CACV+U,cAAepC,IAChB,WACC,EAAK3S,SAAS,CAACiV,MAAM,IACrB,IAAMlf,EAAU,eAAOjE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIC,KAAK,YAAKuX,KAEdrc,GAAcP,O,EAItBmf,aAAe,SAAAC,GACX,IADqB,EACjBC,EAAM,GADW,cAEHrC,OAAOzG,KAAK6I,GAAQE,QAFjB,IAErB,2BAA8C,CAAC,IAApC3Y,EAAmC,QACrCyY,EAAOzY,KAGA,cAARA,IAGsB,iBAAfyY,EAAOzY,GACd0Y,EAAI/Z,KAAJ,UAAYqB,EAAZ,YAAmB/D,KAAK0S,UAAU8J,EAAOzY,MAEzC0Y,EAAI/Z,KAAJ,UAAYqB,EAAZ,YAAmByY,EAAOzY,QAZb,8BAgBrB,OADA0Y,EAAI/Z,KAAK,YACFnD,EAAIkd,EAAIxZ,KAAK,MAAM0Z,e,EAG9BC,W,wBAAa,2DAAArhB,EAAA,yDACDpC,EAAY,EAAKX,MAAjBW,QACAG,EAAmBH,EAAnBG,MAAOE,EAAYL,EAAZK,QAFN,EAGoD,EAAKoJ,MAHzD,IAGDyY,QAAWnB,EAHV,EAGUA,OAAQO,EAHlB,EAGkBA,SAAUjK,EAH5B,EAG4BA,SAAY6K,EAHxC,EAGwCA,SAE7CnB,EALK,iBAOGkC,EAAkB,EAAKxZ,MAAvBwZ,eACFS,EARD,YAQeT,IACZ1Z,KAAK2Y,GACb,EAAKhU,SAAS,CACV+U,cAAeS,EACfxB,QAAS,CACLnB,OAAQ,GACRO,SAAU,GACVjK,SAAU,KAEf,EAAKsM,YAER5c,IAAQmC,QAAQ,4BAnBX,2BAuBA7I,EAAQJ,GAvBR,wBAwBD8G,IAAQ6c,KAAK,sEAxBZ,kCA4BGtW,EAAU+J,EAAV/J,OAEF+V,EAAS,CACXnjB,KAAK,GAAD,OAAKG,EAAQH,KAAb,YAAqBC,EAArB,uBAAyCmN,GAC7CjN,QAASA,EAAQJ,GACjB4jB,YAAaxjB,EAAQH,KACrB8O,aAAS4S,IAENkC,UAAY,EAAKV,aAAaC,GApChC,UAsCaxW,IAAMC,KAAK8V,GAAgBtB,GAAW+B,GAtCnD,QAuCiB,KADhB1c,EAtCD,QAuCGhD,KAAKyJ,MACD6V,EAAkB,EAAKxZ,MAAvBwZ,eACFS,EAFe,YAEDT,IACZ1Z,KAAK,CACTwX,OAAQpa,EAAIhD,KAAKA,KACjB2d,WACAjK,aAEJ,EAAKnJ,SAAS,CACV+U,cAAeS,EACfxB,QAAS,CACLnB,OAAQ,GACRO,SAAU,GACVjK,SAAU,KAEf,EAAKsM,YAER5c,IAAQmC,QAAQ,6BAEhBnC,IAAQC,MAAM,wCA1Db,4C,EAiEb2c,WAAa,WACT,MAA8B,EAAKtkB,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACVijB,EAAkB,EAAKxZ,MAAvBwZ,cACFhf,EAAU,eAAOjE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEIC,KAAM2Z,IAEVze,GAAcP,I,EAGlB8f,cAAgB,SAACpgB,GACb,EAAKuK,SAAS,CACVgU,QAASve,K,EAIjBqgB,oBAAsB,SAAC9B,EAAS3e,GAC5B,IAAQ0f,EAAkB,EAAKxZ,MAAvBwZ,cACFS,EAAO,YAAOT,GAChBf,EACAwB,EAAQzZ,OAAO1G,EAAO,EAAG2e,GAEzBwB,EAAQzZ,OAAO1G,EAAO,GAE1B,EAAK2K,SAAS,CACV+U,cAAeS,GAChB,EAAKC,a,uDAnJZ,WACIvkB,KAAK8jB,kB,gCAGT,SAAmBlH,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAClCrB,KAAK8jB,kB,oBAgJb,WAAU,IAAD,OACL,EAAmC9jB,KAAKqK,MAAhCwZ,EAAR,EAAQA,cAAef,EAAvB,EAAuBA,QACvB,OACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAUI,OAAK,EAAC9iB,MAAOyjB,EAAc5hB,OAAS,EAAI,CAAEqG,SAAS,OAAQ6a,aAAc,QAAW,CAAE7a,SAAS,QAAzG,SAEQtI,KAAKqK,MAAM0Z,MAAQF,EAAchS,KAAI,SAAC3H,EAAM/F,GACxC,OACI,cAAC,KAAS0gB,MAAV,CAEIC,OACI,sBAAKzkB,UAAU,gBAAf,UACI,mCAAS6J,EAAKyX,OAAd,MAAyBzX,EAAKgY,YAC9B,+BACKhY,EAAK+N,SAASnX,UAN/B,SAUI,8BACI,cAAC,GAAD,CAAUqD,MAAOA,EAAO+F,KAAI,eAAMA,GAAOoE,SAAU,SAAClL,GAAD,OAAS,EAAKwhB,oBAAoBxhB,EAAKe,IAAQ4e,SAAU,kBAAM,EAAK6B,yBAAoBpC,EAAWre,SAVrJA,QAiBzB,qBAAK9D,UAAU,QAAf,sCACA,cAAC,GAAD,CAAU4iB,OAAO,EAAM/Y,KAAM4Y,EAASxU,SAAUtO,KAAK2kB,cAAe3B,MAAOhjB,KAAKqkB,oB,GA7L7E/jB,iBAwMJiO,I,MAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADqBgJ,EAAtBhJ,SACWT,QADWyJ,EAAZzJ,WAIP2N,CAAyBoV,I,UCpN3BoB,GAAanY,KAAOC,KAAV,sOCGjBmY,G,4MAEFC,KAAO,WACH,IAAM3e,EAAMC,SAASC,cAAc,SACnCF,EAAII,MAAQ,EAAKzG,MAAMmB,SAAS8jB,WAChC3e,SAASI,KAAKC,YAAYN,GAC1BA,EAAIO,SACJN,SAASO,YAAY,QACrBP,SAASI,KAAKI,YAAYT,GAC1BqB,IAAQmC,QAAQ,6B,4CAGpB,WACI,IAAQ1I,EAAapB,KAAKC,MAAlBmB,SACR,OACI,eAAC2jB,GAAD,CAAY5W,QAASnO,KAAKilB,KAA1B,UACK7jB,EACD,cAAC,EAAD,CAAMlB,KAAK,OAAOC,MAAM,UAAUC,MAAO,CAAEkI,SAAU,OAAQkS,WAAY,gB,GAjBtEla,iBAuBJ0kB,MC1BFG,GAAoBvY,KAAOuH,IAAV,uaCOxBiR,G,4MAEF/a,MAAQ,CACJgb,QAAS,K,EAkBbC,oBAAsB,SAAC5e,GACnB,IAAQ9F,EAAY,EAAKX,MAAjBW,QACFiE,EAAU,eAAOjE,GACvBiE,EAAW3D,GAAGP,MAAQ+F,EAAQ,IAC9BtB,GAAcP,GACd,EAAKiK,SAAS,CAAEuW,QAAS3e,IACd7D,OAAOD,IAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,MAAe,OAAXA,EAAElC,QAC9C8E,aAAa,EAAG,EAAGc,EAAQ,IAAKA,EAAQ,M,EAG/C6e,WAAa,SAAChb,EAAM7D,GAChB,IAAQ9F,EAAY,EAAKX,MAAjBW,QACFiE,EAAU,eAAOjE,GACV,OAAT2J,IACA1F,EAAW/D,KAAO4F,GAET,OAAT6D,IACA1F,EAAW9D,MAAQ2F,GAEvBtB,GAAcP,I,uDAlClB,WACI,IAAQjE,EAAYZ,KAAKC,MAAjBW,QACRZ,KAAK8O,SAAS,CACVuW,QAASrc,KAAKwc,MAAyB,IAAnB5kB,EAAQM,GAAGP,W,gCAIvC,SAAmBic,EAAWC,EAAWC,GACjCF,EAAUhc,UAAYZ,KAAKC,MAAMW,SACjCZ,KAAK8O,SAAS,CACVuW,QAASrc,KAAKwc,MAAoC,IAA9BxlB,KAAKC,MAAMW,QAAQM,GAAGP,W,oBA2BtD,WAAU,IAAD,OACL,EAAyCX,KAAKC,MAAtCO,EAAR,EAAQA,IAAKE,EAAb,EAAaA,eAAgBE,EAA7B,EAA6BA,QACrBykB,EAAYrlB,KAAKqK,MAAjBgb,QACAvkB,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,MAAOG,EAAON,EAAPM,GACrB,OACI,eAACikB,GAAD,WACI,qBAAI9kB,UAAU,eAAd,UAA6B,cAAC,EAAD,CAAMH,KAAK,YAAxC,8BACA,gCACI,0DACA,gCACI,sBAAKG,UAAU,cAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAM,6CAAhC,SACI,sBAAM7N,UAAU,OAAhB,yCAEJ,cAAC,GAAD,CAAYwZ,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAK6e,WAAW,KAAM7e,IAAtH,SAA+H5F,OAEnI,sBAAKT,UAAU,cAAf,UACI,cAAC,IAAD,CAASoP,UAAU,OAAOvB,MAAK,4BAAgB,YAAR1N,EAAoB,2BAAS,gBAApE,SACI,uBAAMH,UAAU,OAAhB,UAAgC,YAARG,EAAoB,uCAAW,2BAAvD,SAEJ,cAAC,GAAD,CAAYgZ,SAAoC,IAA1BhZ,EAAI0C,QAAQ,UAAiB2W,WAAY,CAAErX,MAAO,QAAS8F,SAAU,QAAU2Q,KAAK,QAAQ3K,SAAU,SAAC5H,GAAD,OAAW,EAAK6e,WAAW,KAAM7e,IAA7J,SAAsK3F,OAE1K,sBAAKV,UAAU,cAAf,UACI,cAAC,IAAD,CACIoP,UAAU,OACVvB,MACI,gCACI,0FACA,uBACA,uBAAM9N,MAAO,CAAEmI,WAAY,WAA3B,qFAAoD,sBAAMnI,MAAO,CAAEmI,WAAY,QAA3B,wDAApD,eANZ,SASI,sBAAMlI,UAAU,OAAhB,yCAGAK,EACM,sBAAMN,MAAO,CAAEiI,WAAY,YAAaod,UAAW,UAAnD,SAA+D,cAAC,GAAD,UAAO/kB,MACtE,sBAAMN,MAAO,CAAED,MAAO,WAAtB,yFAOlBe,EAAGC,OACH,gCACI,oBAAIf,MAAO,CAAEsW,UAAW,QAAxB,4CACA,8BACI,sBAAKrW,UAAU,cAAcD,MAAO,CAAEslB,WAAY,cAAlD,UACI,cAAC,IAAD,CACIjW,UAAU,OACVvB,MACI,gCACI,0FACA,uBACA,sBAAM9N,MAAO,CAAEmI,WAAY,WAA3B,yIANZ,SASI,sBAAMlI,UAAU,OAAhB,+CAEJ,sBAAKA,UAAU,OAAOD,MAAO,CAAEsW,UAAW,QAA1C,UACI,cAAC,KAAD,CACIhQ,MAAO2e,EACPM,aAAc,SAAAC,GAAC,OAAIA,EAAI,KACvB7R,IAAK,EACL8R,MAAO,CAAE,GAAI,MAAO,GAAI,MAAO,GAAI,MAAO,IAAK,QAC/CzlB,MAAO,CAAEoC,MAAO,SAChB8L,SAAUtO,KAAKslB,sBACnB,uBAAMllB,MAAO,CAAEiR,OAAQ,iBAAkB9I,WAAY,QAArD,UAAgE8c,EAAhE,yB,GA/GV/kB,iBA+HXiO,I,MAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE7J,IADgC6J,EAAjC7J,IACME,eAD2B2J,EAA5B3J,eACiBE,QADWyJ,EAAZzJ,WAIlB2N,CAAyB6W,ICtI3BU,GAAqBlZ,KAAOuH,IAAV,syBCGzB4R,G,4MAYFC,YAAc,WACV,MAA2C,EAAK/lB,MAAxCsK,EAAR,EAAQA,KAAMzJ,EAAd,EAAcA,KAAMmlB,EAApB,EAAoBA,UACpB3X,EADA,EAA8BA,UACrB/D,EAAMzJ,EAAMmlB,I,EAGzBC,WAAa,SAAC5gB,GACV,IAAQ2I,EAAQ3I,EAAE4H,cAAcgE,QAAxBjD,IACRpL,OAAOsjB,KAAKlY,I,4CAGhB,WACI,MAAqDjO,KAAKC,MAAlDsK,EAAR,EAAQA,KAAMzJ,EAAd,EAAcA,KAAMiU,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,IAAKC,EAA/B,EAA+BA,QAASgR,EAAxC,EAAwCA,SACxC,OACI,cAACH,GAAD,UACI,cAAC,KAAD,CACIrW,UAAU,OACV2W,MAAO,CAAEC,OAAQ,CAAC,EAAG,IACrBC,oBAAkB,EAClBC,iBAAiB,mBACjB3W,QACI,qBAAKxP,MAAO,CAAEomB,UAAW,QAASC,eAAgB,4BAA6B9iB,OAAQ,UAAWnB,MAAM,GAAD,OAAc,OAAT+H,EAAgB,IAAM,IAA3B,MAAoC7H,OAAO,GAAD,OAAc,OAAT6H,EAAgB,IAAM,IAA3B,OAAsClK,UAAWkK,EAAM,WAAU0K,EAAShF,IAAKnP,EAAMkP,IAAKgF,EAAK7G,QAASnO,KAAKkmB,aANtQ,SAQI,sBAAK7lB,UAAS,gBAAW4lB,EAAW,SAAW,IAAM9X,QAASnO,KAAKgmB,YAAnE,UACI,sBAAM3lB,UAAU,OAAhB,SAAwBS,IACxB,sBAAMT,UAAU,OAAhB,SAAwB0U,e,GApCrBzU,iBA4CZylB,MC/CFW,GAAkB9Z,KAAOuH,IAAV,i0ECQpB9D,GAAWC,KAAXD,OAEFsW,G,4MAEFtc,MAAQ,CACJuc,UAAW,GACX/Q,aAAc,GACdgR,WAAY,KACZC,aAAc,M,EAalB1f,OAAS,WACL,MAA8B,EAAKnH,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZ2D,EAAOpB,EAAY9B,EAAUT,GAC7BmmB,EACFxiB,EAAK0F,QAAU1F,EAAK0F,OAAO2L,UAEvBrR,EAAK0F,OAAO2L,UAEZ,CACI3V,MAAO,GACP4V,aAAc,IAG1B,EAAK/G,SAAS,CACV8X,UAAWG,EAAkB9mB,MAC7B4V,aAAckR,EAAkBlR,eACjC,WACC,IAAMhR,EAAU,eAAOjE,GACjB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEI2L,UAAU,eACHmR,KAGX3hB,GAAcP,O,EAItBmiB,QAAU,SAAC1hB,GACP,MAAyBA,EAAE4H,cAAcgE,QAAjC/M,EAAR,EAAQA,MAAOuC,EAAf,EAAeA,MACf,EAAKoI,SAAS,CACV+X,WAAY,CACR1iB,OAAQA,EACRuC,Y,EAKZugB,UAAY,SAAC3hB,GACT,MAAyBA,EAAE4H,cAAcgE,QAAjC/M,EAAR,EAAQA,MAAOuC,EAAf,EAAeA,MACf,EAAKoI,SAAS,CACVgY,aAAc,CACV3iB,OAAQA,EACRuC,Y,EAKZwgB,UAAY,SAAC5hB,GACT,MAAkC,EAAK+E,MAA/Buc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WACbvC,EAAO,YAAOsC,GACZlgB,EAAUpB,EAAE+F,OAAZ3E,MACR4d,EAAQuC,EAAW1iB,OAAOqH,IAAM9E,EAChC,EAAKygB,qBAAqB7C,I,EAG9B8C,YAAc,SAAC9hB,GACX,MAAoC,EAAK+E,MAAjCuc,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,aACbxC,EAAO,YAAOsC,GACZlgB,EAAUpB,EAAE+F,OAAZ3E,MACR4d,EAAQwC,EAAa3iB,OAAOkjB,WAAa3gB,EACzC,EAAKygB,qBAAqB7C,I,EAG9BgD,UAAY,SAAChiB,EAAGnB,GACZ,IACIojB,EADIX,EAAc,EAAKvc,MAAnBuc,UAGJW,OADU/E,IAAVre,EACYA,GAECmB,EAAE+F,OAAO6F,QAAQ/M,MAElC,IAAMmgB,EAAO,YAAOsC,GACpBtC,EAAQzZ,OAAO0c,EAAW,GAC1B,EAAKJ,qBAAqB7C,I,EAG9BkD,SAAW,SAACrjB,EAAOoG,GACf,IAAQqc,EAAc,EAAKvc,MAAnBuc,UACFtC,EAAO,YAAOsC,GACpBtC,EAAQngB,GAAOoG,KAAOA,EACtB,EAAKuE,SAAS,CACV8X,UAAWtC,K,EAInB1K,YAAc,SAACtU,GACX,EAAK0hB,QAAQ1hB,GACb,EAAKwJ,SAAS,CACV+X,WAAY,Q,EAIpB3L,UAAY,SAAC5V,GACTA,EAAE4H,cAAcrG,SAChBN,SAAS6I,iBAAiB,YAAa,EAAKsK,a,EAGhDA,WAAa,SAACpU,GACV,MAAgD,EAAK+E,MAA7Cuc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,aAC/B,GAAID,EAAY,CACZ,GAAoB,yBAAhBvhB,EAAE+F,OAAOxK,GACT,OAEC+lB,EAAUC,EAAW1iB,OAAOqH,KAC7B,EAAK8b,UAAU,KAAMT,EAAW1iB,OAEpC,EAAK2K,SAAS,CACV+X,WAAY,OAGpB,GAAIC,EAAc,CACd,GAAoB,2BAAhBxhB,EAAE+F,OAAOxK,GACT,OAEJ,EAAKiO,SAAS,CACVgY,aAAc,OAItBvgB,SAASgJ,oBAAoB,YAAa,EAAKmK,a,EAGnD+N,IAAM,SAACniB,GACH,IAAQiF,EAASjF,EAAE4H,cAAcgE,QAAzB3G,KACAqc,EAAc,EAAKvc,MAAnBuc,UACFtC,EAAO,YAAOsC,GACP,WAATrc,EACA+Z,EAAQna,KAAK,CACTqB,IAAK,GACLjB,KAAM,QAGV+Z,EAAQna,KAAK,CACTqB,IAAK,GACL6b,WAAY,kBAGpB,EAAKvY,SAAS,CACV8X,UAAWtC,EACXuC,WAAY,CACR1iB,MAAOmgB,EAAQriB,OAAS,EACxByE,MAAO,O,EAKnBygB,qBAAuB,WAA4C,IAA3CP,EAA0C,uDAA9B,KAAM/Q,EAAwB,uDAAT,KAC/C6R,EAAa,GACfd,IACAc,EAAWznB,MAAQ2mB,EACnB,EAAK9X,SAAS,CACV8X,UAAWA,KAGf/Q,IACA6R,EAAW7R,aAAeA,EAC1B,EAAK/G,SAAS,CACV+G,aAAcA,KAItB,MAA8B,EAAK5V,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZiE,EAAU,eAAQjE,GAClB2D,EAAOpB,EAAY9B,EAAUwD,GACnCN,EAAK0F,OAAL,2BACO1F,EAAK0F,QADZ,IAEI2L,UAAU,2BACHrR,EAAK0F,OAAO2L,WACZ8R,KAGXtiB,GAAcP,I,EAGlB8iB,yBAA2B,SAACpd,EAAMzJ,EAAM8mB,GACpC,IAAQ/R,EAAiB,EAAKxL,MAAtBwL,aACFgS,EAAM,YAAQhS,GACpB,GAAI+R,EAAU,CACV,IAAMzjB,EAAQ0jB,EAAO1W,WAAU,SAAAnO,GAAC,OAAIA,EAAEuH,OAASA,GAAQvH,EAAElC,OAASA,KAClE+mB,EAAOhd,OAAO1G,EAAO,QAErB0jB,EAAO1d,KAAK,CAAErJ,OAAMyJ,SAExB,EAAK4c,0BAAqB3E,EAAWqF,I,uDAnMzC,WACI7nB,KAAKoH,W,gCAGT,SAAmBwV,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAClCrB,KAAKoH,W,oBAgMb,WAAU,IAAD,OACL,EAA8DpH,KAAKqK,MAA3Duc,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,aAAcjR,EAA7C,EAA6CA,aAC7C,OACI,eAAC6Q,GAAD,WACI,qBAAKrmB,UAAU,YAAf,SAEQumB,EAAU/U,KAAI,SAAC3N,EAAMC,GACjB,OACI,sBAAK9D,UAAU,QAAf,UACI,sBAAMA,UAAU,SAAS,aAAY8D,EAAOgK,QAAS,EAAKmZ,UAA1D,eAEIT,GAAcA,EAAW1iB,QAAUA,EAC7B,cAAC,KAAD,CAAO8U,KAAK,QAAQpY,GAAG,uBAAuBiP,WAAS,EAACgK,aAAc+M,EAAWngB,MAAOtG,MAAO,CAAEoC,MAAO,SAAW8L,SAAU,EAAK4Y,UAAWzK,QAAS,EAAKvB,UAAWnL,aAAc,EAAK6J,cACzL,sBAAMvZ,UAAU,UAAU,aAAY8D,EAAO,aAAYD,EAAKsH,IAAK2C,QAAS,EAAK6Y,QAAjF,SAA2F9iB,EAAKsH,MAE1G,sBAAMnL,UAAU,mBAAhB,eAEI6D,EAAKqG,KAEG,uBAAMlK,UAAS,eAAU6D,EAAKmjB,WAAa,SAAW,IAAtD,UACI,sBAAMhnB,UAAU,aAAhB,wBACA,eAAC,KAAD,CAAQqG,MAAOxC,EAAKqG,KAAM0O,KAAK,QAAQ7Y,MAAO,CAAEoC,MAAO,QAAU8L,SAAU,SAAC5H,GAAD,OAAW,EAAK8gB,SAASrjB,EAAOuC,IAA3G,UACI,cAAC,GAAD,CAAQA,MAAM,SAAd,oBACA,cAAC,GAAD,CAAQA,MAAM,SAAd,oBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,OAAd,kBACA,cAAC,GAAD,CAAQA,MAAM,SAAd,oBACA,cAAC,GAAD,CAAQA,MAAM,QAAd,mBACA,cAAC,GAAD,CAAQA,MAAM,UAAd,qBACA,cAAC,GAAD,CAAQA,MAAM,MAAd,uBAKRogB,GAAgBA,EAAa3iB,QAAUA,EACjC,cAAC,KAAMwc,SAAP,CAAgB1H,KAAK,QAAQpY,GAAG,yBAAyBT,MAAO,CAAEkI,SAAU,QAAUwH,WAAS,EAACgY,KAAM,EAAGhO,aAAcgN,EAAapgB,MAAO4H,SAAU,EAAK8Y,YAAa3K,QAAS,EAAKvB,UAAWnL,aAAc,EAAK6J,cACnN,sBAAMvZ,UAAU,aAAa,aAAY8D,EAAO,aAAYD,EAAKmjB,WAAYlZ,QAAS,EAAK8Y,UAA3F,SAAuG/iB,EAAKmjB,aAG7HljB,EAAQyiB,EAAU3kB,OAAS,GAAK,sBAAM5B,UAAU,aAAaD,MAAO,CAAEoa,WAAY,OAAlD,iBA/BTrW,QAqC5C,sBAAK9D,UAAU,UAAf,UACI,gEACA,cAAC,IAAD,CAAQkK,KAAK,UAAU0O,KAAK,QAAQ,YAAU,SAAS9K,QAASnO,KAAKynB,IAArE,0BACA,cAAC,IAAD,CAAQld,KAAK,UAAU0O,KAAK,QAAQiK,OAAK,EAAC,YAAU,SAAS/U,QAASnO,KAAKynB,IAA3E,mCAEJ,sBAAKpnB,UAAU,MAAf,UACI,uBAAMA,UAAU,WAAhB,UACI,4DACA,cAAC,IAAD,CAAS6N,MAAM,+JAAf,SACI,sBAAM7N,UAAU,OAAhB,SACI,cAAC,EAAD,CAAMH,KAAK,OAAOC,MAAM,UAAUC,MAAO,CAAEkI,SAAU,iBAKjE,eAAC,KAAD,CAAUyf,iBAAkB,CAAC,IAAK,KAAM7E,OAAK,EAAC9iB,MAAO,CAAEkI,SAAS,QAAhE,UACI,cAAC,KAASuc,MAAV,CAEIC,OACI,sBAAKzkB,UAAU,gBAAf,UACI,iCACI,cAAC,EAAD,CAAMH,KAAK,KAAKE,MAAO,CAAEkI,SAAU,OAAQkQ,YAAa,SAD5D,cAII3C,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAAetI,OAAS,GACnD,sDAAS,iCAAS4T,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAAetI,SAA5D,eAThB,SAaI,8BAEQ4S,GAAiBK,GAAGrD,KAAI,SAAC5J,EAAG9D,GACxB,OAAO,cAAC,GAAD,CACK8hB,SAAUpQ,GAAgBvT,QAAQuT,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAAezG,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASmH,EAAEnH,SACnGyJ,KAAK,KAELzJ,KAAMmH,EAAEnH,KACRiU,KAAM9M,EAAE8M,KACRC,IAAK/M,EAAE+M,IACPC,QAAShN,EAAEgN,QACX3G,SAAU,EAAKqZ,0BALVxjB,SAlBzB,KA4BR,cAAC,KAAS0gB,MAAV,CAEIC,OACI,sBAAKzkB,UAAU,gBAAf,UACI,iCACI,cAAC,EAAD,CAAMH,KAAK,SAASE,MAAO,CAAEkI,SAAU,OAAQkQ,YAAa,SADhE,wBAII3C,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QAAmBtI,OAAS,GACvD,sDAAS,iCAAS4T,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QAAmBtI,SAAhE,eAThB,SAaI,8BAEQ4S,GAAiBC,OAAOjD,KAAI,SAAC5J,EAAG9D,GAC5B,OAAO,cAAC,GAAD,CACK8hB,SAAUpQ,GAAgBvT,QAAQuT,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QAAmBzG,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASmH,EAAEnH,SACvGyJ,KAAK,SAELzJ,KAAMmH,EAAEnH,KACRiU,KAAM9M,EAAE8M,KACRC,IAAK/M,EAAE+M,IACPC,QAAShN,EAAEgN,QACX3G,SAAU,EAAKqZ,0BALVxjB,SAlBzB,kB,GA1SR7D,iBAkVTiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADqBgJ,EAAtBhJ,SACWT,QADWyJ,EAAZzJ,WAIP2N,CAAyBoY,IC5V3BqB,GAAiBpb,KAAOuH,IAAV,gcAMd,SAAAlU,GAAK,OAAIA,EAAMgoB,MAAQ,EAAI,KAkB3B,SAAAhoB,GAAK,OAAIA,EAAMgoB,MAAQ,EAAI,KCtBlCC,G,4MAiBFC,UAAY,SAAC7iB,GACT,MAA8B,EAAKrF,MAA3BqO,EAAR,EAAQA,SAAU8Z,EAAlB,EAAkBA,IAAKrU,EAAvB,EAAuBA,IACRpP,EAAWW,EAApB+iB,QAEAC,EAAa,SAAChjB,GAChBA,EAAEijB,iBACF,IAAQ/lB,EAAU,EAAKvC,MAAfuC,MACSwC,EAASM,EAAlB+iB,QACFG,EAAahmB,EAAQwC,EAAOL,EAC9B6jB,GAAcJ,GAAOI,GAAczU,IACnCzF,EAAS9L,EAAQwC,EAAOL,GACxBA,EAASK,IASjBuB,SAAS6I,iBAAiB,YAAakZ,GAAY,GACnD/hB,SAAS6I,iBAAiB,WANP,WACf7I,SAASgJ,oBAAoB,YAAa+Y,GAAY,GACtD/hB,SAASgJ,oBAAoB,UAAW+Y,GAAY,MAIP,I,4CAGrD,WACI,IAAQL,EAAUjoB,KAAKC,MAAfgoB,MACR,OACI,cAACD,GAAD,CAAgBC,MAAOA,EAAOQ,YAAazoB,KAAKmoB,gB,GA5CrC7nB,iBAAjB4nB,GAUKnO,aAAe,CAClBkO,OAAO,EACPG,IAAK3iB,OAAOijB,UACZ3U,KAAM,GAoCCmU,I,GAAAA,MCnDFS,GAAiB/b,KAAOuH,IAAV,k4ECYnB4C,GAAYC,KAAZD,QAEF6R,G,4MACFve,MAAQ,CACJwe,aAAc,GACd7P,UAAW,G,EAGf8P,sBAAwB,SAAC3kB,GAAD,OAAW,EAAK2K,SAAS,CAAEkK,UAAW7U,K,EAE9D4kB,kBAAoB,SAACvmB,GACjB,IAEMwmB,EAAUxmB,EAFS,EAAKvC,MAAtBuB,aAGR,EAAKsN,SAAS,CACV+Z,aAAcG,K,EAItBC,SAAW,WACP,IAAQJ,EAAiB,EAAKxe,MAAtBwe,aAGJrmB,EAFqB,EAAKvC,MAAtBuB,aAEmBqnB,EAC3B,OAAOrmB,EAAQ,IAAMA,EAAQ,K,EAGjC0mB,QAAU,WACN,MAA8B,EAAKjpB,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACduoB,EAAO,GACX,GAAiB,KAAb9nB,GAAgC,MAAbA,EAEnB,IADA,IAAI+nB,EAAiB/nB,EAASkC,MAAM,KAC3BvB,EAAE,EAAGA,EAAEonB,EAAennB,OAAQD,IAAI,CACvC,IAAIuC,EAAOpB,EAAYimB,EAAe3e,MAAM,EAAEzI,EAAE,GAAG0I,KAAK,KAAM9J,GAC9D,GAAI2D,EAAM,CACN,IAAIgY,EAAW,GACXhY,EAAK0F,QAAU1F,EAAK0F,OAAO2L,WAAY,WACvC,IAAQC,EAAiBtR,EAAK0F,OAAO2L,UAA7BC,aACFX,EAAKW,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,OAAXA,EAAEjS,QAChCuK,EAASe,EAAa9S,QAAO,SAAAyZ,GAAC,MAAe,WAAXA,EAAEjS,QACtC2K,EAAGjT,OAAS6S,EAAO7S,OAAS,EAC5Bsa,EAAW,OAEPzH,EAAO7S,OAAS,IAChBsa,EAAW1H,GAAiBC,OAAOhR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASgU,EAAO,GAAGhU,QAAMZ,MAExEgV,EAAGjT,OAAS,IACZsa,EAAW1H,GAAiBK,GAAGpR,MAAK,SAAAd,GAAC,OAAIA,EAAElC,OAASoU,EAAG,GAAGpU,QAAMZ,OAXjC,GAe3CipB,EAAKhf,KAAK,CACNtJ,GAAI0D,EAAK1D,GACTX,KAAMqc,GAAY,MAClBzb,KAAMyD,EAAKzD,KACXX,MAAOoE,EAAKpE,SAK5B,OACI,eAAC,KAAD,CAAYkpB,UAAU,IAAtB,UACI,cAAC,KAAW/I,KAAZ,CAAiBnS,QAAS,kBAAMpJ,EAAe,MAA/C,SACI,cAAC,EAAD,CAAM7E,KAAK,UAGXipB,EAAKtX,KAAI,SAAC3N,EAAKC,GACX,OACI,eAAC,KAAWmc,KAAZ,CAA6BnS,QAAS,kBAAMpJ,EAAeb,EAAKrD,KAAhE,UACI,cAAC,EAAD,CAAMX,KAAMgE,EAAKhE,KAAMC,MAAO+D,EAAK/D,QAClC+D,EAAKpD,OAFYqD,U,4CAW9C,WACI,IAAQ6U,EAAchZ,KAAKqK,MAAnB2O,UACR,EAA4ChZ,KAAKC,MAAzCuB,EAAR,EAAQA,aAAcH,EAAtB,EAAsBA,SAAUT,EAAhC,EAAgCA,QAC1B4nB,EAAaxoB,KAAKipB,WAClB1kB,EAAOpB,EAAY9B,EAAUT,GAEnC,OACI,eAAC+nB,GAAD,CAAgBvoB,MAAO,CAAEoC,MAAOgmB,EAAa,MAA7C,UACI,cAAC,GAAD,CAAUhmB,MAAOgmB,EAAYzU,IAAK,IAAKqU,IAAKpf,KAAKof,IAAmB,GAAf5mB,EAAoBA,EAAe,KAAM8M,SAAUtO,KAAK+oB,oBAC7G,sBAAK1oB,UAAU,aAAf,UACI,qBAAKA,UAAU,WAAf,SAEQgB,GAEQ,qCAEqB,MAAbA,GACA,qBAAKjB,MAAO,CAAEkpB,aAAc,oBAAqBvX,cAAe,OAAQoR,aAAc,QAAtF,SACI,cAAC,GAAD,MAGR,eAAC,KAAD,CAAMlK,KAAK,QAAQ8O,iBAAkB/O,EAAW5Y,MAAO,CAAEsC,OAAQ,QAAU4L,SAAUtO,KAAK8oB,sBAA1F,UACI,cAAC,GAAD,CACI5P,IAAK,qBAAK7Y,UAAU,SAAf,0BADT,SAGI,cAAC,GAAD,GAAgBgB,IADZ,KAGR,cAAC,GAAD,CACI6X,IAAK,qBAAK7Y,UAAS,iBAAYkE,GAAQA,EAAK0F,QAAU1F,EAAK0F,OAAOyS,OAASnY,EAAK0F,OAAOyS,MAAMC,QAAU,SAAW,IAA7G,0BADT,SAGI,cAAC,GAAD,GAAYtb,IADR,KAGR,cAAC,GAAD,CACI6X,IAAK,qBAAK7Y,UAAU,SAAf,0BADT,SAGI,cAAC,GAAD,GAAWgB,IADP,aAOhC,qBAAKhB,UAAU,aAAf,SAA6BL,KAAKkpB,sB,GAtHhC5oB,iBAkIPiO,oBALf,SAAyBlE,GAErB,MAAO,CAAEhJ,SADmCgJ,EAApChJ,SACWG,aADyB6I,EAA1B7I,aACeZ,QADWyJ,EAAZzJ,WAIrB2N,CAAyBqa,IC3IlCW,G,4JACF,WACI,IAAQ/nB,EAAiBxB,KAAKC,MAAtBuB,aACR,OACI,sBAAKpB,MAAO,CAAEoC,MAAM,GAAD,OAAKhB,EAAL,MAAuB+W,QAAS,OAAQ7V,OAAQ,QAAnE,UACI,cAAC,GAAD,CAAUulB,OAAO,EAAMzlB,MAAOhB,EAAcuS,IAAK,IAAKzF,SAAUjC,KAChE,cAAC,GAAD,IACA,cAACmd,GAAD,W,GAPOlpB,iBAkBRiO,I,GAAAA,gBALf,SAAyBlE,GAErB,MAAO,CAAE7I,aADgB6I,EAAjB7I,gBAIG+M,CAAyBgb,ICvB3BE,GAAiB7c,KAAOuH,IAAV,4oGCOrBuV,G,4MAOFrf,MAAQ,CACJsf,YAAY,EACZC,WAAY,CACRnC,IAAK,GACL9L,OAAQ,GACRkO,WAAY,IAEhBtS,eAAe,EACfuS,cAAc,G,EAwClBC,aAAe,SAACzkB,GACZ,IAAQskB,EAAe,EAAKvf,MAApBuf,WACR,EAA8BtkB,EAAE4H,cAAcgE,QAAtC4Q,EAAR,EAAQA,MAAOjhB,EAAf,EAAeA,GAAImpB,EAAnB,EAAmBA,OACb1F,EAAUsF,EAAW9H,GAAOrX,QAClC6Z,EAAQxgB,MAAK,SAAAd,GAAC,OAAIA,EAAE2e,SAAW9gB,KAAImpB,OAASA,EAC5C,EAAKlb,SAAS,CACV8a,WAAW,2BACJA,GADG,kBAEL9H,EAAQwC,O,EAKrB2F,KAAO,SAACppB,EAAIqpB,GACR,IAAQN,EAAe,EAAKvf,MAApBuf,WACFtF,EAAUsF,EAAWnC,IAAIhd,QAC/B6Z,EAAQxgB,MAAK,SAAAd,GAAC,OAAIA,EAAE2e,SAAW9gB,KAAImpB,OAASE,EAC5C,EAAKpb,SAAS,CACV8a,WAAW,2BACJA,GADG,IAENnC,IAAKnD,O,EAKjBxM,OAAS,WACL,EAAKhJ,SAAS,CACVyI,eAAe,IAEnB,MAAoD,EAAKlN,MAAjDuf,WAAcnC,EAAtB,EAAsBA,IAAK9L,EAA3B,EAA2BA,OAAQkO,EAAnC,EAAmCA,WAC3BjpB,EAAY,EAAKX,MAAjBW,QACFiE,EAAU,eAAOjE,GACvB,IAAK,IAAIoC,KAAKykB,EAAK,CAEf,IAAMvjB,EAAOujB,EAAIzkB,GACjB,GAAIkB,EAAK8lB,QAA0B,WAAhB9lB,EAAK8lB,OAAqB,CACzC,IAAM3O,EAAOlY,EAAYe,EAAK8lB,OAAQnlB,GACtCwW,EAAKpR,OAAL,2BACQoR,EAAKpR,QAAU,IADvB,IAEIC,KAAK,GAAD,mBAAQmR,EAAKpR,QAAUoR,EAAKpR,OAAOC,MAAS,IAA5C,CAAiD,CACjDgY,SAAUhe,EAAKge,SACfP,OAAQzd,EAAKyd,OACb1J,SAAU/T,EAAK+T,eAjBpB,eAsBFkS,GACL,IAAMjmB,EAAOyX,EAAOwO,GAEpB,GAAoB,WAAhBjmB,EAAK8lB,OAAqB,CAC1B,IAAM3O,EAAOlY,EAAYe,EAAKrD,GAAIgE,GAC5BV,EAAQkX,EAAKpR,OAAOC,KAAKiH,WAAU,SAAAlJ,GAAC,OAAIA,EAAE0Z,SAAWzd,EAAKyd,UAChEtG,EAAKpR,OAAOC,KAAKW,OAAO1G,EAAO,KANvC,IAAK,IAAIgmB,KAAKxO,EAAS,EAAdwO,GAtBE,eA+BFnoB,GAEL,IAAMkC,EAAO2lB,EAAW7nB,GAGlBooB,EADOjnB,EAAYe,EAAKrD,GAAIgE,GACVoF,OAAOC,KAAKpG,MAAK,SAAAmE,GAAC,OAAIA,EAAE0Z,SAAWzd,EAAKyd,UAChEyI,EAAWnS,SAAS/J,MAAQhK,EAAK+T,SAAS/J,MAC1Ckc,EAAWnS,SAASnX,KAAOoD,EAAK+T,SAASnX,MAP7C,IAAK,IAAIkB,KAAK6nB,EAAa,EAAlB7nB,GASToD,GAAcP,GACd0H,IAAe,GACf5E,IAAQmC,QAAQ,wCAChB,EAAKgF,SAAS,CACVyI,eAAe,EACfoS,YAAY,K,EAIpBU,iBAAmB,WACf,MAAwC,EAAKhgB,MAArCuf,WAAcnC,EAAtB,EAAsBA,IAAK9L,EAA3B,EAA2BA,OACrB2O,EAAQ7C,EAAIhH,OAAO9E,GACzB,OAAO2O,EAAMvnB,QAAO,SAAAwnB,GAAC,QAAMA,EAAEP,UAAQ/nB,OAASqoB,EAAMroB,Q,EAGxDuoB,mBAAqB,SAACllB,GACEA,EAAE+F,OAAdoK,S,uDAtHZ,WACI,IADgB,EAChB,EAAmCzV,KAAKC,MAAhCwqB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,YACfC,EAAeF,EAAU5Y,KAAI,SAAAT,GAAC,OAAIA,EAAEuQ,UACpCiJ,EAAmBF,EAAY7Y,KAAI,SAAAT,GAAC,OAAIA,EAAEuQ,UAExCkJ,EAAUH,EAAY3nB,QAAO,SAAAmH,GAAI,OAAKygB,EAAahY,SAASzI,EAAKyX,WACnEmJ,EAAa,GACbC,EAAiB,GAPL,cASCN,GATD,yBASPvgB,EATO,QAUZ,GAAK0gB,EAAiBjY,SAASzI,EAAKyX,QAE7B,CACH,IAAI7Q,EAAU4Z,EAAY5mB,MAAK,SAAAd,GAAC,OAAIA,EAAE2e,SAAWzX,EAAKyX,UAClDzX,EAAK+N,SAASnX,OAASgQ,EAAQmH,SAASnX,MAAQoJ,EAAK+N,SAAS/J,QAAU4C,EAAQmH,SAAS/J,OACzF6c,EAAe5gB,KAAf,2BAAwB2G,GAAxB,IAAiCjQ,GAAIqJ,EAAKrJ,WAJ9CiqB,EAAW3gB,KAAKD,IAFxB,2BAA6B,IATb,8BAoBO,IAAnB2gB,EAAQ5oB,QAAsC,IAAtB6oB,EAAW7oB,QAA0C,IAA1B8oB,EAAe9oB,OAClEjC,KAAK8O,SAAS,CACV6a,YAAY,KAGhB3pB,KAAK8O,SAAS,CACV8a,WAAY,CACRnC,IAAKoD,EACLlP,OAAQmP,EACRjB,WAAYkB,GAEhBpB,YAAY,IAEhBpd,IAAe,M,oBA6FvB,WAAU,IAAD,OACL,EAA6FvM,KAAKqK,MAA1Fsf,EAAR,EAAQA,WAAR,IAAoBC,WAAcnC,EAAlC,EAAkCA,IAAK9L,EAAvC,EAAuCA,OAAQkO,EAA/C,EAA+CA,WAActS,EAA7D,EAA6DA,cAAeuS,EAA5E,EAA4EA,aAE5E,IAAKH,EACD,OAAO,KAGX,IAAMX,EAAUhpB,KAAKqqB,mBAErB,OACI,eAACZ,GAAD,WACI,sBAAKppB,UAAU,QAAf,+BAA0B,sBAAMA,UAAU,OAAhB,6BAA1B,gCAAqF,sBAAMA,UAAU,OAAhB,qBAArF,gDACA,sBAAKA,UAAU,UAAf,UAEQonB,EAAIxlB,OAAS,GACb,sBAAK5B,UAAU,QAAf,UACI,sBAAKA,UAAU,WAAf,UACI,gCACI,sBAAMA,UAAU,WAAhB,0BADJ,uFAIA,qBAAKA,UAAU,UAAf,SACI,cAAC,KAAD,CAAUoV,QAASqU,EAAcxb,SAAUtO,KAAKwqB,mBAAhD,mEAIJ/C,EAAI5V,KAAI,SAAC7O,EAAGmB,GACR,OACI,sBAAK9D,UAAU,WAAf,UACK2C,EAAE2e,OADP,MACkB3e,EAAEkf,SADpB,KACgClf,EAAEiV,SAAS/J,MAD3C,IAGQlL,EAAEgnB,QAAuB,WAAbhnB,EAAEgnB,QACd,sBAAK3pB,UAAU,UAAf,qCACS8C,EAAYH,EAAEgnB,QAAQlpB,QAGnC,gCACI,sBAAMT,UAAS,cAAsB,WAAb2C,EAAEgnB,OAAsB,SAAW,IAAM,aAAW,MAAM,UAAShnB,EAAE2e,OAAQ,cAAY,SAASxT,QAAS,EAAK4b,aAAxI,0BACA,cAAC,KAAD,CACIta,UAAU,QACVG,QACI,sBAAKxP,MAAO,CAAEoC,MAAO,SAArB,UACI,qBAAKpC,MAAO,CAAEkI,SAAU,OAAQ6a,aAAc,OAA9C,gFACA,cAAC,GAAD,CAAoBzgB,OAAQ,IAAKgE,MAAoB,WAAb1D,EAAEgnB,YAAsBxH,EAAYxf,EAAEgnB,OAAQ1b,SAAU,SAAC4b,GAAD,OAAY,EAAKD,KAAKjnB,EAAE2e,OAAQuI,SAExItV,QAAS,CAAC,SAPd,SASI,sBAAMvU,UAAS,sBAAkB2C,EAAEgnB,QAAuB,WAAbhnB,EAAEgnB,OAAuB,SAAW,IAAM,aAAW,MAAM,UAAShnB,EAAE2e,OAAQ,cAAY,OAAvI,iCAnBmBxd,SA6B/CwX,EAAO1Z,OAAS,GAChB,sBAAK5B,UAAU,WAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAMA,UAAU,cAAhB,0BADJ,2IAKIsb,EAAO9J,KAAI,SAAC7O,EAAGmB,GACX,OACI,sBAAK9D,UAAU,WAAf,UACK2C,EAAE2e,OADP,MACkB3e,EAAEkf,SAChB,gCACI,sBAAM7hB,UAAS,cAAsB,SAAb2C,EAAEgnB,OAAoB,SAAW,IAAM,aAAW,SAAS,UAAShnB,EAAE2e,OAAQ,cAAY,OAAOxT,QAAS,EAAK4b,aAAvI,0BACA,sBAAM1pB,UAAS,qBAA6B,WAAb2C,EAAEgnB,OAAsB,SAAW,IAAM,aAAW,SAAS,UAAShnB,EAAE2e,OAAQ,cAAY,SAASxT,QAAS,EAAK4b,aAAlJ,+BAJuB5lB,SAa/C0lB,EAAW5nB,OAAS,GACpB,sBAAK5B,UAAU,QAAf,UAAuB,sBAAMA,UAAU,aAAhB,0BAAvB,gBAAgE,iCAASwpB,EAAW5nB,SAApF,+HAIR,qBAAK5B,UAAU,SAAf,SACI,cAAC,IAAD,CAAQkK,KAAK,UAAU2Y,MAAmB,IAAZ8F,EAAepV,MAAM,QAAQoX,QAASzT,EAAepJ,QAASnO,KAAK8X,OAAQrB,SAAsB,IAAZuS,EAAnH,mC,GArOG1oB,iBAmPRiO,oBALf,SAAyBlE,GAErB,MAAO,CAAEzJ,QADWyJ,EAAZzJ,WAIG2N,CAAyBmb,IC/OlCuB,G,4MACF5gB,MAAQ,CACJ6gB,cAAe,I,EAiBnBC,YAAc,SAAC7lB,EAAGzD,EAAOG,GACrB,GAAsB,IAAlBsD,EAAEf,KAAKC,OAAX,CAGA,IAAQ5B,EAAQC,OAARD,IACR,EAA2C,EAAK3C,MAAxCQ,EAAR,EAAQA,KAAMY,EAAd,EAAcA,SAAUV,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,QAElB,WAATH,GACA+C,IAEJ,IAAM8F,EAAW1G,EAAIE,MAAM1B,SAAS0C,MAAK,SAAAmE,GAAC,OAAIA,EAAEnH,OAASO,KACnDkD,EAAOpB,EAAY9B,EAAUT,GAC7BwqB,EAAS,EAAKC,YACpB,iBAAmC/lB,EAAEf,KAAKG,QAAjCC,EAAT,EAAMpC,EAAcqC,EAApB,EAAiBnC,EAEjBZ,EAAMwC,GAAG,eAAe,SAACiB,GACrBA,EAAEf,KAAKW,cAAcqjB,iBACrB,IAYI+C,EAAMC,EAZV,iBAAiCjmB,EAAEf,KAAKG,QAA7BM,EAAX,EAAQzC,EAAY0C,EAApB,EAAiBxC,EACX+oB,EAASxmB,EAAOL,EAChB8mB,EAASxmB,EAAOL,EAGhB8mB,EAAW,CAAEnpB,EAAG6oB,EAAOppB,GAAGO,EAAIipB,EAAS7qB,EAAO8B,EAAG2oB,EAAOppB,GAAGS,EAAIgpB,EAAS9qB,GACxEgrB,EAAcP,GAAQppB,EAAI,GAAK,GAG/B4pB,EAAW5iB,KAAK6K,IAAI6X,EAASnpB,EAAIopB,EAAYppB,GAC7CspB,EAAY7iB,KAAK6K,IAAI6X,EAASjpB,EAAIkpB,EAAYlpB,GAI9CqpB,EAAO9iB,KAAK+K,IAAIqX,EAAOppB,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,GACnFwpB,EAAO/iB,KAAKof,IAAIgD,EAAOppB,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,GACnFypB,EAAOhjB,KAAK+K,IAAIqX,EAAOppB,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,GACnFwpB,EAAOjjB,KAAKof,IAAIgD,EAAOppB,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,GAEzF6oB,EAAOtiB,KAAK+K,IAAI2X,EAASnpB,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,EAAG6oB,GAAQppB,EAAE,GAAG,GAAGO,GAClFgpB,EAAOviB,KAAK+K,IAAI2X,EAASjpB,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,EAAG2oB,GAAQppB,EAAE,GAAG,GAAGS,GAE9E2oB,EAAOppB,GAAGO,IAAMupB,IAEZR,EADAI,EAASnpB,EAAIwpB,EACNA,EAEAL,EAASnpB,GAIpB6oB,EAAOppB,GAAGS,IAAMupB,IAEZT,EADAG,EAASjpB,EAAIwpB,EACNA,EAEAP,EAASjpB,GAIxB8B,EAAKhC,EAAI+oB,EACT/mB,EAAK9B,EAAI8oB,EACThnB,EAAK/B,MAAQopB,EACbrnB,EAAK7B,OAASmpB,EAEdzmB,GAAcxE,GAEd0I,EAAS2K,QACT3K,EAAS/G,EAAI+oB,EACbhiB,EAAS7G,EAAI8oB,EACb,IAAMnY,EAAYpN,EAAczB,EAAKpE,OACrCmJ,EAASC,UAAU,EAAG6J,EAAW,GACjC9J,EAASE,UAAU4J,EAAW,IAC9B9J,EAASG,SACL,EACA,EACAmiB,EACAC,MAIRhqB,EAAMwC,GAAG,aAAa,WAClBxC,EACKiS,IAAI,eACJA,IAAI,aACJA,IAAI,uBAEbjS,EAAMwC,GAAG,oBAAoB,WACzBxC,EACKiS,IAAI,eACJA,IAAI,aACJA,IAAI,yB,EAIjB1M,OAAS,WACL,IAAQxE,EAAQC,OAARD,IACAsoB,EAAkB,EAAK7gB,MAAvB6gB,cACFE,EAAS,EAAKC,YAGpB,GAAID,EAAOnpB,OAAS,EAAG,CAGnB,IAFA,IAAIiiB,EAAM,GADS,WAGVliB,GACL,IAAIH,EAAQqpB,EAAclpB,GAErBH,KACDA,EAAQ,IAAIiG,KACN1D,aAAc,EACpBvC,EAAMf,KAAN,QACA8B,EAAIE,MAAMoF,SAASrG,GACnBqiB,EAAI/Z,KAAKtI,GACTA,EAAM8B,OAAS3B,EAAI,IAAM,EAAI,cAAgB,cAC7CH,EAAMwC,GAAG,eAAe,SAACiB,GAAD,OAAO,EAAK6lB,YAAY7lB,EAAGzD,EAAOG,OAG9DH,EAAMU,EAAI6oB,EAAOppB,GAAGO,EACpBV,EAAMY,EAAI2oB,EAAOppB,GAAGS,EACpBZ,EAAMoS,QACN,MAA8B,EAAKhU,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZsrB,EAAiB/oB,EAAY9B,EAAUT,GACvCT,EAAQ+rB,EAAe/rB,MAAQ6F,EAAckmB,EAAe/rB,OAAS,WAC3E0B,EAAM0H,UAAU,EAAGpJ,EAAO,GAC1B0B,EAAM2H,UAAW,SAAU,GAC3B3H,EAAMsqB,WAAW,EAAG,EAAG,GACvBtqB,EAAM6H,UACN7H,EAAMmG,OAAS,MAvBVhG,EAAE,EAAGA,EAAEopB,EAAOnpB,OAAQD,IAAM,EAA5BA,GAyBLkiB,EAAIjiB,OAAS,GACb,EAAK6M,SAAS,CACVoc,cAAehH,SAOvB,GAAIgH,EAAc,GACd,IAAK,IAAIlpB,EAAE,EAAGA,EAAE,EAAGA,IACfkpB,EAAclpB,GAAGiS,S,EAOjCoX,UAAY,WACR,MAA8B,EAAKprB,MAA3BoB,EAAR,EAAQA,SAAUT,EAAlB,EAAkBA,QACZ2D,EAAOpB,EAAY9B,EAAUT,GACnC,GAAI2D,EAAM,CACN,IAAQhC,EAAwBgC,EAAxBhC,EAAGE,EAAqB8B,EAArB9B,EAAGD,EAAkB+B,EAAlB/B,MAAOE,EAAW6B,EAAX7B,OACrB,MAAO,CACH,CAAEH,IAAGE,KACL,CAAEF,EAAGA,EAAIC,EAAOC,KAChB,CAAEF,EAAGA,EAAIC,EAAOC,EAAGA,EAAIC,GACvB,CAAEH,IAAGE,EAAGA,EAAIC,IAGhB,MAAO,I,0DAxKf,WACI,IAAQE,EAAQC,OAARD,IACkB5C,KAAKqK,MAAvB6gB,cACMjnB,SAAQ,SAAAuY,GAAC,OAAI5Z,EAAIE,MAAMiE,YAAYyV,Q,gCAIrD,SAAmBI,EAAWC,EAAWC,GACjCF,EAAUvb,WAAarB,KAAKC,MAAMoB,UAAYub,EAAUhc,UAAYZ,KAAKC,MAAMW,SAC/EZ,KAAKoH,W,oBAmKb,WACI,OAAO,S,GAlLK9G,iBA4LLiO,I,GAAAA,gBALf,SAAyBlE,GACrB,IAAQ5J,EAAoC4J,EAApC5J,KAAME,EAA8B0J,EAA9B1J,MAAOU,EAAuBgJ,EAAvBhJ,SAAWT,EAAYyJ,EAAZzJ,QAChC,MAAO,CAAEH,OAAME,QAAOU,WAAUT,QAAQ,eAAKA,MAGlC2N,CAAyB0c,ICvM3BmB,GAAYxf,KAAOuH,IAAV,ynBCYlBkY,GAAc,KAEZC,G,4MACFjiB,MAAQ,CACJkiB,YAAY,EACZC,YAAY,EACZC,iBAAiB,EACjBhC,UAAW,GACXC,YAAa,I,EAgEjBgC,eAAiB,SAACpnB,GACd,GAAIzC,OAAO8pB,SAASC,SAAWtnB,EAAEsnB,OAAjC,CAGA,MAAqCtnB,EAAEf,KAA/BgG,EAAR,EAAQA,KAAMsiB,EAAd,EAAcA,aAActoB,EAA5B,EAA4BA,KAC5B,GACS,WADDgG,EAGA1H,OAAOkV,OAAOC,YAAY,CAAEzN,KAAM,YAAc,KAC3CsiB,EAID3gB,EAAU,eAHV5E,EAAc/C,EAAKuoB,aACnB5gB,EAAU,WAId,EAAK6gB,YAAYxoB,EAAKuoB,YAAavoB,EAAKyoB,SACxCvT,YAAW,WACP,IAAM5U,EAAU,eAAO,EAAK5E,MAAMW,SAClCiE,EAAW/D,KAAOyD,EAAKuoB,YAAYhsB,MAAQ,aAC3C+D,EAAW9D,MAAQwD,EAAK4kB,KACxB/jB,GAAcP,GACdE,EAAe,QAEnBqV,QAAQC,IAAI,eAAM/U,K,EAO9BmN,SAAW,SAACnN,GACR,MAAmC,EAAK+E,MAAhCkiB,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WACZ5pB,EAAQC,OAARD,IACR,EAA+C,EAAK3C,MAA5CU,EAAR,EAAQA,MAAOU,EAAf,EAAeA,SAAUE,EAAzB,EAAyBA,SAAUX,EAAnC,EAAmCA,QAEnC,IADkB,CAAC,QAAS,WAAY,SAAU,UACpC+R,SAASrN,EAAE+F,OAAOuH,QAAQC,eAAxC,CAIA,IAAmB,KAAdvN,EAAEoN,SAAgC,IAAdpN,EAAEoN,UAA+B,KAAbrR,EAAiB,CAC1D,IAAM4rB,EAASrqB,EAAIE,MAAM1B,SAAS0C,MAAK,SAAAd,GAAC,OAAI3B,IAAa2B,EAAElC,QACrD+D,EAAU,eAAOjE,GACjBssB,EAAa/pB,EAAY9B,EAAUwD,GACnCsoB,EAAcD,EAAWjjB,QAAUijB,EAAWjjB,OAAOyS,OAASwQ,EAAWjjB,OAAOyS,MAAMC,QAC5F,GAAI6P,IAAeW,EAAa,CAC5BvqB,EAAIE,MAAMiE,YAAYkmB,GAEtB,IADA,IAAM7rB,EAAWW,EAAekrB,GACvBjrB,EAAE,EAAGA,EAAEZ,EAASa,OAAQD,IAC7BY,EAAIE,MAAMiE,YAAY3F,EAASY,IA4BnC,OA1BIX,IAAaE,GACb6K,GAAe,IAEnBK,GAAWpL,GACXmC,SACIgpB,GACA/e,IAAMC,KAAK,0EAA2E,CAClF7M,GAAIqsB,EAAWjjB,OAAOyS,MAAMC,UAC7B5O,MAAK,SAAAxG,GACkB,IAAlBA,EAAIhD,KAAKyJ,OACTkf,EAAWjjB,OAAX,2BACOijB,EAAWjjB,QADlB,IAEIyS,MAAM,2BACEwQ,EAAWjjB,OAASijB,EAAWjjB,OAAOyS,MAAQ,IADjD,IAEDC,QAAS,OAGjBvX,GAAcP,GACd,EAAKiK,SAAS,CAAE0d,YAAY,IAC5B7kB,IAAQmC,QAAQ,4BAChBsjB,IAAaC,QAAQ,UACrBlN,aAAakM,IACbA,GAAc,UAM1Bc,IAAgBX,IAChB,EAAK1d,SAAS,CAAE0d,YAAY,IAC5BH,GAAc5S,YAAW,WACrB,EAAK3K,SAAS,CAAE0d,YAAY,MAC7B,KACHY,IAAaE,QAAQ,CACjB9hB,IAAK,SACL7D,QAAS,gKACT4lB,YACI,sBAAKntB,MAAO,CAACkI,SAAU,QAAvB,UACI,uCADJ,yCAC8B,sBAAMjI,UAAU,MAAhB,oBAD9B,iBACqE,sBACjEA,UAAU,MADuD,uBADrE,4BAGI,qBAAKA,UAAU,WAAWD,MAAO,CAACsW,UAAW,YAGrD8W,SAAU,EACVptB,MAAO,CACHoC,MAAO,SAEXirB,QAAS,kBAAM,EAAK3e,SAAS,CAAE0d,YAAY,QAMtC,KAAdlnB,EAAEoN,SAAmB6Z,IACpBjnB,EAAEqJ,kBACFnL,IACAZ,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,QAAemD,SAAQ,SAAAgE,GAAC,OAAIA,EAAE7D,aAAc,KAC7ExB,EAAIE,MAAMa,OAAS,OACnB,EAAKmL,SAAS,CACVyd,YAAY,IAEhB3pB,EAAIE,MAAMc,qBAEVhB,EAAIE,MAAMuB,GAAG,aAAa,SAACiB,GACvB1C,EAAIE,MAAMa,OAAS,WACnB,qBAA+B2B,EAAEf,KAAKG,QAA7BgpB,EAAT,EAAMnrB,EAAYorB,EAAlB,EAAelrB,EAuBfG,EAAIE,MAAMuB,GAAG,aApBW,SAACiB,GACrB,qBAAiCA,EAAEf,KAAKG,QAA7B4mB,EAAX,EAAQ/oB,EAAYgpB,EAApB,EAAiB9oB,EACjBG,EAAIE,MAAMP,GAAK+oB,EAAOoC,EACtB9qB,EAAIE,MAAML,GAAK8oB,EAAOoC,EACtB/qB,EAAIE,MAAM+C,QAAQtD,IAAM+oB,EAAOoC,GAAQ/sB,EACvCiC,EAAIE,MAAM+C,QAAQpD,IAAM8oB,EAAOoC,GAAQhtB,EACvC+sB,EAAOpC,EACPqC,EAAOpC,KAcX3oB,EAAIE,MAAMuB,GAAG,WAVW,WACpB,EAAKyK,SAAS,CACVyd,YAAY,IAEhB3pB,EAAIE,MAAMa,OAAS,UACnBf,EAAIE,MAAMc,2BAQlB2C,SAAS6I,iBAAiB,QAAS,EAAKwe,e,EAIhDA,WAAa,WACT,IAAQhrB,EAAQC,OAARD,IACRA,EAAIE,MAAMa,OAAS,UACnB,EAAKmL,SAAS,CACVyd,YAAY,IAEhB3pB,EAAIE,MAAM1B,SAAS2B,QAAO,SAAAkF,GAAC,MAAe,OAAXA,EAAEnH,QAAemD,SAAQ,SAAAgE,GAAC,OAAIA,EAAE7D,aAAc,KAC7ExB,EAAIE,MAAMc,qBACV2C,SAASgJ,oBAAoB,QAAS,EAAKqe,a,EAG/Cb,YAAc,SAACD,EAAaE,GACxB,IAAMvC,EAAY1gB,EAAwB+iB,GACtCpC,EAAc,GACZmD,EAAoB,CAAC,oBAAqB,uBAAwB,wBAClEC,EAAc,CAChBC,kBAAmB,SACnBC,qBAAsB,YACtBC,qBAAsB,UAE1BjB,EAAQkB,WAAWjqB,SAAQ,SAAAM,GACnBspB,EAAkBlb,SAASpO,EAAK,KAChCmmB,EAAYvgB,KAAK,CACbwX,OAAQpd,EAAK,GACb2d,SAAU4L,EAAYvpB,EAAK,IAC3B0T,SAAU,CACNnX,KAAMyD,EAAK,GAAGhB,MAAM,KAAK,GACzB2K,MAAO3J,EAAK,GAAGhB,MAAM,KAAK,IAAMgB,EAAK,GAAGhB,MAAM,KAAK,SAKnE,EAAKuL,SAAS,CACV2b,YACAC,cACA+B,iBAAiB,K,uDAlPzB,WAAqB,IAAD,OACR7rB,EAAYZ,KAAKC,MAAjBW,QACRkH,IAAWqmB,YACX,IAAMC,EAAa7nB,SAASsI,eAAe,OACrCwf,EAAWxrB,OAAOyrB,WAClBC,EAAY1rB,OAAO2rB,YAAc,GACjC5rB,EAAM,IAAIkF,IAAiB,CAC7BtF,MAAO6rB,EACP3rB,OAAQ6rB,EACRE,WAAW,EACXC,aAAa,EACb9kB,WAAY,IAYhB,GAVAhH,EAAIE,MAAMsB,aAAc,EACxBxB,EAAIE,MAAM+C,QAAU,IAAIiC,IAAe,EAAG,EAAGumB,EAAUE,GAGvD3rB,EAAI+rB,SAAS7oB,KAAK1F,MAAMyN,SAAW,WACnCjL,EAAI+rB,SAAS7oB,KAAK1F,MAAMiY,IAAM,IAC9BzV,EAAI+rB,SAAS7oB,KAAK1F,MAAMwuB,KAAO,IAC/BhsB,EAAI+rB,SAAS7oB,KAAK1F,MAAM4H,OAAS,IAG7BpH,EAAQM,GAAGC,MAAO,CAClB,IAAM0G,EAAUC,IAAaC,KAAKnH,EAAQM,GAAGC,OACvCA,EAAQ,IAAI2G,IAAYD,GAC9B1G,EAAML,KAAO,KACbK,EAAM6G,QAAU,EAChBpF,EAAIE,MAAMoF,SAAS/G,GAMvB,IAAM0G,EAAUC,IAAaC,KAAK,qFAC5B5G,EAAQ,IAAI2G,IAAYD,GAC9B1G,EAAML,KAAO,KACbK,EAAM6G,QAAU,EAChBpF,EAAIE,MAAMoF,SAAS/G,GAGnByB,EAAIE,MAAM+rB,kBAAmB,EAC7BT,EAAWxnB,YAAYhE,EAAIkD,MAC3BjD,OAAOD,IAAMA,EACbC,OAAOuM,iBAAiB,UAAWpP,KAAK0sB,gBAAgB,GACxDnmB,SAAS6I,iBAAiB,UAAWpP,KAAKyS,UAAU,GACpDlM,SAAS6I,iBAAiB,QAAS/J,GAAQ,GAC3CxC,OAAOisB,eAAiB,SAACxpB,IACoB,IAArC,EAAKrF,MAAMO,IAAI0C,QAAQ,WAAmB,EAAKjD,MAAMW,QAAQQ,SAASa,OAAS,KAC/EqD,EAAEypB,aAAc,M,kCAK5B,WACI,IAAQnsB,EAAQC,OAARD,IACR2D,SAASgJ,oBAAoB,UAAWvP,KAAKyS,UAAU,GACvDlM,SAASgJ,oBAAoB,QAASlK,GAAQ,GAC9CzC,EAAIE,MAAMc,uB,oBA4Ld,WACI,MAAoD5D,KAAKqK,MAAjDoiB,EAAR,EAAQA,gBAAiBhC,EAAzB,EAAyBA,UAAWC,EAApC,EAAoCA,YAC5BjpB,EAAazB,KAAKC,MAAlBwB,SACR,OACI,eAAC2qB,GAAD,WACI,cAAC,GAAD,IACA,sBAAK/rB,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAUQ,GAAG,MAA5B,SACI,cAAC,GAAD,MAEJ,qBAAKR,UAAU,OAAf,SACI,cAAC,GAAD,MAGAosB,GACA,cAAC,GAAD,CAAUhC,UAAWA,EAAWC,YAAaA,IAG7CjpB,GACA,qBAAKpB,UAAU,qB,GAlRrBC,iBA+RHiO,oBALf,SAAyBlE,GAErB,MAAO,CAAE7J,IAD2D6J,EAA5D7J,IACMC,KADsD4J,EAAvD5J,KACOE,MADgD0J,EAAjD1J,MACQU,SADyCgJ,EAA1ChJ,SACWE,SAD+B8I,EAAhC9I,SACWX,QADqByJ,EAAtBzJ,QACUa,SADY4I,EAAb5I,YAI5C8M,CAAyB+d,I,cCvSxC0C,IAASC,OACL,cAAC,IAAD,CAAU5rB,MAAOA,EAAjB,SACI,cAAC,GAAD,MAEJkD,SAASsI,eAAe,W","file":"static/js/main.c070ec62.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Icon extends PureComponent {\n\n    static propTypes = {\n        icon: PropTypes.string.isRequired, // 图标的名称，对应 iconfont 里的设置\n        color: PropTypes.string, // 图标的颜色\n        style: PropTypes.object, // 行内样式，加在这里会很方便\n        className: PropTypes.string // icon 的类名\n    }\n\n    render() {\n        const { icon, color, style, className } = this.props\n        return (\n            <i className={`iconfont icon-${icon} ${className || ''}`} style={{...style, color}}/>\n        )\n    }\n}\n\nexport default Icon\n","export const defaultState = {\n    env: 'default', // 环境，default 默认，custom：从个性化的启动页进来的\n    mode: 'choose', // 模式，choose：选择模式，rect：创建矩形模式\n    trackProjectId: '', // 埋点系统中项目的id，首次创建埋点的时候会先创建一个埋点项目，示例项目：57bda573-fd1e-4d34-87df-65f7f243bc8c\n    scale: 1, // 画布缩放\n    dataMap: {  // 数据\n        id: '0',\n        name: 'newProject', // 项目名称\n        cname: '新建项目', // 项目名称-中文\n        willCreateKey: 1,\n        channel: {}, // 频道，同时包括id和name\n        bc: { // 背景图\n            image: '', // 背景图\n            scale: 1 // 背景图缩放比，1 就是 100%\n        },\n        children: []\n    },\n    activeId: '0', // 当前激活的图形的id\n    editId: '', // 修改名称的图形的id\n    parentId: '', // 强制的父容器的id\n    settingWidth: 600, // 设置面板宽度\n    isFreeze: false, // 是否冻结操作\n    extraSetting: { // 全局的设置，一些不想保存到树里面的设置可以放到这里面\n        isShowText: true, // 是否在画布里展示文本\n    },\n};\n","import { getDataById } from './common'\nimport store from '../../store'\n\n/**\n * 判断点击的是哪个图形，按照图形创建顺序倒叙\n *\n * @param {Object} point 点坐标\n * @param {Number} point.x 横坐标\n * @param {Number} point.y 纵坐标\n *\n * @return {Object} 点击命中的图形\n *\n * */\nexport const hitTest = (point) => {\n    let allChildren = getAllChildren()\n    for (let i=allChildren.length - 1; i>=0; i--) {\n        const block = allChildren[i]\n        const isIn = isPointInRect(point, { ...block.getBounds() })\n        if (isIn) {\n            return block\n        }\n    }\n}\n\n/**\n * 判断点是否在矩形里\n * \n * @param {Object} point 点坐标\n * @param {Number} point.x 横坐标\n * @param {Number} point.y 纵坐标\n * \n * @param {Object} rect 矩形信息\n * @param {Number} rect.x 矩形左上角横坐标\n * @param {Number} rect.y 矩形左上角横坐标\n * @param {Number} rect.width 矩形宽度\n * @param {Number} rect.height 矩形高度\n * \n * @return {Boolean} 是否在矩形内部\n * */\nexport const isPointInRect = (point, rect) => {\n    return Boolean(point.x >= rect.x && point.x <= rect.x + rect.width && point.y >= rect.y && point.y <= rect.y + rect.height)\n}\n\n/**\n * 获取某个图形对象下的所有层级的children\n *\n * */\nexport const getAllChildren = (container) => {\n    const { app } = window\n    if (container) {\n        return app.stage.children.filter(a => /^\\d+(_\\d)*$/g.test(a.name) && (a.name + '_').indexOf(container.name + '_') === 0 && container.name !== a.name)\n    } else {\n        return app.stage.children.filter(a => /^\\d+(_\\d)*$/g.test(a.name))\n    }\n}\n\n/**\n * 修改图形的线条样式和填充样式\n *\n * @param {String} id 数据节点的id，也就是图形的name\n *\n * @param {Object} newLineStyle 新的线条样式\n * @param {Number} newLineStyle.lineWidth 线条宽度\n * @param {Number} newLineStyle.color 线条颜色\n * @param {Number} newLineStyle.alpha 线条透明度\n *\n * @param {Object} newFillStyle 新的填充样式\n * @param {Number} newFillStyle.color 填充颜色\n * @param {Number} newFillStyle.alpha 填充透明度\n *\n * */\nexport const updateLineStyle = (id, newLineStyle, newFillStyle) => {\n    const { app } = window\n    const { dataMap } = store.getState()\n    const graphics = app.stage.children.find(a => a.name === id)\n    const data =getDataById(id, dataMap)\n    const { lineWidth, color, alpha } = newLineStyle\n    const { color: fillColor, alpha: fillAlpha } = newFillStyle\n    graphics.clear()\n    graphics.lineStyle(lineWidth, color, alpha)\n    graphics.beginFill(fillColor, fillAlpha)\n    graphics.drawRect(\n        0,\n        0,\n        data.width,\n        data.height\n    )\n    graphics.endFill()\n}\n","import crypto from 'crypto'\nimport { message } from 'antd'\nimport * as PIXI from 'pixi.js'\nimport Color from 'color'\nimport store from '../../store'\nimport { changeActiveId, changeDataMap, changeMode, changeScale, changeEditId } from '@action'\nimport { getAllChildren } from './pixiUtils'\n\n/**\n * 通过id从树中获取节点\n *\n * @param {String} id 节点id\n * @param {Object} obj 搜寻的范围，默认值为 dataMap\n *\n * @return {Object} 节点\n * */\nexport const getDataById = (id, obj = store.getState().dataMap) => {\n    if (obj.id === id){\n        return obj;\n    } else {\n        for (let i=0; i<obj.children.length;i++){\n            if (id.split('_').length === 1) {\n                if (id === obj.children[i].id){\n                    return getDataById(id, obj.children[i]);\n                }\n            } else {\n                if (id.indexOf(obj.children[i].id + '_') === 0 || id === obj.children[i].id){\n                    return getDataById(id, obj.children[i]);\n                }\n            }\n        }\n    }\n}\n\n/**\n * 切换到选择模式，有不少地方需要用到\n *\n * */\nexport const startChoose = () => {\n    const { app } = window\n    changeMode('choose')\n    changeEditId('')\n    app.stage.cursor = 'default'\n    app.stage.removeAllListeners()\n    const hit = app.stage.children.find(a => !!a.isHit)\n    if (hit) {\n        hit.filters = []\n    }\n    const blocks = getAllChildren()\n    blocks.forEach((item, index) => {\n        item.cursor = 'move'\n        item.removeAllListeners()\n        item.interactive = true\n        item.on('pointerdown',  (event) => {\n            if (event.data.button !== 0) { // 只响应鼠标左键\n                return\n            }\n            const { scale, dataMap } = store.getState()\n            let ing = true\n            let { x: startX, y: startY } = {...event.data.global}\n            const newDataMap = {...dataMap}\n            const activeData = getDataById(item.name, newDataMap)\n            if (activeData) {\n                changeActiveId(item.name)\n                item.on('pointermove',  (event) => {\n                    if (ing) {\n                        const { x: endX, y: endY } = {...event.data.global}\n                        item.x += (endX - startX) / scale\n                        item.y += (endY - startY) / scale\n                        activeData.x = item.x\n                        activeData.y = item.y\n\n                        // 如果按了 command，就单独移动，否则就和子元素一起移动\n                        if (!event.data.originalEvent.metaKey) {\n                            const children = getAllChildren(item)\n                            if (children.length > 0) {\n                                for (let i=0; i<children.length; i++) {\n                                    children[i].x += (endX - startX) / scale\n                                    children[i].y += (endY - startY) / scale\n                                    const data = getDataById(children[i].name, newDataMap)\n                                    data.x = children[i].x\n                                    data.y = children[i].y\n                                }\n                            }\n                        }\n                        changeDataMap(newDataMap)\n                        startX = endX\n                        startY = endY\n                    }\n                })\n                item.on('pointerup', () => { ing = false })\n                item.on('pointerupoutside', () => { ing = false })\n            }\n        })\n    })\n}\n\nexport const resize = (e, to) => {\n    const { app } = window\n    const { scale } = store.getState()\n    // 要按 command\n    if (e && !e.metaKey) {\n        return\n    }\n    const { x, y } = app.stage\n    const newScale = to || Number((scale + e.wheelDeltaY / 120 / 100).toFixed(2)) // 滚动到指定缩放度，没有的话就看鼠标滚动距离\n    if (newScale <= 4 && newScale >= 0.1) {\n        app.stage.setTransform(x, y, newScale, newScale)\n        app.stage.hitArea.x = -app.stage.x / newScale\n        app.stage.hitArea.y = -app.stage.y / newScale\n        app.stage.hitArea.width = app.view.width / newScale\n        app.stage.hitArea.height = app.view.height / newScale\n\n        changeScale(newScale)\n    }\n}\n\n// hex 颜色 -> pixi 颜色\nexport const hex2PixiColor = (color) => {\n    return parseInt(color.replace('#', '0x'), 16)\n}\n\n// 复制文本\nexport const copyText = (text, callback) => {\n    const tag = document.createElement('input');\n    tag.setAttribute('id', 'cp_input');\n    tag.value = text;\n    document.body.appendChild(tag);\n    tag.select();\n    document.execCommand('copy');\n    document.body.removeChild(tag)\n    if(callback) {\n        callback(text)\n    }\n}\n\n/**\n * MD5 签名\n * @param {String} str\n * @returns {string}\n */\nexport const md5 = str => {\n    const md5 = crypto.createHash('md5');\n    md5.update(str || '', 'utf8');\n    return md5.digest('hex');\n};\n\n/**\n * 把数据转化为内容，一般是粘贴或者跳转\n *\n * @param {String|Object} data 数据，如果是字符串类型，需要先转成对象\n *\n * */\nexport const transferPaste = (data) => {\n    const { extraSetting } = store.getState()\n\n    const transferPaste_pixi = (obj) => {\n        if (obj.children.length > 0) {\n            for (let c of obj.children) {\n                const textStyle = {\n                    fontFamily: 'Arial',\n                    fontSize: '13px',\n                    fontWeight: 'bold',\n                    fill: c.color,\n                    stroke: Color(c.color).isLight() ? 'rgba(0, 0, 0, 0.7)' : 'rgba(255, 255, 255, 0.7)',\n                    strokeThickness: 4,\n                    dropShadow: true,\n                    dropShadowColor: '#cccccc',\n                    dropShadowAngle: Math.PI / 6,\n                    dropShadowDistance: 2,\n                    dropShadowBlur: 4,\n                    wordWrap: true, //是否允许换行\n                    wordWrapWidth: 440 //换行执行宽度\n                }\n                const graphics = new PIXI.Graphics()\n                const color = hex2PixiColor(c.color)\n                graphics.name = c.id\n                graphics.lineStyle(4, color, 1)\n                graphics.beginFill(color, 0.2)\n                graphics.x = c.x\n                graphics.y = c.y\n                graphics.text = c.name\n                graphics.drawRect(0, 0, c.width, c.height)\n                graphics.endFill()\n                let basicText = new PIXI.Text(graphics.text, textStyle)\n                basicText.name = 'text'\n                basicText.x = 0\n                basicText.y = -24\n                basicText.resolution = 2\n                basicText.visible = extraSetting.isShowText\n                graphics.addChild(basicText)\n                window.app.stage.addChild(graphics)\n                transferPaste_pixi(c)\n            }\n        }\n    }\n\n    const { app } = window\n    let res = {}\n    if (typeof data === 'string') {\n        try{\n            // eslint-disable-next-line no-new-func\n            res = new Function(`return ${data}`)()\n        } catch (e) {\n            try {\n                res = JSON.parse(data)\n            } catch (e) {\n                message.error(`转换失败：${e}`)\n                return\n            }\n        }\n    } else {\n        res = data\n    }\n\n    try {\n        changeActiveId('')\n        changeDataMap(res)\n        for (let i of window.app.stage.children.filter(a => a.name !== 'bc' && a.name !== 'point')) {\n            window.app.stage.removeChild(i)\n        }\n        if (res.bc.image) {\n            const texture = PIXI.Texture.from(res.bc.image)\n            const image = new PIXI.Sprite(texture);\n            image.name = 'bc'\n            image.zIndex = -1\n            image.setTransform(0, 0, res.bc.scale, res.bc.scale)\n            window.app.stage.removeChild(...app.stage.children.filter(c => c.name === 'bc'))\n            app.stage.addChild(image)\n        }\n        transferPaste_pixi(res)\n        startChoose()\n        message.success('粘贴成功！')\n    } catch (e) {\n        message.error(`转换失败: ${e}`)\n    }\n}\n\n/**\n * 从 dataMap 中取出碎片信息，并返回一个数组\n * 一般用于数据的导出，或者和个性化里的 allData 比较\n *\n * @param {Object} dataMap 可选，如果没有提供一个数据源，就使用默认的 store 里的\n * */\nexport const getChipArrayFromDataMap = (dataMap = store.getState().dataMap) => {\n    let res = []\n\n    const getChip = (obj) => {\n        if (obj.config && obj.config.chip && obj.config.chip.length > 0) {\n            obj.config.chip.forEach(c => {\n                res.push({...c, id: obj.id})\n            })\n        }\n        if (obj.children && obj.children.length > 0) {\n            for (let i in obj.children) {\n                getChip(obj.children[i])\n            }\n        }\n    }\n\n    getChip(dataMap)\n    return res\n}\n\n/**\n * 从 dataMap 中取出预设组件，并返回一个数组\n * 一般用于数据的导出\n *\n * @param {Object} dataMap 可选，如果没有提供一个数据源，就使用默认的 store 里的\n * */\nexport const getPreComponentArrayFromDataMap = (dataMap = store.getState().dataMap) => {\n    let res = []\n\n    const getPreComponent = (obj) => {\n        if (obj.config && obj.config.component && obj.config.component.preComponent) {\n            res.push(...obj.config.component.preComponent)\n        }\n        if (obj.children && obj.children.length > 0) {\n            for (let i in obj.children) {\n                getPreComponent(obj.children[i])\n            }\n        }\n    }\n    getPreComponent(dataMap)\n    return res\n}\n\n/**\n * TODO\n * */\nexport const GetTrackFromDataMap = () => {\n\n}\n\n","import { defaultState } from './state'\nimport { getDataById } from '../views/utils/common'\n\nfunction reducer (state = defaultState, action) {\n    switch (action.type) {\n        case 'change_env': return { ...state, env: action.env }\n        case 'change_mode': return { ...state, mode: action.mode }\n        case 'change_scale': return { ...state, scale: action.scale }\n        case 'change_dataMap': return { ...state, dataMap: action.dataMap }\n        case 'change_editId': return { ...state, editId: action.editId }\n        case 'change_parentId': return { ...state, parentId: action.parentId }\n        case 'change_settingWidth': return { ...state, settingWidth: action.settingWidth }\n        case 'change_trackProjectId': return { ...state, trackProjectId: action.trackProjectId }\n        case 'change_isFreeze': return { ...state, isFreeze: action.isFreeze }\n        case 'change_extraSetting': return { ...state, extraSetting: action.extraSetting }\n\n        case 'change_activeId': {\n            const { app } = window\n            const { activeId } = action\n            if (activeId !== '' && activeId !== '0') {\n                app.stage.children.filter(c => c.name !== 'bc' && c.name !== 'point').forEach(a => a.zIndex = 0)\n                app.stage.children.find(c => c.name === action.activeId).zIndex = 999\n            }\n            return { ...state, activeId: action.activeId }\n        }\n        case 'delete_data': {\n            const ids = action.id.split('_')\n            const parentId = ids.length > 1 ? ids.slice(0, -1).join('_'): '0'\n            const newDataMap = {...state.dataMap}\n            const parent = getDataById(parentId, newDataMap)\n            for (let j=0;j<parent.children.length;j++){\n                if (parent.children[j].id === action.id){\n                    parent.children.splice(j,1);\n                    break;\n                }\n            }\n            return { ...state, dataMap: newDataMap, activeId: '', mode: 'choose' }\n        }\n        case 'drag_data': {\n            // 分别是【是否拖拽到目标内部】、【被拖拽的对象的key的列表】、【拖拽目标key】、【拖拽位置,不是top就是bottom】\n            const { dropOver,originKey,targetKey,dropPosition } = action.obj\n            const newDataMap = { ...state.dataMap };\n            const originObj = getDataById(originKey[0], newDataMap);      //获取拖拽对象\n            const originParentId = originObj.id.split('_').length > 1 ? originObj.id.split('_').slice(0, -1).join('_'): '0'\n            const originParent = getDataById(originParentId, newDataMap) // 拖拽对象的父对象\n\n            // 因为执行的类似于剪切操作，所以要把原对象删掉\n            for (let j=0;j<originParent.children.length;j++){\n                if (originParent.children[j].id === originKey[0]){\n                    originParent.children.splice(j,1);\n                    break;\n                }\n            }\n\n            if (dropOver){\n                //直接拖拽到目标上\n                let target = getDataById(targetKey, newDataMap); //获取目标对象\n                let will = target.id === '0' ? target.willCreateKey + '' : `${target.id}_${target.willCreateKey}`;\n\n                const handleDrag = function(obj,key){\n                    window.app.stage.children.find(a => a.name === obj.id).name = key\n                    obj.id = key;\n                    if (obj.children ){\n                        for (let i=0;i<obj.children.length;i++){\n                            const will = `${obj.id}_${obj.willCreateKey}`\n                            obj.willCreateKey++\n                            handleDrag(obj.children[i],will)\n                        }\n                    }\n                };\n\n                handleDrag(originObj ,will);\n                target.children.push(originObj); // 然后直接push到末尾就行\n                target.willCreateKey++; // 因为用过一次了，所以要获取新的willCreateKey\n                return { ...state, activeId: originObj.id, dataMap: newDataMap };\n            } else {\n                //拖拽到线上，要添加到线的父对象里\n                const targetParentId = targetKey.split('_').length > 1 ? targetKey.split('_').slice(0, -1).join('_'): '0'\n                let targetParent = getDataById(targetParentId,newDataMap); // 获取拖拽目标的父元素，因为这算是父元素的新增\n\n                let will = targetParent.id === '0' ? targetParent.willCreateKey + '' : `${targetParent.id}_${targetParent.willCreateKey}`;\n                const handleDrag = function(obj,key){\n                    window.app.stage.children.find(a => a.name === obj.id).name = key\n                    obj.id = key;\n\n                    if (obj.children){\n                        for (let i=0;i<obj.children.length;i++){\n                            const will = obj.id === '0' ? obj.willCreateKey + '' : `${obj.id}_${obj.willCreateKey}`;\n                            obj.willCreateKey++\n                            handleDrag(obj.children[i],will)\n                        }\n                    }\n                };\n                handleDrag(originObj,will);\n                for (let i=0; i<targetParent.children.length; i++){\n                    if (targetParent.children[i].id === targetKey){\n                        if (dropPosition === 'top'){\n                            targetParent.children.splice(i,0,originObj);\n                            break;\n                        } else {\n                            targetParent.children.splice(i+1,0,originObj);\n                            break;\n                        }\n                    }\n                }\n                targetParent.willCreateKey++;\n                return {...state, activeId: originObj.id, dataMap: newDataMap};\n            }\n        }\n        default: return state\n    }\n}\n\nexport default reducer;\n","import { applyMiddleware,createStore,compose } from \"redux\";\nimport thunk from 'redux-thunk'\nimport reducers from './reducer'\nimport { defaultState } from './state'\n// 创建store实例\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducers,\n    defaultState,\n    composeEnhancers(\n        applyMiddleware(thunk), /* enhancer(middleware) */\n    )\n);\n\nexport default store\n","import store from './index'\n\nexport const changeEnv = env => store.dispatch({ type:'change_env', env })\nexport const changeMode = mode => store.dispatch({ type:'change_mode', mode })\nexport const changeScale = scale => store.dispatch({ type:'change_scale', scale })\nexport const changeActiveId = activeId => store.dispatch({ type:'change_activeId', activeId })\nexport const changeEditId = editId => store.dispatch({ type: 'change_editId', editId })\nexport const changeParentId = parentId => store.dispatch({ type: 'change_parentId', parentId })\nexport const changeSettingWidth = settingWidth => store.dispatch({ type: 'change_settingWidth', settingWidth })\nexport const changeTrackProjectId = trackProjectId => store.dispatch({ type: 'change_trackProjectId', trackProjectId })\nexport const changeIsFreeze = isFreeze => store.dispatch({ type: 'change_isFreeze', isFreeze })\nexport const changeExtraSetting = extraSetting => store.dispatch({ type: 'change_extraSetting', extraSetting })\n\nexport const changeDataMap = dataMap => store.dispatch({ type:'change_dataMap', dataMap })\nexport const deleteData = id => store.dispatch({ type: 'delete_data', id })\nexport const dragData = obj => store.dispatch({ type: 'drag_data', obj })\n\n","import styled from 'styled-components'\n\nexport const StyledUploadImage = styled.span`\n  .empty {\n    //animation: empty 1.5s infinite linear;\n  }\n  \n  button {\n    background-color: #eeeeee!important;\n    //pointer-events: none;\n    cursor: not-allowed!important;\n  }\n  \n  @keyframes empty {\n    from {\n      transform: rotate(0deg);\n    }\n    5% {\n      transform: rotate(-10deg);\n    }\n    10% {\n      transform: rotate(0deg);\n    }\n    15% {\n      transform: rotate(10deg);\n    }\n    20% {\n      transform: rotate(0deg);\n    }\n    25% {\n      transform: rotate(10deg);\n    }\n    30% {\n      transform: rotate(0deg);\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport * as PIXI from 'pixi.js'\nimport axios from 'axios'\nimport { message, Tooltip } from 'antd'\nimport Icon from '../../../components/Icon'\nimport { changeDataMap } from '@action'\nimport { StyledUploadImage } from './styles'\n\nclass UploadImage extends PureComponent {\n\n    upload = () => {\n        // document.getElementById(\"uploadImage\").click()\n    }\n\n    finishUpload = (e) => {\n        const { app } = window\n        const [ file ] = e.currentTarget.files\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload= (ev) => {\n            axios.post(`https://test0.ucms.ifeng.com/api/resource/upload`, {\n                body: {\n                    data: ev.target.result,\n                    needWaterMark: false,\n                    position: '',\n                    waterMarkUrl: ''\n                }\n            }).then(res => {\n                if (res.data.code === 0) {\n                    const texture = PIXI.Texture.from(ev.target.result)\n                    const image = new PIXI.Sprite(texture);\n                    image.name = 'bc'\n                    image.zIndex = -1\n                    // 只能出现一个背景图，所以要删掉上一个\n                    app.stage.removeChild(...app.stage.children.filter(c => c.name === 'bc'))\n                    app.stage.addChild(image)\n                    const { dataMap } = this.props\n                    const newDataMap = {...dataMap}\n                    newDataMap.bc.image = res.data.data.url\n                    changeDataMap(newDataMap)\n                    message.success('上传成功')\n                } else {\n                    message.error(`上传失败：${res.data.message}`)\n                }\n            })\n        }\n    }\n\n    render() {\n        const { dataMap: { bc: { image } } } = this.props\n        return (\n            <StyledUploadImage>\n                <Tooltip title=\"上传新的背景图(暂停)\">\n                    <button className={`btn image ${!image ? 'empty' : ''}`} onClick={this.upload}><Icon icon=\"addImage\"/></button>\n                </Tooltip>\n                <input type=\"file\" accept=\"image/*\" id=\"uploadImage\" hidden onChange={this.finishUpload}/>\n            </StyledUploadImage>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { dataMap } = state;\n    return { dataMap }\n}\n\nexport default connect(mapStateToProps)(UploadImage)\n","import React, { PureComponent } from 'react'\nimport { Button, Input, message, Popover } from 'antd'\nimport { transferPaste } from '../../utils/common'\n\nclass Paste extends PureComponent {\n\n    state = {\n        isShowPasteInput: false\n    }\n\n    paste = (e) => {\n        const { isShowPasteInput } = this.state\n        e.stopPropagation()\n        const input = document.getElementById('pasteInput')\n        if (isShowPasteInput) {\n            if (input.value) {\n                transferPaste(input.value)\n            }\n            this.setState({ isShowPasteInput: false })\n        } else {\n            if (navigator.clipboard) {\n                navigator.clipboard.readText()\n                    .then((text) => {\n                        if (text) {\n                            transferPaste(text)\n                        } else {\n                            message.error('剪切板为空')\n                        }\n                    })\n                    .catch(e => {\n                        message.info('未获取到剪切板权限，请手动粘贴到文本框中')\n                        document.addEventListener('click', this.cancelPaste)\n                        this.setState({\n                            isShowPasteInput: true\n                        })\n                        if (input) {\n                            input.focus()\n                        }\n                    })\n            } else {\n                message.info('未获取到剪切板权限，请手动粘贴到文本框中')\n                document.addEventListener('click', this.cancelPaste)\n                this.setState({\n                    isShowPasteInput: true\n                })\n            }\n        }\n    }\n\n    cancelPaste = (e) => {\n        const input = document.getElementById('pasteInput')\n        if (input !== e.target) {\n            this.setState({ isShowPasteInput: false })\n            document.removeEventListener('click', this.cancelPaste)\n        }\n    }\n\n    handlePressEnter = (e) => {\n        transferPaste(e.target.value)\n        this.setState({ isShowPasteInput: false })\n    }\n\n    render() {\n        const { isShowPasteInput } = this.state\n\n        return (\n            <Popover\n                visible={isShowPasteInput}\n                placement=\"bottomRight\"\n                arrowPointAtCenter={false}\n                destroyTooltipOnHide\n                content={<Input id=\"pasteInput\" placeholder=\"粘贴...\" autoFocus style={{ width: '240px' }} onPressEnter={this.handlePressEnter}/>}>\n                <Button className={`paste ${isShowPasteInput ? 'active' : ''}`} type=\"primary\" onClick={this.paste}>\n                    <img src=\"https://x0.ifengimg.com/ucms/2021_50/84364D5CBFFF49F0CA5599277E70616B715E99A8_size2_w48_h48.png\" alt=\"paste\"/>\n                    {isShowPasteInput ? '确认' : '粘贴'}\n                </Button>\n            </Popover>\n        )\n    }\n}\n\nexport default Paste\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Tooltip } from 'antd'\nimport Icon from '../../components/Icon'\nimport { changeParentId } from '@action'\n\nclass Parent extends PureComponent {\n\n    markParent = () => {\n        const { activeId, parentId } = this.props\n        if (activeId === parentId) {\n            changeParentId('')\n        } else {\n            changeParentId(activeId)\n        }\n    }\n\n    clearParent = (e) => {\n        e.stopPropagation()\n        changeParentId('')\n    }\n\n    render() {\n        const { activeId, parentId } = this.props\n\n        return (\n            <Tooltip title={\n                <div>\n                    <span>指定为父容器</span>\n                    <br/>\n                    <span style={{ fontWeight: 'lighter' }}>新的组件将强制创建在该组件内，表现在树状图中为<span style={{ color: '#ffc864' }}>橙色边框</span></span>\n                </div>\n            }>\n                <button className={`btn parent ${parentId && parentId === activeId ? 'active': ''}`} onClick={this.markParent}>\n                    <Icon icon=\"parent\"/>\n                    {\n                        parentId &&\n                        <div className=\"clearParent\" onClick={this.clearParent}>\n                            <Icon icon=\"x\"/>\n                        </div>\n                    }\n                </button>\n            </Tooltip>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, parentId, dataMap } = state;\n    return { activeId, parentId, dataMap }\n}\n\nexport default connect(mapStateToProps)(Parent)\n","import React, { PureComponent } from 'react'\nimport { Select } from 'antd'\nimport { connect } from 'react-redux'\nimport { resize } from '../../utils/common'\n\nconst { Option } = Select\nconst SCALE_LIST = [ 0.1, 0.25, 0.5, 1, 1.5, 2, 4 ] // 缩放值列表，放在 Select 里快速选择\n\nclass Resize extends PureComponent {\n\n    selectRef = React.createRef()\n\n    resizeTo = e => {\n        resize(null, e.value)\n    }\n\n    selectBlur = () => {\n        this.selectRef.current.blur()\n    }\n\n    clickToScale = (e) => {\n        const { scaletype } = e.currentTarget.dataset\n        const { scale } = this.props\n        if (scaletype === '-') {\n            const index = SCALE_LIST.findIndex(s => s >= scale)\n\n            if (index > 0) {\n                resize(null, SCALE_LIST[index - 1])\n            }\n        } else {\n            const index = SCALE_LIST.findIndex(s => s > scale)\n            if (index < SCALE_LIST.length) {\n                resize(null, SCALE_LIST[index])\n            }\n        }\n    }\n\n    render() {\n        const { scale } = this.props\n        return (\n            <div className=\"resize\">\n                <button data-scaletype=\"-\" className=\"btn\" style={{ margin: '0 2px' }} onClick={this.clickToScale}>-</button>\n                <Select\n                    ref={this.selectRef}\n                    value={{ value: scale, label: parseInt(scale * 100) + '%' }}\n                    labelInValue\n                    showArrow={false}\n                    onChange={this.resizeTo}\n                    onSelect={this.selectBlur}\n                    dropdownStyle={{ textAlign: 'center' }}\n                    style={{ width: 70, textAlign: 'center' }}\n                >\n                    {\n                        SCALE_LIST.map((scale, index) => {\n                            return <Option value={scale} key={index}>{scale * 100 + '%'}</Option>\n                        })\n                    }\n                </Select>\n                <button data-scaletype=\"+\" className=\"btn\" style={{ margin: '0 2px' }}  onClick={this.clickToScale}>+</button>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { scale } = state;\n    return { scale }\n}\n\nexport default connect(mapStateToProps)(Resize)\n","import React, { PureComponent } from 'react'\nimport { Popover } from 'antd'\nimport Icon from '../../components/Icon'\n\nclass Help extends PureComponent {\n    render() {\n        return (\n            <Popover content={\n                <div style={{ fontSize: '12px' }}>\n                    <ul style={{paddingBottom: 0, paddingLeft: '14px', margin: 0}}>\n                        <li>空格 + 鼠标拖拽移动画布</li>\n                        <li>command + 滚轮放大缩小</li>\n                        <li>delete 删除图形</li>\n                        <li>移动图形时按住 command 可单独移动</li>\n                        <li>双击树节点编辑名称</li>\n                    </ul>\n                </div>\n            }>\n                <button className=\"btn help\"><Icon icon=\"tip\"/></button>\n            </Popover>\n        )\n    }\n}\n\nexport default Help\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as PIXI from 'pixi.js'\nimport { GlowFilter } from '@pixi/filter-glow'\nimport RandomColor from 'randomcolor'\nimport Color from 'color'\nimport { Tooltip } from 'antd'\nimport Icon from '../../components/Icon'\nimport { changeMode, changeActiveId, changeEditId, changeDataMap } from '@action'\nimport { getDataById, hex2PixiColor, startChoose } from '../../utils/common'\nimport { hitTest } from '../../utils/pixiUtils'\n\nconst outlineFilter = new GlowFilter({ distance: 8, outerStrength: 3, color: 0xaaaaaa, quality: 1 })\n\nclass Create extends PureComponent {\n\n    static propTypes = {\n        colorType: PropTypes.string, // 随机颜色范围\n        colorLightness: PropTypes.string, // 颜色亮度\n    }\n\n    state = {\n        hitObject: null, // 创建模式，鼠标hover的图形，放在这里是起到缓存的作用\n        nextRectColor: '' // 即将创建的图形的颜色，随机颜色\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.keyEvent, false)\n    }\n\n    componentWillUnmount() {\n        const { app } = window\n        document.removeEventListener('keydown', this.keyEvent, false)\n        app.stage.removeAllListeners()\n    }\n\n    keyEvent = (e) => {\n        const { mode } = this.props\n\n        // Esc 取消创建\n        if (e.keyCode === 27 && mode === 'rect') {\n            startChoose()\n        }\n\n        // ---------------  在文本框等内不监听的情况\n        const ignoreTag = ['input', 'textarea', 'select', 'button']\n        if (ignoreTag.includes(e.target.tagName.toLowerCase())) {\n            return\n        }\n        // R 创建矩形\n        if (e.keyCode === 82 && !e.metaKey ) {\n            this.drawNormal()\n        }\n    }\n\n    drawNormal = () => {\n        const { dataMap, colorType, colorLightness } = this.props\n        const { app } = window\n        const blocks = app.stage.children.filter(c => c.name !== 'bc' && c.name !== 'point')\n        changeMode('rect')\n        blocks.forEach(b => b.interactive = false)\n        app.stage.removeAllListeners()\n        app.stage.on('pointermove', this.findHit)\n        let start = {}\n        let duringRect = new PIXI.Graphics()\n        app.stage.cursor = 'crosshair'\n\n        let pixiColor\n        let color = RandomColor({ luminosity: colorLightness, hue: colorType})\n        pixiColor = hex2PixiColor(color)\n        if (colorType !== 'hue') {\n            this.setState({\n                nextRectColor: color\n            })\n        }\n        const handleEnd = (event) => {\n            const { parentId, scale, extraSetting } = this.props\n            const { hitObject: hit } = this.state\n            const end = {...event.data.global}\n\n            const shape = new PIXI.Graphics()\n            app.stage.removeChild(duringRect)\n            // 如果只移动了很小的距离，就不创建\n            if (Math.abs(end.x - start.x) < 2 && Math.abs(end.y-start.y) < 2) {\n                app.stage.off('pointerup')\n                app.stage.off('pointerupoutside')\n                return\n            }\n\n            const width = Math.abs(end.x-start.x) / scale\n            const height = Math.abs(end.y-start.y) / scale\n            shape.lineStyle(4, pixiColor, 1)\n            shape.beginFill(pixiColor, 0.2)\n            shape.drawRect(\n                0,\n                0,\n                width,\n                height\n            )\n            shape.x = (Math.min(start.x, end.x) - app.stage.x) / scale\n            shape.y = (Math.min(start.y, end.y) - app.stage.y) / scale\n            shape.endFill()\n\n            // 有命中，在命中的容器内创建\n            if (parentId || hit) {\n                const newDataMap = { ...dataMap }\n                let parent\n                if (parentId) {\n                    parent = getDataById(parentId, newDataMap)\n                } else {\n                    parent = getDataById(hit.name, newDataMap)\n                }\n\n                const newId = parent.id + '_' + parent.willCreateKey + ''\n                parent.children.push({\n                    id: newId,\n                    name: `组件${newId}`,\n                    x: shape.x,\n                    y: shape.y,\n                    width,\n                    height,\n                    children: [],\n                    color,\n                    willCreateKey: 1\n                })\n                parent.willCreateKey++\n                shape.name = newId\n                shape.text = `组件${newId}`\n                app.stage.addChild(shape)\n\n                changeActiveId(newId)\n                changeEditId(newId)\n                changeDataMap(newDataMap)\n            } else {\n                // 没有命中，创建到总容器内\n                const newId = dataMap.willCreateKey + ''\n                changeDataMap({\n                    ...dataMap,\n                    willCreateKey: dataMap.willCreateKey + 1,\n                    children: [\n                        ...dataMap.children,\n                        {\n                            id: newId,\n                            name: `组件${newId}`,\n                            x: shape.x,\n                            y: shape.y,\n                            width,\n                            height,\n                            children: [],\n                            color,\n                            willCreateKey: 1\n                        }\n                    ]\n                })\n                shape.name = newId\n                shape.text = `组件${newId}`\n                app.stage.addChild(shape)\n                changeActiveId(newId)\n                changeEditId(newId)\n            }\n            start = {}\n            const textStyle = {\n                fontFamily: 'Arial',\n                fontSize: '13px',\n                fontWeight: 'bold',\n                fill: color,\n                stroke: Color(color).isLight() ? 'rgba(0, 0, 0, 0.7)' : 'rgba(255, 255, 255, 0.7)',\n                strokeThickness: 4,\n                dropShadow: true,\n                dropShadowColor: '#cccccc',\n                dropShadowAngle: Math.PI / 6,\n                dropShadowDistance: 2,\n                dropShadowBlur: 4,\n                wordWrap: true, //是否允许换行\n                wordWrapWidth: 440 //换行执行宽度\n            }\n            let basicText = new PIXI.Text(shape.text, textStyle)\n            basicText.name = 'text'\n            basicText.x = 0\n            basicText.y = -24\n            basicText.resolution = 2\n            basicText.visible = extraSetting.isShowText\n            shape.addChild(basicText)\n            this.drawNormal()\n            app.stage.off('pointerup')\n            app.stage.off('pointerupoutside')\n        }\n\n        app.stage.on('pointerdown', (event) => {\n            const { parentId, dataMap } = this.props\n            const { hitObject: hit } = this.state\n\n            if (colorType === 'hue' && (parentId || hit)) {\n                let parent = getDataById(parentId || hit.name, dataMap)\n                color = RandomColor({ hue: parent ? parent.color : '', luminosity: colorLightness })\n            }\n            pixiColor = hex2PixiColor(color)\n            this.setState({\n                nextRectColor: color\n            })\n\n            if (event.data.button !== 0) {\n                return\n            }\n            start = {...event.data.global}\n            app.stage.off('pointermove', this.findHit)\n            duringRect.visible = false\n            duringRect.name = 'tmp'\n            app.stage.addChild(duringRect)\n\n            app.stage.on('pointermove', (event) => {\n                duringRect.visible = true\n                const current = {...event.data.global}\n                duringRect.clear()\n                duringRect.lineStyle(4, pixiColor, 1)\n                duringRect.beginFill(pixiColor, 0.2)\n                duringRect.drawRect(\n                    (start.x - app.stage.x) / app.stage.scale.x,\n                    (start.y - app.stage.y) / app.stage.scale.y,\n                    (current.x-start.x) / app.stage.scale.x,\n                    (current.y-start.y) / app.stage.scale.y\n                )\n                duringRect.endFill()\n            })\n            app.stage.on('pointerup', handleEnd)\n            app.stage.on('pointerupoutside', handleEnd)\n        })\n    }\n\n    findHit = (event) => {\n        const { hitObject } = this.state\n        const hit = hitTest(event.data.global)\n        if (!hitObject || !hit || (hitObject && hit && hit.name !== hitObject.name)) {\n            if (hitObject) {\n                hitObject.filters = []\n                hitObject.isHit = false\n            }\n            if (hit) {\n                hit.filters = [outlineFilter]\n                hit.isHit = true // 标记一下，用于全局清除\n            }\n            this.setState({\n                hitObject: hit\n            })\n        }\n    }\n\n    render() {\n        const { mode } = this.props\n        const { nextRectColor } = this.state\n\n        return (\n            <Tooltip title=\"创建矩形 (R)\">\n                <button onClick={this.drawNormal} className={`btn ${mode === 'rect' ? 'active': ''}`} style={mode === 'rect' ? { color: nextRectColor } : {}}>\n                    <Icon icon=\"rect\"/>\n                </button>\n            </Tooltip>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { mode, scale, parentId, dataMap, extraSetting } = state;\n    return { mode, scale, parentId, dataMap, extraSetting }\n}\n\nexport default connect(mapStateToProps)(Create)\n","import styled from 'styled-components'\n\nexport const StyledColorChoose = styled.div`\n  \n  .groupTitle {\n    font-size: 12px;\n    color: #767676;\n  }\n\n  .chooses {\n    padding: 4px 0 0 12px;\n    font-size: 12px;\n    margin-bottom: 6px;\n\n    .chooseItem {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      padding: 0 6px;\n      margin: 0 2px;\n      height: 28px;\n      cursor: pointer;\n      border: solid 1px transparent;\n      transition: all .3s;\n      \n      &:hover {\n        border: solid 1px #e9e9e9;\n        border-radius: 4px;\n      }\n\n      &.active {\n        border-radius: 4px;\n        box-shadow: 1px 1px 9px 1px #d0d0d099;\n        border: solid 1px #e9e9e9;\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Popover } from 'antd'\nimport { StyledColorChoose } from './styles'\n\nclass ColorChoose extends PureComponent {\n\n    static propTypes = {\n        colorType: PropTypes.string, // 随机颜色范围\n        colorLightness: PropTypes.string, // 颜色亮度\n        onChange: PropTypes.func // 修改颜色的回调函数\n    }\n\n    state = {\n        randomColorType: ''\n    }\n\n    getColorTypeText = (type) => {\n        switch (type) {\n            case 'hue': {\n                return (\n                    <div style={{ margin: '0 2px' }}>\n                        <span style={{color: '#a31131'}}>系</span>\n                        <span style={{color: '#d81316'}}>列</span>\n                        <span style={{color: '#ef758b'}}>颜</span>\n                        <span style={{color: '#f9bdcb'}}>色</span>\n                    </div>\n                )\n            }\n            default: return <div style={{ margin: '0 2px', backgroundImage: `url('https://x0.ifengimg.com/ucms/2022_07/16E4BA1EA98E030BBCB4ACC21679A66C83E60C7C_size583_w800_h450.gif')`, WebkitBackgroundClip: 'text', color: 'transparent' }}>完全随机</div>\n        }\n    }\n\n    getColorLightnessText = (type) => {\n        switch (type) {\n            case 'light': return <div style={{ color: 'silver', textShadow: '1px 1px 5px #cbcbcb', margin: '0 2px' }}>亮色</div>\n            case 'dark': return <div style={{ fontWeight: 'bold', margin: '0 2px' }}>暗色</div>\n            default: return null\n        }\n    }\n\n    handleChange = (e) => {\n        const { onChange } = this.props\n        const { type, value } = e.currentTarget.dataset\n        onChange(type, value)\n    }\n\n    render() {\n        const { colorType, colorLightness } = this.props\n\n        return (\n            <Popover\n                trigger=\"click\"\n                placement={\"bottomRight\"}\n                content={\n                    <StyledColorChoose>\n                        <div>\n                            <div className=\"groupTitle\">随机颜色范围：</div>\n                            <div className=\"chooses\">\n                                <div data-type=\"colorType\" data-value=\"hue\" className={`chooseItem ${colorType === 'hue' ? 'active' : ''}`} onClick={this.handleChange}>{this.getColorTypeText('hue')}</div>\n                                <div data-type=\"colorType\" data-value=\"\" className={`chooseItem ${colorType === '' ? 'active' : ''}`} onClick={this.handleChange}>{this.getColorTypeText('')}</div>\n                            </div>\n                        </div>\n                        <div>\n                            <div className=\"groupTitle\">色度：</div>\n\n                            <div className=\"chooses\">\n                                <div data-type=\"colorLightness\" data-value=\"\" className={`chooseItem ${colorLightness === '' ? 'active' : ''}`} onClick={this.handleChange}><div>随机</div></div>\n                                <div data-type=\"colorLightness\" data-value=\"light\" className={`chooseItem ${colorLightness === 'light' ? 'active' : ''}`} onClick={this.handleChange}>{this.getColorLightnessText('light')}</div>\n                                <div data-type=\"colorLightness\" data-value=\"dark\" className={`chooseItem ${colorLightness === 'dark' ? 'active' : ''}`} onClick={this.handleChange}>{this.getColorLightnessText('dark')}</div>\n                            </div>\n                        </div>\n                    </StyledColorChoose>\n                }\n            >\n                <div className=\"colorType\">\n                    {this.getColorTypeText(colorType)}\n                    {this.getColorLightnessText(colorLightness)}\n                </div>\n            </Popover>\n        )\n    }\n}\n\nexport default ColorChoose\n","export const preComponentList = {\n    mobile: [\n        {\n            name: 'Offline',\n            desc: '离线页面',\n            img: 'https://x0.ifengimg.com/ucms/2021_52/BC1A481C15707E79BF4D474BA10F66049198AEF8_size21_w361_h653.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-mobile-offline--offline'\n        },\n        {\n            name: 'comment',\n            desc: '评论',\n            img: 'https://x0.ifengimg.com/ucms/2021_51/A87578C27CF47CADCB110980ADE7670CFF2B19C9_size33_w359_h667.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-mobile-comment--comment',\n            icon: 'comment'\n        },\n        {\n            name: 'Share Comment',\n            desc: '分享页评论',\n            img: 'https://x0.ifengimg.com/ucms/2021_51/6DFC77739A136E0C5DAFB8677CD5CA00EF9D3401_size61_w374_h667.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-mobile-comment--share-comment',\n            icon: 'comment'\n        },\n        {\n            name: 'PageBottomBrand',\n            desc: '浮动底',\n            img: 'https://x0.ifengimg.com/ucms/2021_52/B9B318D3C3123B1E4463B006A545D78DBA1EF7BB_size16_w359_h665.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-mobile-pagebottombrand--atlas',\n            icon: 'yinliu'\n        },\n        {\n            name: 'SimpleGuideLayer',\n            desc: '中部引流弹窗',\n            img: 'https://x0.ifengimg.com/ucms/2021_52/45B18C4E8DAE422C22AF9D1C170ED5D06FA05DA7_size56_w374_h666.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-mobile-simpleguidelayer--simple-guide-layer',\n            icon: 'yinliu'\n        }\n    ],\n    pc: [\n        {\n            name: 'video',\n            desc: '视频播放器',\n            img: 'https://x0.ifengimg.com/ucms/2021_51/C64A57A0FD1D79DCEC5B7883451A3BB787589FF7_size30_w930_h527.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-pc-video--player',\n            icon: 'video',\n            dependencies: ['@ifeng/three_terminal']\n        },\n        {\n            name: 'comment',\n            desc: '评论',\n            img: 'https://x0.ifengimg.com/ucms/2021_52/418861D2DC0518C43ED3EB8CE7A2921BE6D6F5F4_size39_w764_h409.png',\n            moreUrl: 'https://sys-manager.shank.ifeng.com/doc/web-ui/?path=/story/component-pc-comment--comment',\n            icon: 'comment',\n            dependencies: ['@ifeng/three_terminal']\n        }\n    ]\n}\n","import styled from 'styled-components'\n\nexport const StyledFinishBySave = styled.div`\n  \n  .highlight {\n    margin: 0 6px 0 4px;\n    font-style: italic;\n    text-shadow: 1px 1px 3px rgba(189, 189, 189, 0.48);\n    \n    &.update {\n      color: #ffc65c;\n    }\n    \n    &.create {\n      color: #3FD136;\n    }\n  }\n  \n  .tipList {\n    margin-top: 20px;\n    \n    & li {\n      font-size: 12px;\n      margin: 2px 0;\n    }\n  }\n  \n  .extraWp {\n    padding-left: 24px;\n    margin-top: 30px;\n    \n    .extraTitle {\n      border-left: solid 4px #3490ff;\n      margin-bottom: 10px;\n      padding-left: 8px;\n    }\n    \n    .extra {\n      display: flex;\n      align-items: center;\n      font-size: 12px;\n      padding-left: 12px;\n      \n      .ant-checkbox-wrapper {\n        margin-right: 8px;\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Checkbox, Popover, Radio } from 'antd'\nimport { getPreComponentArrayFromDataMap } from '../../../../utils/common'\nimport { preComponentList } from '../../../../Setting/Property/Component/PRE'\nimport { StyledFinishBySave } from './styles'\n\nclass FinishBySave extends PureComponent {\n\n    static propTypes = {\n        setting: PropTypes.object,\n        onChangeSetting: PropTypes.func\n    }\n\n    state = {\n        dependencies: []\n    }\n\n    componentDidMount() {\n        const { onChangeSetting } = this.props\n        let components = getPreComponentArrayFromDataMap()\n        let dependencies = []\n        const { pc, mobile } = preComponentList\n        Array.from(new Set(components)).forEach(c => {\n            let comp = null\n            if (c.type === 'pc') {\n                comp = pc.find(a => a.name === c.name)\n            }\n            if (c.type === 'mobile') {\n                comp = mobile.find(a => a.name === c.name)\n            }\n            if (comp) {\n                dependencies.push(...comp.dependencies)\n            }\n        })\n        const noSameArr = Array.from(new Set(dependencies))\n        if (noSameArr.length < 1) {\n            onChangeSetting('isCreateDependenciesText', false)\n        } else {\n            onChangeSetting('isCreateDependenciesText', noSameArr)\n        }\n        this.setState({\n            dependencies: noSameArr\n        })\n    }\n\n    handleChange = (prop, value) => {\n        const { onChangeSetting } = this.props\n        onChangeSetting(prop, value)\n    }\n\n    handleDependenciesCheckbox = (e) => {\n        const { checked } = e.target\n        const { onChangeSetting } = this.props\n        const { dependencies } = this.state\n\n        if (checked) {\n            onChangeSetting('isCreateDependenciesText', dependencies)\n        } else {\n            onChangeSetting('isCreateDependenciesText', false)\n        }\n    }\n\n    render() {\n        const { dependencies } = this.state\n        const { env, setting } = this.props\n        const isUpdate = env === 'custom'\n\n        return (\n            <StyledFinishBySave>\n                <div>这是来自 <strong>custom</strong> 的一个<span className={ `highlight ${isUpdate ? 'update' : 'create'}`}>{isUpdate ? '更新' : '新建'}</span>操作，将会执行以下操作：</div>\n                <ol className=\"tipList\">\n                    <li>节点的信息{ isUpdate ? '更新' : '保存' }到<span className=\"code\">config_split.js</span>中；</li>\n                    <li>碎片内容写入<span className=\"code\">config.js</span>的 allData；</li>\n                    <li>会生成一份代码，为了不影响原文件，所以代码被放置在源文件根目录的<span className=\"code\">__tmp_split__</span>文件夹里，按需查用。</li>\n                </ol>\n                <div className=\"extraWp\">\n                    <div className=\"extraTitle\">额外的可选操作：</div>\n                    {\n                        dependencies.length > 0 &&\n                        <div className=\"extra\">\n                            <Checkbox checked={setting.isCreateDependenciesText} onChange={this.handleDependenciesCheckbox} />节点中含有预设组件，生成带有\n                            <Popover\n                                content={\n                                    <ul style={{ padding: '0 0 0 12px', margin: 0 }}>\n                                        {dependencies.map((d, i) => <li style={{ fontSize: '12px' }} key={i}>{d}</li>)}\n                                    </ul>\n                                }>\n                                <Button type=\"link\" style={{ fontSize:'12px', padding: 0, height: '22px' }}>这些依赖</Button>\n                            </Popover>\n                            的 .txt 文件，方便安装\n                        </div>\n                    }\n                    <div className=\"extra\" style={{ color: '#a7a7a7' }}>\n                        <Checkbox checked={setting.isCreateLayout} disabled onChange={(e) => this.handleChange('isCreateLayout', e.target.checked)} />创建通栏碎片，并应用到项目中\n                    </div>\n\n                    <div className=\"extra\" style={{ marginTop: '8px', color: '#a7a7a7' }}>React组件写法：</div>\n                    <div className=\"extra\" style={{ paddingLeft: '32px', marginTop: '4px', color: '#a7a7a7' }}>\n                        <Radio.Group disabled value={setting.reactType} onChange={(e) => this.handleChange('reactType', e.target.value)}>\n                            <Radio value=\"function\"><span style={{ fontSize: '12px' }}>函数式写法</span></Radio>\n                            <Radio value=\"class\"><span style={{ fontSize: '12px' }}>class 写法</span></Radio>\n                        </Radio.Group>\n                    </div>\n                </div>\n            </StyledFinishBySave>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { env } = state;\n    return { env }\n}\n\nexport default connect(mapStateToProps)(FinishBySave)\n","import styled from 'styled-components'\n\nexport const StyledFinish = styled.div`\n  .finish {\n    margin-left: 4px;\n    display: inline-flex;\n    align-items: center;\n\n    :hover {\n      .rotate {\n        animation: rotate360 .7s infinite linear, rotate360 .7s ease-in;\n      }\n    }\n\n    .icon {\n      position: relative;\n      margin-right: 6px;\n\n      .rotate {\n        transform-origin: center;\n        \n        &.leave {\n          animation: rotate360B 1s ease-out;\n        }\n      }\n      \n      .ok {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        margin: auto;\n        font-size: 16px;\n        line-height: 16px;\n      }\n    }\n  }\n\n  @keyframes rotate360 {\n    from {\n      transform: rotate(0);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes rotate360B {\n    from {\n      transform: rotate(0);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport const StyledFinishModal = styled.div`\n  will-change: transfrom;\n  \n  .ant-tabs-tab {\n    justify-content: flex-end;\n    will-change: transfrom;\n\n    .tabTitle {\n      text-align: right;\n\n      .subTitle {\n        font-size: 12px;\n        color: #9d9d9d!important;\n        text-shadow: none!important;\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, message, Modal, Tabs } from 'antd'\nimport Icon from '../../../components/Icon'\nimport FinishBySave from './FinishBySave'\nimport { getChipArrayFromDataMap } from '../../../utils/common'\nimport { StyledFinish, StyledFinishModal } from './styles'\n\nconst { TabPane } = Tabs\n\nconst OK_TEXT = [\n    '保存',\n    '创建',\n    '下载'\n]\n\nclass Finish extends PureComponent {\n\n    state = {\n        isShowModal: false,\n        isShowBC: false,\n        isLeave: false, // 是否离开 button 时 border 的动画\n        tabIndex: '0', // Tabs 的 index\n        finishLoading: false, // 完成的loading\n        extraSetting: {\n            isCreateDependenciesText: true, // 是否生成依赖的txt文件\n            isCreateLayout: false, // 是否创建通栏\n            reactType: 'function', // React组件写法，class || function\n        }\n    }\n\n    eye = React.createRef()\n\n    toggleIsShowModal = () => this.setState({ isShowModal: !this.state.isShowModal })\n    toggleIsShowBC = () => this.setState({ isShowBC: !this.state.isShowBC })\n\n    trueLeave = () => this.setState({ isLeave: true })\n    falseLeave = () => this.setState({ isLeave: false })\n\n    changeTabIndex = (index) => this.setState({ tabIndex: index })\n\n    changeExtraSetting = (prop, value) => {\n        const { extraSetting } = this.state\n\n        this.setState({\n            extraSetting: {\n                ...extraSetting,\n                [prop]: value\n            }\n        })\n    }\n\n    finish = () => {\n        const { dataMap } = this.props\n        const { extraSetting } = this.state\n        this.setState({\n            finishLoading: true\n        })\n        window.opener.postMessage({\n            type: 'finish',\n            data: {\n                dataMap,\n                chipData: getChipArrayFromDataMap(),\n                extraSetting\n            }\n        }, '*')\n        window.addEventListener('message', this.watchSuccess, false)\n    }\n\n    watchSuccess = (e) => {\n        const { type } = e.data\n        const { tabIndex } = this.state\n        if (type === 'update_success') {\n            this.setState({\n                finishLoading: false,\n                isShowModal: false\n            })\n            message.success(`${OK_TEXT[tabIndex]}成功`)\n            window.removeEventListener('message', this.watchSuccess, false)\n        }\n    }\n\n    render() {\n        const { env } = this.props\n        const { isShowModal, isShowBC, isLeave, tabIndex, extraSetting, finishLoading } = this.state\n\n        return (\n            <StyledFinish>\n                <Button className=\"finish\" shape=\"round\" type=\"primary\" onClick={this.toggleIsShowModal} onMouseEnter={this.falseLeave} onMouseLeave={this.trueLeave}>\n                    <div className=\"icon\">\n                        <Icon icon=\"finish\" style={{ fontSize: '20px' }} className={`rotate ${isLeave ? 'leave' : ''}`} />\n                        <Icon icon=\"ok\" className=\"ok\" />\n                    </div>\n                    生成为...\n                </Button>\n                <Modal\n                    title={\n                        <div style={{ position: 'relative' }}>\n                            <span>生成为...</span>\n                            <Button type=\"link\" ref={this.eye} style={{ position: 'absolute', top: 0, right: '40px', padding: 0, height: '22px', display: 'flex' }} onMouseEnter={this.toggleIsShowBC} onMouseLeave={this.toggleIsShowBC}>\n                                <Icon icon=\"eye\" style={{ height: '22px', marginRight: '4px' }}/>\n                            </Button>\n                        </div>\n                    }\n                    className={isShowBC ? 'opacity' : ''}\n                    visible={isShowModal}\n                    destroyOnClose\n                    width={1000}\n                    okText={OK_TEXT[tabIndex]}\n                    cancelText=\"取消\"\n                    confirmLoading={finishLoading}\n                    onOk={this.finish}\n                    onCancel={this.toggleIsShowModal}>\n                    <StyledFinishModal>\n                        <Tabs tabPosition=\"left\" activeKey={tabIndex} size=\"small\" onChange={this.changeTabIndex}>\n                            <TabPane\n                                tab={\n                                    <div className=\"tabTitle\">\n                                        <span>保存到原项目</span>\n                                        <div className=\"subTitle\">保存。。。</div>\n                                    </div>\n                                }\n                                key={0}>\n                                <FinishBySave setting={extraSetting} onChangeSetting={this.changeExtraSetting} />\n                            </TabPane>\n                            <TabPane\n                                tab={\n                                    <div className=\"tabTitle\">\n                                        <span>个性化React</span>\n                                        <div className=\"subTitle\">创建一个项目</div>\n                                    </div>\n                                }\n                                disabled={env.indexOf('custom') === 0}\n                                key={1}>\n                                1\n                            </TabPane>\n                            <TabPane\n                                tab={\n                                    <div className=\"tabTitle\">\n                                        <span>仅下载</span>\n                                        <div className=\"subTitle\">下载为zip</div>\n                                    </div>\n                                }\n                                key={2}>\n                                2\n                            </TabPane>\n                        </Tabs>\n                    </StyledFinishModal>\n                </Modal>\n            </StyledFinish>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { env, dataMap } = state;\n    return { env, dataMap }\n}\n\nexport default connect(mapStateToProps)(Finish)\n","import styled from 'styled-components'\n\nexport const StyledLabelInput = styled.span`\n  cursor: pointer;\n  transition: color .3s;\n  \n  img {\n    width: 12px;\n    height: 12px;\n  }\n\n  &:hover {\n    color: #479bff;\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Input } from 'antd'\nimport { StyledLabelInput } from './styles'\n\nclass LabelInput extends PureComponent {\n\n    static propTypes = {\n        style: PropTypes.object, // 文本的样式\n        inputStyle: PropTypes.object, // 文本框的样式\n        size: PropTypes.oneOf(['small', 'normal', 'large']), // antd的文本框的size\n        onChange: PropTypes.func, // 更新函数\n        readOnly: PropTypes.bool // 为 true 时只能查看，不能编辑\n    }\n\n    static defaultProps = {\n        readOnly: false\n    }\n\n    state = {\n        isEditing: false\n    }\n\n    inputRef = React.createRef()\n\n    startEdit = () => {\n        const { readOnly } = this.props\n        if (readOnly) {\n            return\n        }\n        this.setState({\n            isEditing: true\n        })\n        setTimeout(() => {\n            document.addEventListener('click', this.cancelEdit)\n        })\n    }\n\n    cancelEdit = (e) => {\n        const { onChange } = this.props\n        if (this.inputRef.current && !this.inputRef.current.input.contains(e.target)) {\n            if (onChange) {\n                onChange(this.inputRef.current.input.value)\n            }\n            this.setState({ isEditing: false })\n            document.removeEventListener('click', this.cancelEdit)\n        }\n    }\n\n    handleEnter = () => {\n        const { onChange } = this.props\n        onChange(this.inputRef.current.input.value)\n        this.setState({ isEditing: false })\n        document.removeEventListener('click', this.cancelEdit)\n    }\n\n    render() {\n        const { children, style, size, inputStyle, readOnly } = this.props\n        const { isEditing } = this.state\n\n        return isEditing\n            ?\n                <Input\n                    ref={this.inputRef}\n                    size={size}\n                    autoFocus\n                    defaultValue={children}\n                    onPressEnter={this.handleEnter}\n                    style={inputStyle}/>\n            :\n                <StyledLabelInput style={style} onClick={this.startEdit}>\n                    {children}\n                    {\n                        !readOnly && <img src=\"https://x0.ifengimg.com/ucms/2021_51/CBFEA224AAA021F13FB679CC0AA31703DAF88B56_size1_w48_h48.png\" alt=\"\"/>\n                    }\n                </StyledLabelInput>\n    }\n}\n\nexport default LabelInput\n","import styled from 'styled-components'\n\nexport const StyledToolbar = styled.div`\n  position: relative;\n  height: 48px;\n  background-color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 4;\n  box-shadow: 0 0 4px 2px #e1e1e1;\n  padding: 0 8px;\n\n  .centerPart {\n    position: absolute;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: -1;\n\n    .fileNameWp {\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n\n      .env {\n        font-size: 12px;\n        margin-right: 10px;\n        font-style: italic;\n        text-shadow: 1px 1px 3px rgba(189, 189, 189, 0.48);\n      }\n\n      .en, .cn {\n        cursor: pointer;\n\n        &:hover {\n          color: #76abe2;\n        }\n      }\n\n      .en {\n        font-size: 16px;\n        font-weight: bold;\n      }\n\n      .cn {\n        font-size: 12px;\n      }\n\n      i {\n        margin-left: 2px;\n        cursor: pointer;\n\n        :hover {\n          color: #2b96ff;\n        }\n      }\n\n      input {\n        font-weight: normal;\n      }\n\n    }\n  }\n\n  .btn {\n    position: relative;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    margin-right: 6px;\n    background-color: white;\n    outline: none;\n    border: solid 1px transparent;\n    font-size: 16px;\n    width: 32px;\n    height: 32px;\n    padding: 4px;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: all .3s;\n\n    &.image {\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-image: radial-gradient(40px 30px ellipse at 18px 18px, #40b4ca, transparent 30%);\n        opacity: 0;\n        transition: all ease-out 2s;\n      }\n\n      &:hover {\n        &::after {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.parent {\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-image: radial-gradient(40px 20px ellipse at 14px 9px, #ffc864, transparent 30%);\n        opacity: 0;\n        transition: all ease-out 2s;\n      }\n\n      &:hover {\n        &::after {\n          opacity: 1;\n        }\n      }\n    }\n\n    &.help {\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background-image: radial-gradient(yellow, transparent 40%);\n        opacity: 0;\n        transition: all ease-out 2s;\n      }\n\n      &:hover {\n        &::after {\n          opacity: 1;\n        }\n      }\n    }\n\n    &:hover {\n      background-color: rgba(181, 227, 253, .3);\n    }\n\n    &:active {\n      border-color: #76abe2;\n    }\n\n    &.active {\n      border-color: #76abe2;\n      background-color: rgba(219, 245, 255, .52);\n      box-shadow: 1px 1px 3px 0 rgba(111, 172, 224, 0.38);\n    }\n\n    .clearParent {\n      position: absolute;\n      width: 16px;\n      height: 16px;\n      border-radius: 50%;\n      right: -6px;\n      top: -6px;\n      font-size: 12px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-color: #e5e5e5;\n      color: #666A6D;\n      transition: all .3s;\n\n      & i {\n        font-size: 14px;\n        font-weight: bold;\n      }\n\n      &:hover {\n        background-color: red;\n        color: white;\n      }\n    }\n  }\n\n  .resize {\n    display: inline-flex;\n    align-items: center;\n  }\n\n  .colorType {\n    display: inline-flex;\n    align-items: center;\n    font-size: 12px;\n    cursor: pointer;\n    padding: 0 2px;\n    box-sizing: content-box;\n    //width: 50px;\n    height: 24px;\n    line-height: 24px;\n    text-align: center;\n    user-select: none;\n  }\n\n  .paste {\n    margin-left: 4px;\n\n    &.active {\n      background-color: green;\n      border-color: green;\n    }\n\n    img {\n      width: 24px;\n      height: 24px;\n      margin-right: 4px;\n    }\n\n    &:hover {\n      img {\n        animation: shake linear .7s;\n      }\n    }\n  }\n\n  @keyframes shake {\n    from {\n      transform: translate3d(0, 0, 0);\n    }\n\n    15% {\n      transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg);\n    }\n\n    30% {\n      transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg);\n    }\n\n    45% {\n      transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg);\n    }\n\n    60% {\n      transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg);\n    }\n\n    75% {\n      transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg);\n    }\n\n    to {\n      transform: translate3d(0, 0, 0);\n    }\n  }\n\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, message, Tooltip } from 'antd'\nimport UploadImage from './features/UploadImage'\nimport Paste from './features/Paste'\nimport Parent from './features/Parent'\nimport Resize from './features/Resize'\nimport Help from './features/Help'\nimport Create from './features/Create'\nimport ColorChoose from './features/ColorChoose'\nimport Finish from \"./features/Finish/index\"\nimport Icon from '../components/Icon'\nimport LabelInput from '../components/LabelInput'\nimport { changeDataMap } from '@action'\nimport { copyText, startChoose } from '../utils/common'\nimport { StyledToolbar } from './styles'\n\nclass ToolBar extends PureComponent {\n\n    state = {\n        colorType: 'hue', // 随机颜色范围 '' || 'hue'\n        colorLightness: '' // 颜色亮度 '' || 'light' || 'dark'\n    }\n\n    print = () => {\n        const { dataMap } = this.props\n        copyText(JSON.stringify(dataMap))\n        console.log('dataMap：', dataMap)\n        message.success('已复制到控制台和剪切板')\n    }\n\n    finishReName = (type, value) => {\n        const { dataMap } = this.props\n        const newDataMap = {...dataMap}\n        if (type === 'en') {\n            newDataMap.name = value\n        }\n        if (type === 'cn') {\n            newDataMap.cname = value\n        }\n        changeDataMap(newDataMap)\n    }\n\n    handleColorChange = (prop, value) => {\n        this.setState({\n            [prop]: value\n        })\n    }\n\n    render() {\n        const { env, mode, dataMap } = this.props\n        const { colorType, colorLightness } = this.state\n        const { name, cname } = dataMap\n        return (\n            <StyledToolbar>\n                {/*左侧*/}\n                <div className=\"flex\">\n                    {/*选择模式*/}\n                    <Tooltip title=\"选择 (Esc)\">\n                        <button onClick={startChoose} className={`btn ${mode === 'choose' ? 'active': ''}`}>\n                            <Icon icon=\"choose\"/>\n                        </button>\n                    </Tooltip>\n                    {/*创建矩形*/}\n                    <Create colorType={colorType} colorLightness={colorLightness} />\n                    {/*颜色选择*/}\n                    <ColorChoose colorType={colorType} colorLightness={colorLightness} onChange={this.handleColorChange} />\n                </div>\n                {/*中间，为保持视觉居中，需要absolute*/}\n                <div className=\"centerPart\">\n                    <div className=\"fileNameWp\">\n                        <LabelInput style={{fontSize: '16px', fontWeight: 'bold' }} inputStyle={{ width: '160px', fontWeight: 'bold' }} onChange={(value) => this.finishReName('en', value)}>\n                            {name}\n                        </LabelInput>\n                        <span>-</span>\n                        <LabelInput readOnly={env.indexOf('custom') === 0} style={{fontSize: '12px' }} inputStyle={{ width: '160px', fontSize: '12px' }} onChange={(value) => this.finishReName('cn', value)}>\n                            {cname}\n                        </LabelInput>\n                    </div>\n                </div>\n                {/*右侧*/}\n                <div className=\"flex\">\n                    <UploadImage />\n                    <Parent />\n                    <Help />\n                    <Resize />\n                    <Button type=\"primary\" onClick={this.print} style={{ marginLeft: '20px' }}>数据</Button>\n                    <Paste />\n                    <Finish />\n                </div>\n            </StyledToolbar>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { env, mode, dataMap } = state;\n    return { env, mode, dataMap }\n}\n\nexport default connect(mapStateToProps)(ToolBar)\n","import styled from 'styled-components'\n\nexport const StyledDataTree = styled.div`\n  flex: 1;\n  padding: 0 0 10px 0;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n\n  .toolbar {\n    height: 32px;\n    background-color: #f5f5f5;\n    border: solid 1px #e5e5e5;\n    margin-bottom: 6px;\n    display: flex;\n    align-items: center;\n    padding: 0 4px;\n    position: sticky;\n    width: 100%;\n    top: 0;\n    z-index: 1;\n\n    .btn {\n      position: relative;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      margin-right: 2px;\n      background-color: transparent;\n      outline: none;\n      border: solid 1px transparent;\n      font-size: 16px;\n      width: 24px;\n      height: 24px;\n      padding: 2px;\n      border-radius: 3px;\n      cursor: pointer;\n      transition: all .3s;\n\n      &:hover {\n        background-color: rgba(201, 201, 201, 0.3);\n      }\n\n      &.active {\n        background-color: rgb(215, 215, 215);\n      }\n    }\n  }\n\n  .edit .ant-tree-node-selected {\n    white-space: nowrap;\n    padding: 2px 4px;\n  }\n\n  .parent .ant-tree-node-content-wrapper {\n    outline: solid 2px #ffc864;\n    transition: all 0.3s, border 0s, line-height 0s, box-shadow 0s, outline 0s;\n  }\n\n  .treeTitle {\n    display: inline-flex;\n    align-items: center;\n\n    .iconPart {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      img {\n        width: 16px;\n        margin: 0 2px;\n      }\n      \n      .chipIcon {\n        position: relative;\n        \n        & > span {\n          position: absolute;\n          font-size: 12px;\n          top: -4px;\n          right: 1px;\n          color: white;\n          text-shadow: 0 0 1px black;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Tree, Input, message, Tooltip } from 'antd'\nimport Icon from '../../components/Icon'\nimport { changeActiveId, changeDataMap, changeEditId, dragData, changeExtraSetting } from '@action'\nimport { getDataById, startChoose } from '../../utils/common'\nimport { preComponentList } from '../Property/Component/PRE'\nimport { StyledDataTree } from './styles'\n\nclass DataTree extends PureComponent {\n\n    state = {\n        expandedKeys: ['0'],\n        localEditId: '',\n        isShowTreeIcon: true, // 是否显示树节点后面的小图片\n        isAutoFocus: true // 创建树节点时是否自动开启文本框修改名称\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId) {\n            this.updateExpandedkeys()\n        }\n    }\n\n    getClassName = (id) => {\n        const { activeId, editId, parentId } = this.props\n        const { isAutoFocus } = this.state\n        let str = ''\n        if (activeId === id) {\n            str += 'ant-tree-node-selected'\n        }\n        if (isAutoFocus && editId === id) {\n            str += ' edit'\n        }\n        if (parentId === id) {\n            str += ' parent'\n        }\n        return str\n    }\n\n    changeName = (e) => {\n        const { value } = e.target\n        const { editId, dataMap } = this.props\n        const newDataMap = {...dataMap}\n        const data = getDataById(editId, newDataMap)\n        data.name = value\n        const graphic = window.app.stage.children.find(a => a.name === editId)\n        if (graphic) {\n            const text = graphic.children.find(a => a.name === 'text')\n            text.text = value\n        }\n        changeDataMap(newDataMap)\n    }\n\n    handleEnter = (e) => {\n        this.changeName(e)\n        this.setState({\n            localEditId: ''\n        })\n        changeEditId('')\n    }\n\n    cancelEdit = (e) => {\n        if (e.target.id === 'treeNodeInput') {\n            return\n        }\n        this.setState({\n            localEditId: ''\n        })\n        changeEditId('')\n        document.removeEventListener('mousedown', this.cancelEdit)\n    }\n\n    selectAll = (e) => {\n        e.currentTarget.select()\n        document.addEventListener('mousedown', this.cancelEdit)\n    }\n\n    treeNodeOnClick = (keys, e) => {\n        const { editId } = this.props\n        if (editId === e.node.key) {\n            return\n        }\n        changeActiveId(e.node.key)\n        this.setState({\n            localEditId: ''\n        })\n        changeEditId('')\n        startChoose()\n    }\n\n    treeNodeOnDoubleClick = (e, treeNode) => {\n        const id = treeNode.key\n        this.setState({\n            localEditId: id\n        })\n        changeActiveId(id)\n        changeEditId(id)\n    }\n\n    handleExpand = (e) => {\n        this.setState({\n            expandedKeys: e\n        })\n    }\n\n    updateExpandedkeys = () => {\n        const { activeId } = this.props\n        const { expandedKeys } = this.state\n        const splited = activeId.split('_')\n        const keys = [splited[0]]\n        splited.reduce((a, b) => {\n            const k = a+'_'+b\n            keys.push(k)\n            return k\n        })\n        const newKeys = [...expandedKeys]\n        keys.forEach(k => {\n            if (!newKeys.includes(k)) {\n                newKeys.push(k)\n            }\n        })\n        this.setState({\n            expandedKeys: newKeys\n        })\n    }\n\n    drop = (e) => {\n        if(e.node.props.eventKey === '0' && !e.node.props.dragOver){\n            message.error('根元素只能为一个');\n        }else {\n            dragData({\n                dropOver: e.node.props.dragOver, // 是否拖拽到目标内部\n                originKey: e.dragNodesKeys, // 被拖拽的对象的key的列表（最后一位是当前对象）\n                targetKey: e.node.props.eventKey, // 拖拽目标key\n                dropPosition: e.node.props.dragOverGapTop ? 'top':'bottom' // 拖拽位置,不是top就是bottom\n            })\n        }\n    }\n\n    toggleSetting = (e) => {\n        const { setting } = e.currentTarget.dataset\n        if (setting === 'isAutoFocus') {\n            changeEditId('')\n        }\n        this.setState({\n            [setting]: !this.state[setting]\n        })\n    }\n\n    changeIsShowText = () => {\n        const { extraSetting, extraSetting: { isShowText } } = this.props\n        const graphics = window.app.stage.children.filter(a => a.name !== 'bc' && a.name !=='point')\n        let text = []\n        for (let i of graphics) {\n            text.push(i.children.find(a => a.name === 'text'))\n        }\n        for (let j of text) {\n            j.visible = !isShowText\n        }\n        changeExtraSetting({\n            ...extraSetting,\n            isShowText: !isShowText\n        })\n    }\n\n    getTreeData = (list) => {\n        const { editId } = this.props\n        const { isShowTreeIcon, isAutoFocus, localEditId } = this.state\n        return list\n            ?\n                list.map(data => {\n                    let iconName = 'div'\n                    if (data.config && data.config.component) {\n                        const { preComponent } = data.config.component\n                        const pc = preComponent.filter(p => p.type === 'pc')\n                        const mobile = preComponent.filter(p => p.type === 'mobile')\n                        if (pc.length + mobile.length > 1) {\n                            iconName = 'div'\n                        } else {\n                            if (mobile.length > 0) {\n                                iconName = preComponentList.mobile.find(a => a.name === mobile[0].name).icon\n                            }\n                            if (pc.length > 0) {\n                                iconName = preComponentList.pc.find(a => a.name === pc[0].name).icon\n                            }\n                        }\n                    }\n                    return {\n                        key: data.id,\n                        className: this.getClassName(data.id),\n                        icon: <Icon icon={iconName || 'div'} color={data.color}/>,\n                        title:\n                            <div className=\"treeTitle\">\n                                <span>\n                                    {\n                                        (isAutoFocus && editId === data.id) || localEditId === data.id\n                                            ?\n                                            <span>\n                                                <Input autoFocus id=\"treeNodeInput\" value={data.name} style={{ width: '120px' }} size=\"small\" onChange={this.changeName} onFocus={this.selectAll} onPressEnter={this.handleEnter}/>\n                                            </span>\n                                            : data.name\n                                    }\n                                </span>\n                                <span className=\"iconPart\">\n                                    {\n                                        isShowTreeIcon && data.config && data.config.track && data.config.track.trackId &&\n                                        <img style={{ width: '14px' }} src=\"https://x0.ifengimg.com/ucms/2021_51/04BF5ED7540F3BC2AE6D3AC19C0D10974FA606B5_size2_w50_h48.png\" alt=\"\"/>\n                                    }\n                                    {\n                                        isShowTreeIcon && data.config && data.config.chip && data.config.chip.length > 0 &&\n                                            <span className=\"chipIcon\">\n                                                <img src=\"https://x0.ifengimg.com/ucms/2021_51/CD0B86062ED829ECCAF0B9635F42E3A629DBF2AE_size2_w48_h48.png\" alt=\"\"/>\n                                                <span>{data.config.chip.length}</span>\n                                            </span>\n\n                                    }\n                                </span>\n                            </div>\n                            ,\n                        children: this.getTreeData(data.children)\n                    }\n                })\n            : []\n    }\n\n    render() {\n        const { dataMap, activeId, extraSetting } = this.props\n        const { expandedKeys, isShowTreeIcon, isAutoFocus, localEditId } = this.state\n        const { isShowText } = extraSetting\n        const { name, config } = dataMap\n        return (\n            <StyledDataTree>\n                <div className=\"toolbar\">\n                    <Tooltip title=\"显示小图标\">\n                        <button data-setting=\"isShowTreeIcon\" onClick={this.toggleSetting} className={`btn ${isShowTreeIcon ? 'active': ''}`}>\n                            <Icon icon=\"treeIcon\" style={{ fontSize: '18px' }} color=\"rgb(116 116 116)\"/>\n                        </button>\n                    </Tooltip>\n                    <Tooltip title=\"创建树节点时自动开启文本框修改名称\">\n                        <button data-setting=\"isAutoFocus\" onClick={this.toggleSetting} className={`btn ${isAutoFocus ? 'active': ''}`}>\n                            <Icon icon=\"treeAutoFocus\" style={{ fontSize: '18px' }} color=\"rgb(116 116 116)\"/>\n                        </button>\n                    </Tooltip>\n                    <Tooltip title=\"是否在画布中显示文本\">\n                        <button onClick={this.changeIsShowText} className={`btn ${isShowText ? 'active': ''}`}>\n                            <Icon icon=\"text\" color=\"rgb(116 116 116)\"/>\n                        </button>\n                    </Tooltip>\n                </div>\n                <Tree\n                    showIcon={isShowTreeIcon}\n                    draggable={{ icon: false }}\n                    allowDrop={() => true}\n                    selectedKeys={[activeId]}\n                    expandedKeys={expandedKeys}\n                    onExpand={this.handleExpand}\n                    onDoubleClick={this.treeNodeOnDoubleClick}\n                    onSelect={this.treeNodeOnClick}\n                    onDrop={this.drop}\n                    treeData={\n                        [\n                            {\n                                key: '0',\n                                icon: <Icon icon=\"all\" />,\n                                className: this.getClassName('0'),\n                                title: (\n                                    <div className=\"treeTitle\">\n                                        <span>\n                                            {\n                                                localEditId === '0'\n                                                ?\n                                                    <span>\n                                                        <Input autoFocus id=\"treeNodeInput\" value={name} style={{ width: '120px' }} size=\"small\" onChange={this.changeName} onFocus={this.selectAll} onPressEnter={this.handleEnter}/>\n                                                    </span>\n                                                : name\n                                            }\n                                        </span>\n                                        <span className=\"iconPart\">\n                                            {\n                                                isShowTreeIcon && config && config.track && config.track.trackId &&\n                                                <img style={{ width: '14px' }} src=\"https://x0.ifengimg.com/ucms/2021_51/04BF5ED7540F3BC2AE6D3AC19C0D10974FA606B5_size2_w50_h48.png\" alt=\"\"/>\n                                            }\n                                            {\n                                                isShowTreeIcon && config && config.chip && config.chip.length > 0 &&\n                                                <span className=\"chipIcon\">\n                                                    <img src=\"https://x0.ifengimg.com/ucms/2021_51/CD0B86062ED829ECCAF0B9635F42E3A629DBF2AE_size2_w48_h48.png\" alt=\"\"/>\n                                                    <span>{config.chip.length}</span>\n                                                </span>\n                                            }\n                                        </span>\n                                    </div>\n                                ),\n                                children: (dataMap && dataMap.children) ? this.getTreeData(dataMap.children) : []\n                              }\n                          ]\n                      }\n                />\n            </StyledDataTree>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, editId, parentId, dataMap, extraSetting } = state;\n    return { activeId, editId, parentId, dataMap, extraSetting }\n}\n\nexport default connect(mapStateToProps)(DataTree)\n","import styled from 'styled-components'\n\nexport const StyledTrack = styled.div`\n  position: relative;\n\n  .ant-form-item {\n    margin-bottom: 6px!important;\n  }\n\n  .params {\n    padding-left: 20px;\n  }\n\n  .customer_table {\n    width: 100%;\n    border-radius: 4px 4px 0 0;\n    border: solid 1px #e8e8e8;\n    border-spacing: 0;\n    table-layout: fixed;\n    font-size: 12px;\n    margin: 8px 0;\n\n    & tr {\n      position: relative;\n      transition: all .3s;\n\n      &:hover {\n        background-color: rgba(241, 241, 241, 0.4);\n      }\n    }\n\n    & th {\n      color: rgba(0, 0, 0, 0.85);\n      font-weight: 500;\n      text-align: left;\n      background: #f1f1f1;\n      transition: background .3s ease;\n      padding: 4px 8px;\n    }\n\n    & td {\n      position: relative;\n      transition: all .3s, border 0s;\n      padding: 3px 12px;\n\n      &.editing {\n        box-shadow: 1px 1px 6px 1px rgba(130, 130, 130, 0.14);\n        border: solid 1px #ccc;\n      }\n\n      & input {\n        outline: none;\n        border: none;\n        background-color: transparent;\n        width: 100%;\n      }\n\n      &.delete {\n        cursor: pointer;\n\n        &:hover {\n          color: red;\n        }\n      }\n    }\n  }\n\n  .tip {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    font-size: 12px;\n    font-weight: lighter;\n  }\n\n  .spinning {\n    position: absolute;\n    right: 0;\n    top: 0;\n\n    .error {\n      font-size: 12px;\n      cursor: pointer;\n    }\n\n    .success {\n      font-size: 12px;\n      cursor: pointer;\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Form, Input, Select, Radio, Button, Popover, message, Spin } from 'antd'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { changeDataMap, changeTrackProjectId } from '@action'\nimport { getDataById } from '../../../utils/common'\nimport { StyledTrack } from './styles'\n\nconst { Option } = Select\n\nconst PAGE_PARAMS = [\n    {\n        key: 'id',\n        value: ''\n    },\n    {\n        key: 'type',\n        value: 'other'\n    }\n]\n\nconst ACTION_PARAMS = [\n    {\n        key: 'type',\n        value: 'other'\n    }\n]\n\nlet updateTimer = null\n\nclass Track extends PureComponent {\n    state = {\n        initConfig: {}, // 表单的初始值，不管是新建的还是从已有的读的，都放在这里\n        editingId: '', // 正在编辑的格子，用于参数表格\n        paramsList: [], // 参数表格的参数\n        isUpdating: false, // 表示正在调接口的 loading\n        updateRes: null // 调接口的结果\n    }\n\n    formRef = React.createRef();\n\n    componentDidMount() {\n        this.update()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId) {\n            this.update()\n        }\n    }\n\n    update = () => {\n        const { activeId, dataMap } = this.props\n        const data = getDataById(activeId, dataMap)\n        const initConfig =\n            data.config && data.config.track\n                ?\n                    data.config.track\n                :\n                    {\n                        isH5: false,\n                        parameterType: 'page',\n                        parameterDescription: '',\n                        trackId: ''\n                    }\n\n        this.setState({\n            initConfig,\n            paramsList: initConfig.parameter || [\n                {\n                    key: 'id',\n                    value: ''\n                },\n                {\n                    key: 'type',\n                    value: 'other'\n                }\n            ]\n        }, () => {\n            this.formRef.current.resetFields();\n            const newDataMap = {...dataMap}\n            const data = getDataById(activeId, newDataMap)\n            data.config = {\n                ...data.config,\n                track: {\n                    ...initConfig,\n                    parameter: initConfig.parameter || PAGE_PARAMS\n                }\n            }\n            changeDataMap(newDataMap)\n        })\n    }\n\n    handleFocus = (e)=>{\n        const { editingId } = this.state;\n        const { index,inputtype } = e.target.dataset;\n        if (editingId !== inputtype + index + ''){\n            this.setState({\n                editingId: inputtype + index + '',\n            })\n        }\n        document.addEventListener('click', this.hideShadow)\n    };\n\n    handleTabKey = (e)=>{\n        const { editingId } = this.state;\n        if (e.key === 'Tab'){\n            if (/^key/.test(editingId)) {\n                this.setState({\n                    editingId:editingId.replace('key','value')\n                })\n            }else {\n                this.setState({\n                    editingId:'key'+(parseInt(/[0-9]+/.exec(editingId)[0])+1)\n                })\n            }\n        }\n    };\n\n    handleTypeChange = (value) => {\n        const initList = value === 'page' ? PAGE_PARAMS : ACTION_PARAMS\n        this.setState({\n            paramsList: initList\n        })\n        this.updateParams(initList)\n    }\n\n    handleParamsChange = (e) => {\n        let { dataset:{ index, inputtype }, value} = e.target;\n        index = +index\n        const { paramsList } = this.state\n\n        const newParamsList = [...paramsList];\n        if (index === newParamsList.length){\n            newParamsList.push({\n                key:'',\n                value:''\n            })\n        }\n        newParamsList[index][inputtype] = value;\n        this.setState({\n            paramsList: newParamsList\n        })\n        this.updateParams(newParamsList)\n    }\n\n    deleteParams = (e) => {\n        const { index } = e.target.dataset\n        const { paramsList } = this.state\n        const newParamsList = [...paramsList]\n        newParamsList.splice(+index, 1)\n        this.setState({\n            paramsList: newParamsList,\n            editingId: ''\n        })\n        this.updateParams(newParamsList)\n    }\n\n    handleFormChange = async (changedValues, allValues) => {\n        const { activeId, dataMap } = this.props\n        const { paramsList } = this.state\n        const newDataMap = {...dataMap}\n        const data = getDataById(activeId, newDataMap)\n        data.config = {\n            ...data.config,\n            track: {\n                ...data.config.track,\n                ...allValues,\n                parameter: paramsList\n            }\n        }\n        changeDataMap(newDataMap)\n        await this.updateTrack(data)\n    }\n\n    updateParams = (paramsList) => {\n        const { activeId, dataMap } = this.props\n        const newDataMap = {...dataMap}\n        const data = getDataById(activeId, newDataMap)\n        data.config = {\n            ...data.config,\n            track: {\n                ...(data.config ? data.config.track : {}),\n                parameter: paramsList\n            }\n        }\n        changeDataMap(newDataMap)\n        this.updateTrack(data)\n    }\n\n    hideShadow = (e) => {\n        const table = document.getElementById('trackTable')\n        if (!table.contains(e.target)) {\n            this.setState({\n                editingId: ''\n            })\n            document.removeEventListener('click', this.hideShadow)\n        }\n    }\n\n    createTrack = async () => {\n        const { activeId, dataMap, dataMap: { name, cname }, trackProjectId } = this.props\n        if (!trackProjectId) {\n            if (!name) {\n                message.error('请先填写项目名称')\n                return\n            }\n            const createItemRes = await axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/createProject', {\n                projectName: name,\n                projectNote: cname + '- from Split'\n            })\n            if (createItemRes.data.code === 0) {\n                message.success('创建埋点项目成功')\n                changeTrackProjectId(createItemRes.data.data.id)\n            } else {\n                message.error('创建项目失败')\n                return\n            }\n        }\n        const newDataMap = {...dataMap}\n        const { paramsList, initConfig } = this.state\n        const data = getDataById(activeId, newDataMap)\n        const formData = this.formRef.current.getFieldsValue()\n        const res = await axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/createTrackforProject', {\n            ...formData,\n            parameter: paramsList.map((p) => ({\n                parameterIdentification: p.key,\n                parameterValue: p.value\n            })),\n            pageName: data.name,\n            projectId: this.props.trackProjectId // 拿实时数据\n        })\n\n        if (res.data.code === 0) {\n            const { id, pageId, projectName } = res.data.data\n            await axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/goOnlineForTrack', {\n                id,\n                isOnline: true,\n                projectName,\n                pageId\n            })\n\n            data.config = {\n                ...data.config,\n                track: {\n                    ...(data.config ? data.config.track : {}),\n                    trackId: id\n                }\n            }\n            this.setState({\n                initConfig: {\n                    ...initConfig,\n                    trackId: id\n                }\n            })\n            changeDataMap(newDataMap)\n            message.success('创建埋点成功')\n        } else {\n            message.error(res.data.data[0].message)\n        }\n    }\n\n    deleteTrack = async () => {\n        const { activeId, dataMap } = this.props\n        const { initConfig } = this.state\n        const newDataMap = {...dataMap}\n        const data = getDataById(activeId, newDataMap)\n        const res = await axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/deleteTrack', {\n            id: initConfig.trackId\n        })\n        if (res.data.code === 0) {\n            data.config = {\n                ...data.config,\n                track: {\n                    ...(data.config ? data.config.track : {}),\n                    trackId: ''\n                }\n            }\n            this.setState({\n                initConfig: {\n                    ...initConfig,\n                    trackId: ''\n                }\n            })\n            changeDataMap(newDataMap)\n            message.success('删除埋点成功')\n        }\n    }\n\n    // 更新到埋点后台\n    updateTrack = async (data) => {\n        const { paramsList } = this.state\n        const formData = this.formRef.current.getFieldsValue()\n        if (data.config.track.trackId) {\n            this.setState({\n                isUpdating: true\n            })\n            const res = await axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/changeOneTrack', {\n                ...formData,\n                id: data.config.track.trackId,\n                parameter: paramsList.map((p) => ({\n                    parameterIdentification: p.key,\n                    parameterValue: p.value\n                })),\n                pageName: data.name\n            })\n            if (res.data.code === 0) {\n                this.setState({\n                    updateRes: 1\n                })\n                if (updateTimer) {\n                    clearTimeout(updateTimer)\n                }\n                updateTimer = setTimeout(() => {\n                    this.setState({\n                        updateRes: null\n                    })\n                }, 2000)\n            } else {\n                if (updateTimer) {\n                    clearTimeout(updateTimer)\n                }\n                this.setState({\n                    updateRes: res.data.data[0].message\n                })\n            }\n            this.setState({\n                isUpdating: false\n            })\n        }\n    }\n\n    render() {\n        const { editingId, paramsList, initConfig, isUpdating, updateRes } = this.state\n        const { trackProjectId, dataMap } = this.props\n        const { name } = dataMap\n        return (\n            <StyledTrack>\n                <Form ref={this.formRef} size=\"small\" initialValues={{ ...initConfig }} onValuesChange={this.handleFormChange}>\n                    <Form.Item\n                        label=\"埋点位置\"\n                        name=\"isH5\"\n                    >\n                        <Radio.Group>\n                            <Radio value={false}>客户端</Radio>\n                            <Radio value={true}>h5</Radio>\n                        </Radio.Group>\n                    </Form.Item>\n                    <Form.Item label=\"埋点类型\" name=\"parameterType\">\n                        <Select style={{ width: '120px' }} onChange={this.handleTypeChange}>\n                            <Option value=\"page\">page</Option>\n                            <Option value=\"action\">action</Option>\n                        </Select>\n                    </Form.Item>\n                    <div style={{ fontSize: '12px', height: '24px', lineHeight: '24px' }}>埋点参数：</div>\n\n                    <div className=\"params\">\n                        <table className={'customer_table'} border=\"1\" id=\"trackTable\">\n                            <tbody>\n                                <tr>\n                                    <th style={{ width:'32px',textAlign:'center' }}/>\n                                    <th style={{ width:'30%' }}>key</th>\n                                    <th>value</th>\n                                </tr>\n                                {\n                                    paramsList.concat({key: '', value: ''}).map((p, i) => {\n                                        return (\n                                            <tr key={i}>\n                                                {\n                                                    i === paramsList.length ? <td/> : <td className=\"delete\" data-index={i} onClick={this.deleteParams}>-</td>\n                                                }\n                                                <td className={editingId === `key${i}` ?'editing':''}>\n                                                    <input value={p.key} data-index={i} data-inputtype={'key'} onFocus={this.handleFocus} onChange={this.handleParamsChange} onKeyDown={this.handleTabKey}/>\n                                                </td>\n                                                <td className={editingId === `value${i}` ?'editing':''}>\n                                                    <input value={p.value} data-index={i} data-inputtype={'value'} onFocus={this.handleFocus} onChange={this.handleParamsChange} onKeyDown={this.handleTabKey}/>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <Form.Item label=\"备注\" name=\"parameterDescription\">\n                        <Input.TextArea placeholder=\"可选\" style={{ fontSize: '12px' }}/>\n                    </Form.Item>\n                </Form>\n                <div className=\"btnBox\">\n                    {\n                        trackProjectId\n                            ?\n                                (initConfig.trackId\n                                    ? <Button type=\"danger\" size=\"small\" onClick={this.deleteTrack}>删除埋点</Button>\n                                    : <Button type=\"primary\" size=\"small\" onClick={this.createTrack}>创建埋点</Button>)\n                            :\n                                <Popover placement=\"left\" content={<span style={{ fontSize: '12px' }}>首次创建埋点，会先使用项目名称 <strong>{name}</strong> 来创建埋点项目</span>}>\n                                    <Button type=\"primary\" size=\"small\" onClick={this.createTrack}>创建埋点</Button>\n                                </Popover>\n                    }\n                </div>\n                <div className=\"spinning\">\n                    <Spin size=\"small\" spinning={isUpdating} />\n                    {\n                        updateRes &&\n                        (\n                            typeof updateRes === 'string'\n                                ?\n                                    <Popover\n                                        placement=\"left\"\n                                        content={\n                                            <span style={{ fontSize: '12px' }}>\n                                                <span>更新失败：</span>\n                                                <br/>\n                                                <span>{updateRes}</span>\n                                            </span>\n                                        }>\n                                        <span className=\"error\">Error</span>\n                                    </Popover>\n                                : <span className=\"success\">已更新</span>\n                        )\n                    }\n                </div>\n            </StyledTrack>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { trackProjectId, activeId, dataMap } = state;\n    return { trackProjectId, activeId, dataMap }\n}\n\nexport default connect(mapStateToProps)(Track)\n","import styled from 'styled-components'\n\nexport const StyledSelectNodeFromTree = styled.div`\n  .treeTitle {\n    display: inline-flex;\n    align-items: center;\n\n    .iconPart {\n      margin-left: 20px;\n      display: flex;\n      align-items: center;\n\n      img {\n        width: 16px;\n        margin: 0 2px;\n      }\n\n      .chipIcon {\n        position: relative;\n\n        & > span {\n          position: absolute;\n          font-size: 12px;\n          top: -4px;\n          right: 1px;\n          color: white;\n          text-shadow: 0 0 1px black;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { TreeSelect } from 'antd'\nimport Icon from '../Icon'\nimport { preComponentList } from '../../Setting/Property/Component/PRE'\nimport { StyledSelectNodeFromTree } from './styles'\n\nclass SelectNodeFromTree extends PureComponent {\n\n    static propTypes = {\n        value: PropTypes.string, // 初始节点id\n        height: PropTypes.number, // TreeSelect 的高度\n        disabledId: PropTypes.string, // 不可选的节点的 id\n        onChange: PropTypes.func // 点击之后的回调\n    }\n\n    getTreeData = (list) => {\n        const { disabledId } = this.props\n\n        return list\n            ?\n            list.map(data => {\n                let iconName = 'div'\n                if (data.config && data.config.component) {\n                    const { preComponent } = data.config.component\n                    const pc = preComponent.filter(p => p.type === 'pc')\n                    const mobile = preComponent.filter(p => p.type === 'mobile')\n                    if (pc.length + mobile.length > 1) {\n                        iconName = 'div'\n                    } else {\n                        if (mobile.length > 0) {\n                            iconName = preComponentList.mobile.find(a => a.name === mobile[0].name).icon\n                        }\n                        if (pc.length > 0) {\n                            iconName = preComponentList.pc.find(a => a.name === pc[0].name).icon\n                        }\n                    }\n                }\n                return {\n                    value: data.id,\n                    icon: <Icon icon={iconName || 'div'} color={data.color}/>,\n                    className: 'treeTitle',\n                    disabled: disabledId === data.id,\n                    title:\n                        <div className=\"treeTitle\">\n                            <span>{data.name}</span>\n                            <span className=\"iconPart\">\n                                {\n                                    data.config && data.config.track && data.config.track.trackId &&\n                                    <img style={{ width: '14px' }} src=\"https://x0.ifengimg.com/ucms/2021_51/04BF5ED7540F3BC2AE6D3AC19C0D10974FA606B5_size2_w50_h48.png\" alt=\"\"/>\n                                }\n                                {\n                                    data.config && data.config.chip && data.config.chip.length > 0 &&\n                                    <span className=\"chipIcon\">\n                                        <img src=\"https://x0.ifengimg.com/ucms/2021_51/CD0B86062ED829ECCAF0B9635F42E3A629DBF2AE_size2_w48_h48.png\" alt=\"\"/>\n                                        <span>{data.config.chip.length}</span>\n                                    </span>\n                                }\n                            </span>\n                        </div>\n                    ,\n                    children: this.getTreeData(data.children)\n                }\n            })\n            : []\n    }\n\n    handleChange = (e) => {\n        const { onChange } = this.props\n        onChange(e)\n    }\n\n    render() {\n        const { value, height, dataMap, disabledId } = this.props\n\n        return (\n            <StyledSelectNodeFromTree>\n                <TreeSelect\n                    multiple={false}\n                    showSearch\n                    treeIcon\n                    style={{ width: '100%' }}\n                    listHeight={height}\n                    placeholder={\"选择节点\"}\n                    allowClear\n                    treeDefaultExpandAll\n                    onChange={this.handleChange}\n                    value={value}\n                    treeData={\n                        [\n                            {\n                                value: '0',\n                                icon: <Icon icon=\"all\" />,\n                                className: 'treeTitle',\n                                title: dataMap.name,\n                                disabled: disabledId === '0',\n                                children: (dataMap && dataMap.children) ? this.getTreeData(dataMap.children) : []\n                            }\n                        ]\n                    }\n                />\n            </StyledSelectNodeFromTree>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { dataMap } = state;\n    return { dataMap }\n}\n\nexport default connect(mapStateToProps)(SelectNodeFromTree)\n","import styled from 'styled-components'\n\nexport const StyledChipParams = styled.div`\n  .paramsList {\n    margin-top: 8px;\n    \n    .param {\n      margin-bottom: 4px;\n      font-size: 12px;\n\n      .paramName {\n        margin-right: 4px;\n        font-weight: bold;\n        color: rgba(0, 0, 0, 0.8);\n        cursor: help;\n        \n        &:hover {\n          text-decoration: underline dashed;\n        }\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport Proptypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Switch, Tooltip } from 'antd'\nimport LabelInput from '../../../../../components/LabelInput'\nimport { getDataById } from '../../../../../utils/common'\nimport { StyledChipParams } from './styles'\n\nclass ChipParams extends PureComponent {\n\n    static propTypes = {\n        chipId: Proptypes.string,\n        type: Proptypes.string,\n        data: Proptypes.object,\n        onChange: Proptypes.func\n    }\n\n    state = {\n        chipData: {},\n        dataId: ''\n    }\n\n    componentDidMount() {\n        this.initChipData()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId || prevProps.type !== this.props.type ) {\n            this.initChipData()\n        }\n    }\n\n    initChipData = () => {\n        const { type, data: chipDataFromProps, activeId, dataMap, onChange, chipId } = this.props\n        let initData = {}\n        if (chipDataFromProps && Object.keys(chipDataFromProps).length > 0) {\n            if (chipId) {\n                initData = { ...chipDataFromProps, id: chipId }\n            } else {\n                initData = { ...chipDataFromProps, id: '' }\n            }\n        } else {\n            const parentId = activeId.split('_').length > 1 ? activeId.split('_').slice(0, -1).join('_'): activeId // 如果没有父组件，data-group 就是本身的名字\n            const data = getDataById(activeId, dataMap)\n            const parent = parentId === activeId ? data : getDataById(parentId, dataMap)\n            switch (type) {\n                case 'static':{\n                    initData = {\n                        id: '',\n                        name: 'chip' + data.id,\n                        title: data.name,\n                        group: parent.name\n                    }\n                    break\n                }\n                case 'recommend': {\n                    initData = {\n                        id: '',\n                        name: 'chip' + data.id,\n                        title: data.name,\n                        group: parent.name,\n                        transform: `chip${data.id}Transform`,\n                        callback: false\n                    }\n                    break\n                }\n                case 'struct': {\n                    initData = {\n                        id: '',\n                        name: 'chip' + data.id,\n                        title: data.name,\n                        group: parent.name,\n                        transform: `chip${data.id}Transform`,\n                        callback: false\n                    }\n                    break\n                }\n                default: {\n\n                }\n            }\n            this.setState({ dataId: data.id })\n        }\n        this.setState({\n            chipData: initData,\n        })\n        onChange(initData)\n    }\n\n    updateChipData = (prop, value) => {\n        const { chipData } = this.state\n        const { onChange } = this.props\n        const newChipData = {...chipData}\n        newChipData[prop] = value\n        this.setState({\n            chipData: newChipData\n        })\n        onChange(newChipData)\n    }\n\n    render() {\n        const { chipData, dataId } = this.state\n        const chipType = Object.keys(chipData)\n\n        return (\n            <StyledChipParams>\n                <div className=\"paramsList\">\n                    {/*data-id*/}\n                    {\n                        chipType.includes('id') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title=\"碎片的唯一 id。\">\n                                <span className=\"paramName\">data-id:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('id', value)}>{chipData.id}</LabelInput>\n                        </div>\n                    }\n\n                    {/*data-name*/}\n                    {\n                        chipType.includes('name') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title=\"碎片在库中、allData 里的 key 值，通过该值来找到对应的数据。\">\n                                <span className=\"paramName\">data-name:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('name', value)}>{chipData.name}</LabelInput>\n                        </div>\n                    }\n\n                    {/*data-title*/}\n                    {\n                        chipType.includes('title') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title=\"碎片的说明，命名没有规范，但是要让用户知道这个碎片是干嘛的。\">\n                                <span className=\"paramName\">data-title:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('title', value)}>{chipData.title}</LabelInput>\n                        </div>\n                    }\n\n                    {/*data-group*/}\n                    {\n                        chipType.includes('group') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title={<div>碎片的组的名称，如果两个碎片来自同一部分，就可以放在同一个组。<br/>和 title 一样，命名规则的要求就是语义化。单个碎片也应该有个 group 来包裹。</div>}>\n                                <span className=\"paramName\">data-group:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('group', value)}>{chipData.group}</LabelInput>\n                        </div>\n                    }\n\n                    {/*data-transform*/}\n                    {\n                        chipType.includes('transform') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title=\"一个函数名，该函数要定义在 script 标签中，用于整理数据。\">\n                                <span className=\"paramName\">data-transform:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('transform', value)}>{chipData.transform}</LabelInput>\n                        </div>\n                    }\n\n                    {/*data-callback*/}\n                    {\n                        chipType.includes('callback') &&\n                        <div className=\"param\">\n                            <Tooltip placement=\"left\" title=\"一个函数名，该函数要定义在 script 标签中，用于数据整理后的回调。\">\n                                <span className=\"paramName\">data-callback:</span>\n                            </Tooltip>\n                            <Switch size=\"small\" style={{ marginRight: '10px' }} checked={chipData.callback} onChange={(checked) => this.updateChipData('callback', checked ? `chip${dataId}Callback` : checked)} />\n                            {\n                                chipData.callback && <LabelInput inputStyle={{ width: '120px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateChipData('callback', value)}>{chipData.callback}</LabelInput>\n                            }\n                        </div>\n                    }\n                </div>\n            </StyledChipParams>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, dataMap } = state;\n    return { activeId, dataMap }\n}\n\nexport default connect(mapStateToProps)(ChipParams)\n","import styled from 'styled-components'\n\nexport const StyledChipForm = styled.div`\n  padding-left: 20px;\n  \n  .ant-popover-buttons {\n    font-size: 12px;\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Popover, Select, Popconfirm, message } from 'antd'\nimport SelectNodeFromTree from '../../../../components/SelectNodeFromTree'\nimport ChipParams from './ChipParams'\nimport { getDataById } from '../../../../utils/common'\nimport { changeDataMap } from '@action'\nimport { StyledChipForm } from './styles'\n\nconst { Option } = Select\nconst NEED_NOT_CREATE = []\n\nclass ChipForm extends PureComponent {\n\n    static propTypes = {\n        index: PropTypes.number, // 节点的第几个碎片\n        chip: PropTypes.shape({\n            chipId: PropTypes.string,\n            chipType: PropTypes.string,\n            chipData: PropTypes.object,\n        }),\n        onChange: PropTypes.func,\n        onDelete: PropTypes.func,\n        onAdd: PropTypes.func,\n        isNew: PropTypes.bool\n    }\n\n    static defaultProps = {\n        isNew: false\n    }\n\n    changeChipValue = (obj) => {\n        const newObj = {...obj}\n        const { onChange, chip } = this.props\n        if (newObj.id !== undefined) {\n            onChange({\n                ...chip,\n                chipId: newObj.id,\n                chipData: newObj\n            })\n            delete newObj.id\n        } else {\n            onChange({\n                ...chip,\n                chipData: newObj\n            })\n        }\n    }\n\n    changeChipType = (type) => {\n        const { onChange, chip } = this.props\n\n        onChange({\n            ...chip,\n            chipType: type\n        })\n    }\n\n    moveChip = (targetId) => {\n        const { index, activeId, dataMap } = this.props\n        const newDataMap = {...dataMap}\n        const node = getDataById(activeId, newDataMap)\n        const targetNode = getDataById(targetId, newDataMap)\n\n        const oldChip = node.config.chip\n        const newChip = (targetNode.config && targetNode.config.chip) ? targetNode.config.chip : []\n\n        newChip.push(oldChip[index])\n        oldChip.splice(index, 1)\n\n        node.config = {\n            ...node.config,\n            chip: oldChip\n        }\n\n        targetNode.config = {\n            ...targetNode.config,\n            chip: newChip\n        }\n        changeDataMap(newDataMap)\n        message.success('移动成功')\n    }\n\n    render() {\n        const { chip:{ chipId, chipType, chipData }, onDelete, onAdd, isNew, activeId } = this.props\n        return (\n            <StyledChipForm>\n                <div className=\"chipType\">\n                    <span className=\"formProp\">碎片类型 : </span>\n                    <Select disabled={!isNew} size=\"small\" value={chipType} style={{ width: '120px' }} onChange={this.changeChipType}>\n                        <Option value=\"\">无碎片</Option>\n                        <Option value=\"static\">静态碎片</Option>\n                        <Option value=\"recommend\">推荐位碎片</Option>\n                        <Option value=\"struct\">结构化碎片</Option>\n                    </Select>\n                </div>\n                <div>\n                    {\n                        chipType && <ChipParams type={chipType} chipId={chipId} data={chipData} onChange={this.changeChipValue}/>\n                    }\n                </div>\n                <div className=\"btnBox\">\n                    {\n                        !isNew\n                            ?\n                            <>\n                                <Popover\n                                    placement=\"left\"\n                                    content={\n                                        <div style={{ width: '250px' }}>\n                                            <div style={{ fontSize: '12px', marginBottom: '4px' }}>选择节点：</div>\n                                            <SelectNodeFromTree height={300} disabledId={activeId} onChange={this.moveChip} />\n                                        </div>}\n                                    trigger={['click']}\n                                >\n                                    <Button type=\"primary\" ghost size=\"small\" style={{ borderStyle: 'dashed' }}>移动至...</Button>\n                                </Popover>\n                                <Popover placement=\"left\" content={\n                                    <div style={{ fontSize: '12px' }}>\n                                        <span>只删除节点里的碎片信息，</span><strong>不会删除 ucms 里的碎片。</strong>\n                                    </div>\n                                }>\n                                    <Popconfirm placement=\"topRight\" title={`确定\"删除\"这个碎片吗`} okText=\"确认\" cancelText=\"取消\" okType=\"danger\" onConfirm={onDelete}>\n                                        <Button danger size=\"small\" ghost style={{ width: '100px' }}>\"删除\"碎片</Button>\n                                    </Popconfirm>\n                                </Popover>\n                            </>\n                            : (chipType && !NEED_NOT_CREATE.includes(chipType) && <Button type=\"primary\" ghost={!!chipData.id} size=\"small\" onClick={onAdd}>{chipData.id ? '添加' : '创建'}碎片</Button>)\n                    }\n                </div>\n            </StyledChipForm>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, dataMap } = state;\n    return { activeId, dataMap }\n}\n\nexport default connect(mapStateToProps)(ChipForm)\n","import styled from 'styled-components'\n\nexport const StyledChipParams = styled.div`\n\n  .ant-collapse-header {\n    padding: 6px 16px!important;\n    user-select: none;\n    display: flex;\n    align-items: center;\n    background-color: #f5f5f5;\n    border-radius: 4px!important;\n    margin-bottom: 2px;\n    \n    &:hover {\n      background-color: #e9e9e9;\n    }\n\n    .ant-collapse-arrow {\n      font-size: 10px!important;\n    }\n\n    .collapseTitle {\n      width: 100%;\n      padding-right: 12px;\n      display: inline-flex;\n      justify-content: space-between;\n\n      strong {\n        margin: 0 2px;\n      }\n    }\n  }\n  \n  .chipType {\n    position: relative;\n    display: flex;\n    align-items: center;\n    \n    .tip {\n      position: absolute;\n      right: 0;\n      font-size: 12px;\n      color: #cccccc;\n    }\n  }\n  \n  .formProp {\n    font-size: 12px;\n    margin-right: 8px;\n  }\n  \n  .title {\n    color: rgba(0, 0, 0, 0.85);\n    font-weight: 500;\n    margin: 0 0 4px;\n    font-size: 14px;\n  }\n  \n`\n","import React, { PureComponent } from 'react'\nimport { Collapse, message } from 'antd'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport ChipForm from './ChipForm'\nimport { getDataById, md5 } from '../../../utils/common'\nimport { changeDataMap } from '../../../../store/action'\nimport { StyledChipParams } from './styles'\n\nconst CREATE_CHIP_URL = {\n    static: 'https://test0.ucms.ifeng.com/api/ns/addStaticFragment',\n    recommend: 'https://test0.ucms.ifeng.com/api/ns/addRecommendFragment'\n}\n\nclass Chip extends PureComponent {\n\n    state = {\n        isReady: false, // 本组件在 mount 和 update 的时候会读取节点上的 chip 信息，如果没有会新建一个，组件应该在这个阶段准备完毕之后再渲染\n        localChipList: [], // 当前节点的碎片列表，一个节点可以有多个碎片\n        newChip: {\n            chipId: '',\n            chipType: '',\n            chipData: {}\n        }\n    }\n\n    componentDidMount() {\n        this.initAndUpdate()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId) {\n            this.initAndUpdate()\n        }\n    }\n\n    initAndUpdate = () => {\n        const { activeId, dataMap } = this.props\n        const data = getDataById(activeId, dataMap)\n        this.setState({ isOK: false })\n        const initChipData =\n            data.config && data.config.chip\n                ?\n                data.config.chip\n                :\n                []\n\n        this.setState({\n            localChipList: initChipData\n        }, () => {\n            this.setState({isOK: true})\n            const newDataMap = {...dataMap}\n            const data = getDataById(activeId, newDataMap)\n            data.config = {\n                ...data.config,\n                chip: [...initChipData]\n            }\n            changeDataMap(newDataMap)\n        })\n    }\n\n    getSignature = params => {\n        let arr = [];\n        for (const key of Object.keys(params).sort()) {\n            if (!params[key]) {\n                continue;\n            }\n            if (key === 'signature') {\n                continue;\n            }\n            if (typeof params[key] == 'object') {\n                arr.push(`${key}=${JSON.stringify(params[key])}`);\n            } else {\n                arr.push(`${key}=${params[key]}`);\n            }\n        }\n        arr.push('Ifeng888');\n        return md5(arr.join('&')).toUpperCase();\n    };\n\n    createChip = async () => {\n        const { dataMap } = this.props\n        const { cname, channel } = dataMap\n        const { newChip: { chipId, chipType, chipData }, newChip } = this.state\n\n        if (chipId) {\n            // 有碎片id，添加\n            const { localChipList } = this.state\n            const newList = [...localChipList]\n            newList.push(newChip)\n            this.setState({\n                localChipList: newList,\n                newChip: {\n                    chipId: '',\n                    chipType: '',\n                    chipData: {}\n                }\n            }, this.updateChip)\n\n            message.success('添加成功')\n        } else {\n            // 没有碎片id，创建\n\n            if (!channel.id) {\n                message.warn('还没指定频道，创建失败')\n                return\n            }\n\n            const { title } = chipData\n\n            const params = {\n                name: `${channel.name}-${cname}-from Split-${title}`,\n                channel: channel.id,\n                channelName: channel.name,\n                content: undefined,\n            };\n            params.signature = this.getSignature(params);\n\n            const res = await axios.post(CREATE_CHIP_URL[chipType], params)\n            if (res.data.code === 0) {\n                const { localChipList } = this.state\n                const newList = [...localChipList]\n                newList.push({\n                    chipId: res.data.data,\n                    chipType,\n                    chipData\n                })\n                this.setState({\n                    localChipList: newList,\n                    newChip: {\n                        chipId: '',\n                        chipType: '',\n                        chipData: {}\n                    }\n                }, this.updateChip)\n\n                message.success('创建成功')\n            } else {\n                message.error('创建碎片失败')\n            }\n        }\n\n\n    }\n\n    updateChip = () => {\n        const { activeId, dataMap } = this.props\n        const { localChipList } = this.state\n        const newDataMap = {...dataMap}\n        const data = getDataById(activeId, newDataMap)\n        data.config = {\n            ...data.config,\n            chip: localChipList\n        }\n        changeDataMap(newDataMap)\n    }\n\n    changeNewChip = (data) => {\n        this.setState({\n            newChip: data\n        })\n    }\n\n    changeLocalChipList = (newChip, index) => {\n        const { localChipList } = this.state\n        const newList = [...localChipList]\n        if (newChip) {\n            newList.splice(index, 1, newChip)\n        } else {\n            newList.splice(index, 1)\n        }\n        this.setState({\n            localChipList: newList\n        }, this.updateChip)\n    }\n\n    render() {\n        const { localChipList, newChip } = this.state\n        return (\n            <StyledChipParams>\n                <Collapse ghost style={localChipList.length > 0 ? { fontSize:'12px', marginBottom: '16px' } : { fontSize:'12px' }}>\n                    {\n                        this.state.isOK && localChipList.map((chip, index) => {\n                            return (\n                                <Collapse.Panel\n                                    key={index}\n                                    header={\n                                        <div className=\"collapseTitle\">\n                                            <strong>{chip.chipId} - {chip.chipType}</strong>\n                                            <span>\n                                                {chip.chipData.name}\n                                            </span>\n                                        </div>\n                                    }>\n                                    <div>\n                                        <ChipForm index={index} chip={{...chip}} onChange={(obj) => this.changeLocalChipList(obj, index)} onDelete={() => this.changeLocalChipList(undefined, index)}/>\n                                    </div>\n                                </Collapse.Panel>\n                            )\n                        })\n                    }\n                </Collapse>\n                <div className=\"title\">新增碎片</div>\n                <ChipForm isNew={true} chip={newChip} onChange={this.changeNewChip} onAdd={this.createChip} />\n            </StyledChipParams>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, dataMap } = state;\n    return { activeId, dataMap }\n}\n\nexport default connect(mapStateToProps)(Chip)\n","import styled from 'styled-components'\n\nexport const StyledCopy = styled.span`\n  display: inline-flex;\n  align-items: center;\n  transition: color .3s;\n  cursor: grab;\n  user-select: none;\n\n  &:hover {\n    color: #1890ff;\n  }\n\n  &:active {\n    cursor: grabbing;\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { message } from 'antd'\nimport Icon from '../Icon'\nimport { StyledCopy } from './styles'\n\nclass Copy extends PureComponent {\n\n    copy = () => {\n        const tag = document.createElement('input')\n        tag.value = this.props.children.toString()\n        document.body.appendChild(tag)\n        tag.select()\n        document.execCommand('copy')\n        document.body.removeChild(tag)\n        message.success('复制成功')\n    }\n\n    render() {\n        const { children } = this.props\n        return (\n            <StyledCopy onClick={this.copy}>\n                {children}\n                <Icon icon=\"copy\" color=\"#1890ff\" style={{ fontSize: '12px', marginLeft: '2px' }}/>\n            </StyledCopy>\n        )\n    }\n}\n\nexport default Copy\n","import styled from 'styled-components'\n\nexport const StyledMainSetting = styled.div`\n  cursor: default;\n  \n  .settingTitle {\n    display: flex;\n    align-items: center;\n      \n    i {\n      margin-right: 4px;\n    }\n  }\n  \n  .settingItem {\n    display: flex;\n    align-items: center;\n    margin: 4px 0;\n    \n    .prop {\n      margin-right: 4px;\n      cursor: help;\n      \n      &:hover {\n        text-decoration: underline dashed;\n      }\n    }\n  }\n  \n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Slider, Tooltip } from 'antd'\nimport LabelInput from '../../../components/LabelInput'\nimport Icon from '../../../components/Icon'\nimport Copy from '../../../components/Copy'\nimport { changeDataMap } from '@action'\nimport { StyledMainSetting } from './styles'\n\nclass MainSetting extends PureComponent {\n\n    state = {\n        bcScale: 100 // 不放到state里，点击Slider的marks的时候不会更新视图，不知道原因\n    }\n\n    componentDidMount() {\n        const { dataMap } = this.props\n        this.setState({\n            bcScale: Math.round(dataMap.bc.scale * 100)\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.dataMap !== this.props.dataMap) {\n            this.setState({\n                bcScale: Math.round(this.props.dataMap.bc.scale * 100)\n            })\n        }\n    }\n\n    handleBcScaleChange = (value) => {\n        const { dataMap } = this.props\n        const newDataMap = {...dataMap}\n        newDataMap.bc.scale = value / 100\n        changeDataMap(newDataMap)\n        this.setState({ bcScale: value })\n        const bc = window.app.stage.children.find(a => a.name === 'bc')\n        bc.setTransform(0, 0, value / 100, value / 100)\n    }\n\n    updateName = (type, value) => {\n        const { dataMap } = this.props\n        const newDataMap = {...dataMap}\n        if (type === 'en') {\n            newDataMap.name = value\n        }\n        if (type === 'cn') {\n            newDataMap.cname = value\n        }\n        changeDataMap(newDataMap)\n    }\n\n    render() {\n        const { env, trackProjectId, dataMap } = this.props\n        const { bcScale } = this.state\n        const { name, cname, bc } = dataMap\n        return (\n            <StyledMainSetting>\n                <h2 className=\"settingTitle\"><Icon icon=\"setting\"/>项目设置</h2>\n                <div>\n                    <h3>基础设置</h3>\n                    <div>\n                        <div className=\"settingItem\">\n                            <Tooltip placement=\"left\" title=\"项目的英文名称\">\n                                <span className=\"prop\">项目名称:</span>\n                            </Tooltip>\n                            <LabelInput inputStyle={{ width: '160px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateName('en', value)}>{name}</LabelInput>\n                        </div>\n                        <div className=\"settingItem\">\n                            <Tooltip placement=\"left\" title={`项目的${env === 'default' ? '中文名称' : '路径'}`}>\n                                <span className=\"prop\">{env === 'default' ? '项目中文名称' : '项目路径'}:</span>\n                            </Tooltip>\n                            <LabelInput readOnly={env.indexOf('custom') === 0} inputStyle={{ width: '160px', fontSize: '12px' }} size=\"small\" onChange={(value) => this.updateName('cn', value)}>{cname}</LabelInput>\n                        </div>\n                        <div className=\"settingItem\">\n                            <Tooltip\n                                placement=\"left\"\n                                title={\n                                    <div>\n                                        <span>埋点所属的埋点项目</span>\n                                        <br/>\n                                        <span style={{ fontWeight: 'lighter' }}>首次创建埋点时自动创建。<span style={{ fontWeight: 'bold' }}>创建后不可修改</span>。</span>\n                                    </div>\n                                }>\n                                <span className=\"prop\">埋点项目:</span>\n                            </Tooltip>\n                            {\n                                trackProjectId\n                                    ? <span style={{ fontFamily: 'monospace', fontStyle: 'italic' }}><Copy>{trackProjectId}</Copy></span>\n                                    : <span style={{ color: '#8b8b8b' }}>首次创建埋点时自动创建</span>\n                            }\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    bc.image &&\n                    <div>\n                        <h3 style={{ marginTop: '16px' }}>背景图管理</h3>\n                        <div>\n                            <div className=\"settingItem\" style={{ alignItems: 'flex-start' }}>\n                                <Tooltip\n                                    placement=\"left\"\n                                    title={\n                                        <div>\n                                            <span>修改背景图的缩放比</span>\n                                            <br/>\n                                            <span style={{ fontWeight: 'lighter' }}>只作用于背景图，不会修改节点图形的大小。</span>\n                                        </div>\n                                    }>\n                                    <span className=\"prop\">背景图大小:</span>\n                                </Tooltip>\n                                <div className=\"flex\" style={{ marginTop: '-6px' }}>\n                                    <Slider\n                                        value={bcScale}\n                                        tipFormatter={v => v + '%'}\n                                        min={1}\n                                        marks={{ 25: '25%', 50: '50%', 75: '75%', 100: '100%' }}\n                                        style={{ width: '160px' }}\n                                        onChange={this.handleBcScaleChange}/>\n                                    <span style={{ margin: '-16px 0 0 16px', fontWeight: 'bold' }}>{bcScale}%</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </StyledMainSetting>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { env, trackProjectId, dataMap } = state;\n    return { env, trackProjectId, dataMap }\n}\n\nexport default connect(mapStateToProps)(MainSetting)\n","import styled from 'styled-components'\n\nexport const StyledPreComponent = styled.div`\n\n  &:hover {\n    .preWp {\n      padding: 0 12px 0 24px;\n      background-color: #3e3c3d;\n      color: white;\n    }\n  }\n\n  .preWp {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    background-color: #f5f5f5;\n    height: 32px;\n    margin: 2px 0;\n    padding: 0 12px;\n    cursor: pointer;\n    transition: padding .3s;\n    user-select: none;\n    \n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      height: 100%;\n      width: 0;\n      background-color: #1890ff;\n      transition: width ease-in .1s;\n    }\n\n    &.active {\n      &::before {\n        width: 4px;\n      }\n    }\n\n    .name {\n\n    }\n\n    .desc {\n      font-weight: lighter;\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Popover } from 'antd'\nimport { StyledPreComponent } from './styles'\n\nclass PreComponent extends PureComponent {\n\n    static propTypes = {\n        type: PropTypes.oneOf(['pc', 'mobile']), // 预设组件的类型\n        name: PropTypes.string, // 预设组件名称\n        desc: PropTypes.string, // 预设组件描述\n        img: PropTypes.string, // 预设组件的缩略图\n        moreUrl: PropTypes.string, // 点击缩略图时跳转的地址\n        isActive: PropTypes.bool, // 该组件是否已被选中\n        onChange: PropTypes.func // 更新函数\n    }\n\n    handleClick = () => {\n        const { type, name, isActive, onChange } = this.props\n        onChange(type, name, isActive)\n    }\n\n    jumpToMore = (e) => {\n        const { url } = e.currentTarget.dataset\n        window.open(url)\n    }\n\n    render() {\n        const { type, name, desc, img, moreUrl, isActive } = this.props\n        return (\n            <StyledPreComponent>\n                <Popover\n                    placement=\"left\"\n                    align={{ offset: [0, 0] }}\n                    autoAdjustOverflow\n                    overlayClassName=\"noPaddingPopover\"\n                    content={\n                        <img style={{ objectFit: 'cover', imageRendering: '-webkit-optimize-contrast', cursor: 'zoom-in', width: `${type === 'pc' ? 384 : 187}px`, height: `${type === 'pc' ? 216 : 333}px` }} className={type} data-url={moreUrl} alt={name} src={img} onClick={this.jumpToMore}/>\n                    }>\n                    <div className={`preWp ${isActive ? 'active' : ''}`} onClick={this.handleClick}>\n                        <span className=\"name\">{name}</span>\n                        <span className=\"desc\">{desc}</span>\n                    </div>\n                </Popover>\n            </StyledPreComponent>\n        )\n    }\n}\n\nexport default PreComponent\n","import styled from \"styled-components\";\n\nexport const StyledComponent = styled.div`\n  height: 100%;\n  overflow: auto;\n  \n  .propsList {\n\n    .props {\n      position: relative;\n      padding: 1px 0 1px 20px;\n      transition: all .3s;\n      cursor: default;\n      \n      &.custom {\n        padding: 2px 0 2px 20px;\n      }\n\n      &:hover {\n        background-color: #f3f3f3;\n        \n        .delete {\n          display: inline;\n        }\n\n        .decoration {\n          color: #929292;\n        }\n      }\n\n      .decoration {\n        font-size: 12px;\n        color: #cccccc;\n        transition: all .3s;\n      }\n      \n      .delete {\n        position: absolute;\n        top: 3px;\n        left: 10px;\n        font-size: 12px;\n        display: none;\n        cursor: pointer;\n        \n        &:hover {\n          color: red;\n        }\n      }\n\n      .propKey {\n        cursor: pointer;\n        color: black;\n        \n        &:hover {\n          color: #3490FF;\n        }\n      }\n\n      .colon {\n        margin: 0 4px 0 2px;\n      }\n      \n      .customType {\n        font-size: 12px;\n        cursor: pointer;\n        \n        &:hover {\n          color: #3490FF;\n        }\n      }\n    }\n\n    &::before {\n      content: 'static propTypes = {';\n      font-size: 12px;\n      color: #cccccc;\n    }\n\n    &::after {\n      content: '}';\n      font-size: 12px;\n      color: #cccccc;\n    }\n  }\n  \n  .addBtns {\n    display: flex;\n    font-size: 12px;\n    align-items: center;\n    margin-top: 6px;\n    \n    & button {\n      margin: 0 4px;\n      padding: 0 12px;\n      font-size: 12px;\n      border-radius: 20px;\n      width: 80px;\n    }\n  }\n  \n  .pre {\n    margin-top: 20px;\n    \n    .preTitle {\n      color: rgba(0, 0, 0, 0.85);\n      font-weight: 500;\n      margin: 0;\n      font-size: 14px;\n      \n      .icon {\n        margin-left: 4px;\n        cursor: pointer;\n      }\n    }\n\n    .ant-collapse-header {\n      padding: 6px 4px;\n      user-select: none;\n      display: flex;\n      align-items: center;\n\n      .ant-collapse-arrow {\n        font-size: 10px;\n      }\n    }\n    \n    .collapseTitle {\n      width: 100%;\n      display: inline-flex;\n      align-items: center;\n      justify-content: space-between;\n      padding-right: 12px;\n      \n      strong {\n        margin: 0 2px;\n      }\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Input, Button, Tooltip, Collapse } from 'antd'\nimport Icon from '../../../components/Icon'\nimport PreComponent from './PreComponent'\nimport { preComponentList } from './PRE'\nimport { getDataById } from '../../../utils/common'\nimport { changeDataMap } from '@action'\nimport { StyledComponent } from './styles'\n\nconst { Option } = Select\n\nclass Component extends PureComponent {\n\n    state = {\n        propsList: [], // props 列表，【key】：props 的名称；【type】：仅用于普通props，值是PropTypes里的简单值；【customType】：仅用于自定义props，一个字符串\n        preComponent: [], // 预设组件列表\n        editingKey: null, // 正在编辑的key，包含 index 和 value\n        editingValue: null, // 正在编辑的value，包含 index 和 value\n    }\n\n    componentDidMount() {\n        this.update()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId) {\n            this.update()\n        }\n    }\n\n    update = () => {\n        const { activeId, dataMap } = this.props\n        const data = getDataById(activeId, dataMap)\n        const initComponentData =\n            data.config && data.config.component\n                ?\n                data.config.component\n                :\n                {\n                    props: [],\n                    preComponent: []\n                }\n\n        this.setState({\n            propsList: initComponentData.props,\n            preComponent: initComponentData.preComponent\n        }, () => {\n            const newDataMap = {...dataMap}\n            const data = getDataById(activeId, newDataMap)\n            data.config = {\n                ...data.config,\n                component: {\n                    ...initComponentData\n                }\n            }\n            changeDataMap(newDataMap)\n        })\n    }\n\n    editKey = (e) => {\n        const { index, value } = e.currentTarget.dataset\n        this.setState({\n            editingKey: {\n                index: +index,\n                value\n            }\n        })\n    }\n\n    editValue = (e) => {\n        const { index, value } = e.currentTarget.dataset\n        this.setState({\n            editingValue: {\n                index: +index,\n                value\n            }\n        })\n    }\n\n    changeKey = (e) => {\n        const { propsList, editingKey } = this.state\n        const newList = [...propsList]\n        const { value } = e.target\n        newList[editingKey.index].key = value\n        this.updatePropsToDataMap(newList)\n    }\n\n    changeValue = (e) => {\n        const { propsList, editingValue } = this.state\n        const newList = [...propsList]\n        const { value } = e.target\n        newList[editingValue.index].customType = value\n        this.updatePropsToDataMap(newList)\n    }\n\n    deleteKey = (e, index) => {\n        const { propsList } = this.state\n        let dataIndex\n        if (index !== undefined) {\n            dataIndex = index\n        } else {\n            dataIndex = +e.target.dataset.index\n        }\n        const newList = [...propsList]\n        newList.splice(dataIndex, 1)\n        this.updatePropsToDataMap(newList)\n    }\n\n    editType = (index, type) => {\n        const { propsList } = this.state\n        const newList = [...propsList]\n        newList[index].type = type\n        this.setState({\n            propsList: newList\n        })\n    }\n\n    handleEnter = (e) => {\n        this.editKey(e)\n        this.setState({\n            editingKey: null\n        })\n    }\n\n    selectAll = (e) => {\n        e.currentTarget.select()\n        document.addEventListener('mousedown', this.cancelEdit)\n    }\n\n    cancelEdit = (e) => {\n        const { propsList, editingKey, editingValue } = this.state\n        if (editingKey) {\n            if (e.target.id === 'editComponentPropKey') {\n                return\n            }\n            if (!propsList[editingKey.index].key) {\n                this.deleteKey(null, editingKey.index)\n            }\n            this.setState({\n                editingKey: null\n            })\n        }\n        if (editingValue) {\n            if (e.target.id === 'editComponentPropValue') {\n                return\n            }\n            this.setState({\n                editingValue: null\n            })\n        }\n\n        document.removeEventListener('mousedown', this.cancelEdit)\n    }\n\n    add = (e) => {\n        const { type } = e.currentTarget.dataset\n        const { propsList } = this.state\n        const newList = [...propsList]\n        if (type === 'normal') {\n            newList.push({\n                key: '',\n                type: 'any'\n            })\n        } else {\n            newList.push({\n                key: '',\n                customType: 'PropTypes.any'\n            })\n        }\n        this.setState({\n            propsList: newList,\n            editingKey: {\n                index: newList.length - 1,\n                value: ''\n            }\n        })\n    }\n\n    updatePropsToDataMap = (propsList = null, preComponent = null) => {\n        const finalParam = {}\n        if (propsList) {\n            finalParam.props = propsList\n            this.setState({\n                propsList: propsList\n            })\n        }\n        if (preComponent) {\n            finalParam.preComponent = preComponent\n            this.setState({\n                preComponent: preComponent\n            })\n        }\n\n        const { activeId, dataMap } = this.props\n        const newDataMap = { ...dataMap }\n        const data = getDataById(activeId, newDataMap)\n        data.config = {\n            ...data.config,\n            component: {\n                ...data.config.component,\n                ...finalParam\n            }\n        }\n        changeDataMap(newDataMap)\n    }\n\n    handlePreComponentChange = (type, name, isDelete) => {\n        const { preComponent } = this.state\n        const newPre = [ ...preComponent]\n        if (isDelete) {\n            const index = newPre.findIndex(a => a.type === type && a.name === name)\n            newPre.splice(index, 1)\n        } else {\n            newPre.push({ name, type })\n        }\n        this.updatePropsToDataMap(undefined, newPre)\n    }\n\n    render() {\n        const { propsList, editingKey, editingValue, preComponent } = this.state\n        return (\n            <StyledComponent>\n                <div className=\"propsList\">\n                    {\n                        propsList.map((item, index) => {\n                            return (\n                                <div className=\"props\" key={index}>\n                                    <span className=\"delete\" data-index={index} onClick={this.deleteKey}>-</span>\n                                    {\n                                        editingKey && editingKey.index === index\n                                            ? <Input size=\"small\" id=\"editComponentPropKey\" autoFocus defaultValue={editingKey.value} style={{ width: '100px' }} onChange={this.changeKey} onFocus={this.selectAll} onPressEnter={this.handleEnter}/>\n                                            : <span className=\"propKey\" data-index={index} data-value={item.key} onClick={this.editKey}>{item.key}</span>\n                                    }\n                                    <span className=\"colon decoration\">:</span>\n                                    {\n                                        item.type\n                                            ?\n                                                <span className={`type ${item.customType ? 'custom' : ''}`}>\n                                                    <span className=\"decoration\">PropTypes.</span>\n                                                    <Select value={item.type} size=\"small\" style={{ width: '90px' }} onChange={(value) => this.editType(index, value)}>\n                                                        <Option value=\"string\">string</Option>\n                                                        <Option value=\"number\">number</Option>\n                                                        <Option value=\"bool\">bool</Option>\n                                                        <Option value=\"func\">func</Option>\n                                                        <Option value=\"object\">object</Option>\n                                                        <Option value=\"array\">array</Option>\n                                                        <Option value=\"element\">element</Option>\n                                                        <Option value=\"any\">any</Option>\n                                                    </Select>\n                                                </span>\n                                            :\n                                            (\n                                                editingValue && editingValue.index === index\n                                                    ? <Input.TextArea size=\"small\" id=\"editComponentPropValue\" style={{ fontSize: '12px' }} autoFocus cols={2} defaultValue={editingValue.value} onChange={this.changeValue} onFocus={this.selectAll} onPressEnter={this.handleEnter}/>\n                                                    : <span className=\"customType\" data-index={index} data-value={item.customType} onClick={this.editValue}>{item.customType}</span>\n                                            )\n                                    }\n                                    {index < propsList.length - 1 && <span className=\"decoration\" style={{ marginLeft: '4px' }}>,</span>}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"addBtns\">\n                    <span>添加 propTypes：</span>\n                    <Button type=\"primary\" size=\"small\" data-type=\"normal\" onClick={this.add}>基础</Button>\n                    <Button type=\"primary\" size=\"small\" ghost data-type=\"custom\" onClick={this.add}>自定义</Button>\n                </div>\n                <div className=\"pre\">\n                    <span className=\"preTitle\">\n                        <span>预设组件</span>\n                        <Tooltip title=\"选择若干个组件，然后我们会在文件中把它们引入并初始化\">\n                            <span className=\"icon\">\n                                <Icon icon=\"help\" color=\"#787878\" style={{ fontSize: '16px' }}/>\n                            </span>\n                        </Tooltip>\n                    </span>\n\n                    <Collapse defaultActiveKey={['1', '2']} ghost style={{ fontSize:'12px' }}>\n                        <Collapse.Panel\n                            key=\"1\"\n                            header={\n                                <div className=\"collapseTitle\">\n                                    <span>\n                                        <Icon icon=\"pc\" style={{ fontSize: '14px', marginRight: '4px' }}/>PC端\n                                    </span>\n                                    {\n                                        preComponent.filter(p => p.type === 'pc').length > 0 &&\n                                        <span>已选择<strong>{preComponent.filter(p => p.type === 'pc').length}</strong>个</span>\n                                    }\n                                </div>\n                            }>\n                            <div>\n                                {\n                                    preComponentList.pc.map((c, index) => {\n                                        return <PreComponent\n                                                    isActive={preComponent && Boolean(preComponent.filter(p => p.type === 'pc').find(a => a.name === c.name))}\n                                                    type=\"pc\"\n                                                    key={index}\n                                                    name={c.name}\n                                                    desc={c.desc}\n                                                    img={c.img}\n                                                    moreUrl={c.moreUrl}\n                                                    onChange={this.handlePreComponentChange}/>\n                                    })\n                                }\n                            </div>\n                        </Collapse.Panel>\n                        <Collapse.Panel\n                            key=\"2\"\n                            header={\n                                <div className=\"collapseTitle\">\n                                    <span>\n                                        <Icon icon=\"mobile\" style={{ fontSize: '14px', marginRight: '4px' }}/>移动端\n                                    </span>\n                                    {\n                                        preComponent.filter(p => p.type === 'mobile').length > 0 &&\n                                        <span>已选择<strong>{preComponent.filter(p => p.type === 'mobile').length}</strong>个</span>\n                                    }\n                                </div>\n                            }>\n                            <div>\n                                {\n                                    preComponentList.mobile.map((c, index) => {\n                                        return <PreComponent\n                                                    isActive={preComponent && Boolean(preComponent.filter(p => p.type === 'mobile').find(a => a.name === c.name))}\n                                                    type=\"mobile\"\n                                                    key={index}\n                                                    name={c.name}\n                                                    desc={c.desc}\n                                                    img={c.img}\n                                                    moreUrl={c.moreUrl}\n                                                    onChange={this.handlePreComponentChange}/>\n                                    })\n                                }\n                            </div>\n                        </Collapse.Panel>\n                    </Collapse>\n                </div>\n            </StyledComponent>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, dataMap } = state;\n    return { activeId, dataMap }\n}\n\nexport default connect(mapStateToProps)(Component)\n","import styled from 'styled-components'\n\nexport const StyledDragLine = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 1px;\n  height: 100%;\n  z-index: ${props => props.isTop ? 5 : 4 };\n  background-color: #e5e5e5;\n  cursor: pointer;\n  transition: all .3s;\n  \n  &::after {\n    content: '';\n    position: absolute;\n    width: 8px;\n    height: 100%;\n    left: -3px;\n    top: 0;\n    z-index: -1;\n  }\n  \n  &:hover {\n    cursor: col-resize;\n    background-color: #3e3c3d;\n    width: ${props => props.isTop ? 2 : 1 }px;\n  }\n`\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { StyledDragLine } from './styles'\n\nclass DragLine extends PureComponent {\n\n    static propTypes = {\n        width: PropTypes.number, // 初始宽度\n        onChange: PropTypes.func,  // 更新宽度的回调\n        isTop: PropTypes.bool, // 两个边界调整先，这里用于区分哪个在上面\n        max: PropTypes.number, // 最大宽度\n        min: PropTypes.number // 最小宽度\n    }\n\n    static defaultProps = {\n        isTop: false,\n        max: Number.MAX_VALUE,\n        min: -1\n    }\n\n    // 拖拽鼠标调整宽度\n    startMove = (e) => {\n        const { onChange, max, min }= this.props\n        let { clientX: startX } = e\n\n        const handleMove = (e) => {\n            e.preventDefault()\n            const { width } = this.props\n            const { clientX: endX } = e\n            const finalWidth = width - endX + startX\n            if (finalWidth <= max && finalWidth >= min) {\n                onChange(width - endX + startX)\n                startX = endX\n            }\n        }\n\n        const cancelMove = () => {\n            document.removeEventListener('mousemove', handleMove, false)\n            document.removeEventListener('mouseup', handleMove, false)\n        }\n\n        document.addEventListener('mousemove', handleMove, false)\n        document.addEventListener('mouseup', cancelMove, false)\n    }\n\n    render() {\n        const { isTop } = this.props\n        return (\n            <StyledDragLine isTop={isTop} onMouseDown={this.startMove}/>\n        )\n    }\n}\n\nexport default DragLine\n","import styled from 'styled-components'\n\nexport const StyledProperty = styled.div`\n  position: absolute;\n  right: 0;\n  height: 100%;\n  background-color: #ffffff;\n  padding: 4px 0 0;\n  z-index: 3;\n  \n  .propertyWp {\n    position: relative;\n    height: 100%;\n    padding: 0 10px 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    font-size: 12px;\n    z-index: 3;\n\n    .property {\n      height: 100%;\n    }\n    \n    .ant-tabs-nav {\n      margin-bottom: 0;\n    }\n    \n    .ant-tabs-content-holder {\n      height: 100%;\n      overflow: auto;\n      padding-top: 12px;\n    }\n\n    .ant-form-item {\n      margin-bottom: 12px;\n    }\n\n    .ant-form-item-label > label {\n      font-size: 12px;\n    }\n\n    .ant-radio + span {\n      font-size: 12px;\n    }\n\n    .ant-select-selection-item {\n      font-size: 12px;\n    }\n    \n    .breadcrumb {\n      white-space: nowrap;\n      overflow: auto hidden;\n      \n      .ant-breadcrumb > span {\n        display: inline-flex;\n        align-items: center;\n\n        .ant-breadcrumb-link {\n          display: inline-flex;\n          align-items: center;\n          cursor: pointer;\n          font-size: 12px;\n          height: 24px;\n          border-radius: 4px;\n          padding-right: 1px;\n\n          &:hover {\n            background-color: #f5f5f5;\n          }\n        }\n        \n        .ant-breadcrumb-separator {\n          margin: 0 4px;\n          font-size: 12px;\n        }\n      }\n    }\n  }\n\n  .ant-tabs-tab {\n\n    & + .ant-tabs-tab {\n      margin-left: 20px;\n    }\n  }\n\n  .tabDiv {\n    position: relative;\n    padding: 0 4px 0;\n\n    &.active::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      right: -4px;\n      width: 6px;\n      height: 6px;\n      border: solid 1px #575757;\n      border-radius: 50%;\n      transition: opacity ease-in-out .3s;\n      animation: colorChange 2s infinite ease-in-out;\n    }\n  }\n\n  .btnBox {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    margin-top: 16px;\n\n    button {\n      margin: 0 4px;\n      padding: 0 12px;\n      font-size: 12px;\n      border-radius: 20px;\n      width: 80px;\n      line-height: 12px;\n    }\n  }\n\n  @keyframes colorChange {\n    0% {\n      background-color: #d5ffe3;\n    }\n\n    50% {\n      background-color: #57ef85;\n    }\n\n    100% {\n      background-color: #d5ffe3;\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { Tabs, Breadcrumb } from 'antd'\nimport { connect } from 'react-redux'\nimport Track from './Track'\nimport Chip from './Chip'\nimport MainSetting from './MainSetting'\nimport Component from './Component'\nimport DragLine from '../../components/DragLine'\nimport Icon from '../../components/Icon'\nimport { changeActiveId } from '@action'\nimport { getDataById } from '../../utils/common'\nimport { preComponentList } from './Component/PRE'\nimport { StyledProperty } from './styles'\n\nconst { TabPane } = Tabs\n\nclass Setting extends PureComponent {\n    state = {\n        widthPercent: 0.6,\n        activeKey: 1\n    }\n\n    handleActiveKeyChange = (index) => this.setState({ activeKey: index })\n\n    handleWidthChange = (width) => {\n        const { settingWidth } = this.props\n\n        const percent = width / settingWidth\n        this.setState({\n            widthPercent: percent\n        })\n    }\n\n    getWidth = () => {\n        const { widthPercent } = this.state\n        const { settingWidth } = this.props\n\n        let width = settingWidth * widthPercent\n        return width > 300 ? width : 300\n    }\n\n    getPath = () => {\n        const { activeId, dataMap } = this.props\n        let path = [];\n        if (activeId !== '' && activeId !== '0') {\n            let selectedKeyArr = activeId.split('_');\n            for (let i=0; i<selectedKeyArr.length; i++){\n                let data = getDataById(selectedKeyArr.slice(0,i+1).join('_'), dataMap);\n                if (data) {\n                    let iconName = ''\n                    if (data.config && data.config.component) {\n                        const { preComponent } = data.config.component\n                        const pc = preComponent.filter(p => p.type === 'pc')\n                        const mobile = preComponent.filter(p => p.type === 'mobile')\n                        if (pc.length + mobile.length > 1) {\n                            iconName = 'div'\n                        } else {\n                            if (mobile.length > 0) {\n                                iconName = preComponentList.mobile.find(a => a.name === mobile[0].name).icon\n                            }\n                            if (pc.length > 0) {\n                                iconName = preComponentList.pc.find(a => a.name === pc[0].name).icon\n                            }\n                        }\n                    }\n                    path.push({\n                        id: data.id,\n                        icon: iconName || 'div',\n                        name: data.name,\n                        color: data.color\n                    })\n                }\n            }\n        }\n        return (\n            <Breadcrumb separator=\">\">\n                <Breadcrumb.Item onClick={() => changeActiveId('0')}>\n                    <Icon icon=\"all\" />\n                </Breadcrumb.Item>\n                {\n                    path.map((item,index)=>{\n                        return (\n                            <Breadcrumb.Item key={index} onClick={() => changeActiveId(item.id)}>\n                                <Icon icon={item.icon} color={item.color}/>\n                                {item.name}\n                            </Breadcrumb.Item>\n                        )\n                    })\n                }\n            </Breadcrumb>\n        )\n    }\n\n    render() {\n        const { activeKey } = this.state\n        const { settingWidth, activeId, dataMap } = this.props\n        const finalWidth = this.getWidth()\n        const data = getDataById(activeId, dataMap)\n\n        return (\n            <StyledProperty style={{ width: finalWidth + 'px' }}>\n                <DragLine width={finalWidth} min={300} max={Math.max(settingWidth * 0.4, settingWidth - 200)} onChange={this.handleWidthChange}/>\n                <div className=\"propertyWp\">\n                    <div className=\"property\">\n                        {\n                            activeId\n                                &&\n                                    <>\n                                        {\n                                            activeId === '0' &&\n                                            <div style={{ borderBottom: 'solid 1px #e5e5e5', paddingBottom: '10px', marginBottom: '10px' }}>\n                                                <MainSetting/>\n                                            </div>\n                                        }\n                                        <Tabs size=\"small\" defaultActiveKey={activeKey} style={{ height: '100%' }} onChange={this.handleActiveKeyChange}>\n                                            <TabPane\n                                                tab={<div className=\"tabDiv\">组件</div>}\n                                                key=\"1\">\n                                                <Component key={activeId}/>\n                                            </TabPane>\n                                            <TabPane\n                                                tab={<div className={`tabDiv ${data && data.config && data.config.track && data.config.track.trackId ? 'active' : ''}`}>埋点</div>}\n                                                key=\"2\">\n                                                <Track key={activeId}/>\n                                            </TabPane>\n                                            <TabPane\n                                                tab={<div className=\"tabDiv\">碎片</div>}\n                                                key=\"3\">\n                                                <Chip key={activeId}/>\n                                            </TabPane>\n                                        </Tabs>\n                                    </>\n                        }\n                    </div>\n                    <div className=\"breadcrumb\">{this.getPath()}</div>\n                </div>\n            </StyledProperty>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { activeId, settingWidth, dataMap } = state;\n    return { activeId, settingWidth, dataMap }\n}\n\nexport default connect(mapStateToProps)(Setting)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport DataTree from './DataTree'\nimport Property from './Property'\nimport DragLine from '../components/DragLine'\nimport { changeSettingWidth } from '@action'\n\nclass EditPart extends PureComponent {\n    render() {\n        const { settingWidth } = this.props\n        return (\n            <div style={{ width: `${settingWidth}px`, display: 'flex', height: '100%' }}>\n                <DragLine isTop={true} width={settingWidth} min={300} onChange={changeSettingWidth}/>\n                <DataTree/>\n                <Property/>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { settingWidth } = state;\n    return { settingWidth }\n}\n\nexport default connect(mapStateToProps)(EditPart)\n","import styled from 'styled-components'\n\nexport const StyledConflict = styled.div`\n  width: 450px;\n  position: absolute;\n  right: 604px;\n  top: 1px;\n  background-color: #ffffff;\n  box-shadow: 2px 2px 7px 4px rgba(229, 229, 229, 0.57);\n  border-radius: 4px;\n  z-index: 7;\n\n  .title {\n    font-size: 14px;\n    font-weight: bold;\n    margin-bottom: 12px;\n    padding: 12px 12px 0;\n  }\n  \n  .content {\n    max-height: 600px;\n    overflow: auto;\n    \n    .addWp {\n      padding: 0 12px;\n      background-color: rgba(0, 128, 0, 0.04);\n    }\n\n    .reduceWp {\n      padding: 0 12px;\n      background-color: rgba(255, 0, 0, 0.04);\n    }\n\n    .sign {\n      color: white;\n      padding: 2px 8px;\n      border-radius: 20px;\n      margin-right: 6px;\n      font-style: normal;\n\n      &.add {\n        background-color: green;\n      }\n\n      &.reduce {\n        background-color: red;\n      }\n\n      &.other {\n        background-color: gray;\n      }\n    }\n\n    .tipTitle {\n      font-size: 12px;\n      font-style: italic;\n      height: 28px;\n      line-height: 28px;\n      color: #afafaf;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      .saveAll {\n        font-style: normal;\n\n        & .ant-checkbox-wrapper {\n          height: 20px;\n          line-height: 20px;\n          font-size: 12px;\n          user-select: none;\n        }\n      }\n    }\n\n    .conflict {\n      font-size: 12px;\n      padding-left: 46px;\n      height: 24px;\n      line-height: 24px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      transition: all .3s;\n      position: relative;\n      \n      &.disabled {\n        cursor: not-allowed;\n        pointer-events: none;\n      }\n\n      .saveTip {\n        position: absolute;\n        top: 0;\n        right: 75px;\n        color: rgba(0, 128, 0, 0.3);\n        font-style: italic;\n      }\n\n      &::before {\n        content: '';\n        position: absolute;\n        left: 30px;\n        top: 10px;\n        width: 4px;\n        height: 4px;\n        border-radius: 100%;\n        background-color: black;\n        opacity: 0;\n      }\n\n      &:hover {\n        &::before {\n          opacity: 1;\n          transition: opacity ease-out .2s;\n        }\n      }\n\n      & button {\n        font-size: 12px;\n        margin-right: 4px;\n        width: 20px;\n      }\n\n      .btn {\n        cursor: pointer;\n        padding: 4px 6px;\n        border-radius: 5px;\n        transition: all .3s;\n\n        &.primary {\n          color: green;\n        }\n\n        &.danger {\n          color: #ff4b4b;\n        }\n\n        &:hover, &.active {\n          background-color: rgba(193, 193, 193, .3);\n\n          &.primary {\n            background-color: rgba(121, 231, 60, .3);\n          }\n\n          &.danger {\n            background-color: rgba(253, 181, 181, 0.3);\n          }\n        }\n      }\n    }\n\n    .extra {\n      font-size: 12px;\n      padding: 0 12px;\n      background-color: rgba(204, 204, 204, 0.18);\n      height: 32px;\n      line-height: 32px;\n    }\n  }\n\n  .footer {\n    text-align: right;\n    margin-top: 10px;\n    padding: 0 12px 12px;\n  }\n`\n","import React, {PureComponent} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {Button, Checkbox, message, Popover} from 'antd'\nimport SelectNodeFromTree from '../../components/SelectNodeFromTree'\nimport { getDataById } from '../../utils/common'\nimport { changeIsFreeze, changeDataMap } from '@action'\nimport { StyledConflict } from './styles'\n\nclass Conflict extends PureComponent {\n\n    static propTypes = {\n        splitChip: PropTypes.array,\n        allDataChip: PropTypes.array\n    }\n\n    state = {\n        isConflict: false, // 是否冲突\n        changeList: {\n            add: [], // 以 splitChip 为基准，新增列表\n            reduce: [], // 以 splitChip 为基准，减少列表\n            infoChange: [] // 同样的碎片，但是 name、title 之类的附加信息变了，记录数量即可\n        },\n        finishLoading: false,\n        isAddSaveAll: true, // 新增里，保留全部到根节点\n    }\n\n    componentDidMount() {\n        const { splitChip, allDataChip } = this.props\n        let pureId_split = splitChip.map(s => s.chipId)\n        let pureId_allDataId = allDataChip.map(s => s.chipId)\n        // splitChip 没有的，是新增的\n        const addList = allDataChip.filter(chip => !pureId_split.includes(chip.chipId))\n        let reduceList = []\n        let infoChangeList = []\n        // 遍历 splitChip, 如果 allDataChip 没有，那就是减少的\n        for (let chip of splitChip) {\n            if (!pureId_allDataId.includes(chip.chipId)) {\n                reduceList.push(chip)\n            } else {\n                let current = allDataChip.find(a => a.chipId === chip.chipId)\n                if (chip.chipData.name !== current.chipData.name || chip.chipData.title !== current.chipData.title) {\n                    infoChangeList.push({...current, id: chip.id})\n                }\n            }\n        }\n        // 全为0，没有冲突\n        if (addList.length === 0 && reduceList.length === 0 && infoChangeList.length === 0) {\n            this.setState({\n                isConflict: false\n            })\n        } else {\n            this.setState({\n                changeList: {\n                    add: addList,\n                    reduce: reduceList,\n                    infoChange: infoChangeList\n                },\n                isConflict: true\n            })\n            changeIsFreeze(true)\n        }\n    }\n    \n    changeStatus = (e) => {\n        const { changeList } = this.state\n        const { group, id, status } = e.currentTarget.dataset\n        const newList = changeList[group].slice()\n        newList.find(a => a.chipId === id).status = status\n        this.setState({\n            changeList: {\n                ...changeList,\n                [group]: newList\n            }\n        })\n    }\n\n    save = (id, nodeId) => {\n        const { changeList } = this.state\n        const newList = changeList.add.slice()\n        newList.find(a => a.chipId === id).status = nodeId\n        this.setState({\n            changeList: {\n                ...changeList,\n                add: newList\n            }\n        })\n    }\n\n    finish = () => {\n        this.setState({\n            finishLoading: true\n        })\n        const { changeList: { add, reduce, infoChange } } = this.state\n        const { dataMap } = this.props\n        const newDataMap = {...dataMap}\n        for (let a in add) {\n            // 新增-保留，新增-删除不用管\n            const item = add[a]\n            if (item.status && item.status !== 'delete') {\n                const node = getDataById(item.status, newDataMap)\n                node.config = {\n                    ...(node.config || {}),\n                    chip: [...((node.config && node.config.chip) || []), {\n                        chipType: item.chipType,\n                        chipId: item.chipId,\n                        chipData: item.chipData\n                    }]\n                }\n            }\n        }\n        for (let r in reduce) {\n            const item = reduce[r]\n            // 减少-删除，减少-保留不用管\n            if (item.status === 'delete') {\n                const node = getDataById(item.id, newDataMap)\n                const index = node.config.chip.findIndex(c => c.chipId === item.chipId)\n                node.config.chip.splice(index, 1)\n            }\n        }\n        for (let i in infoChange) {\n            // 修改\n            const item = infoChange[i]\n            // // 减少-删除，减少-保留不用管\n            const node = getDataById(item.id, newDataMap)\n            const targetChip = node.config.chip.find(c => c.chipId === item.chipId)\n            targetChip.chipData.title = item.chipData.title\n            targetChip.chipData.name = item.chipData.name\n        }\n        changeDataMap(newDataMap)\n        changeIsFreeze(false)\n        message.success('冲突解决成功')\n        this.setState({\n            finishLoading: false,\n            isConflict: false\n        })\n    }\n    \n    getStatusPercent = () => {\n        const { changeList: { add, reduce } } = this.state\n        const total = add.concat(reduce)\n        return total.filter(t => !!t.status).length / total.length\n    }\n\n    toggleIsAddSaveAll = (e) => {\n        const { checked } = e.target\n        if (checked) {\n\n        } else {\n\n        }\n    }\n\n    render() {\n        const { isConflict, changeList: { add, reduce, infoChange }, finishLoading, isAddSaveAll } = this.state\n\n        if (!isConflict) {\n            return null\n        }\n\n        const percent = this.getStatusPercent()\n\n        return (\n            <StyledConflict>\n                <div className=\"title\">检测到<span className=\"code\">config_split.js</span>和 config.js 中的<span className=\"code\">allData</span>存在碎片冲突：</div>\n                <div className=\"content\">\n                    {\n                        add.length > 0 &&\n                        <div className=\"addWp\">\n                            <div className=\"tipTitle\">\n                                <div>\n                                    <span className=\"sign add\">新增</span>\n                                    这些是 allData 里新增的，建议保留\n                                </div>\n                                <div className=\"saveAll\">\n                                    <Checkbox checked={isAddSaveAll} onChange={this.toggleIsAddSaveAll}>全部保留到根节点</Checkbox>\n                                </div>\n                            </div>\n                            {\n                                add.map((a, index) => {\n                                    return (\n                                        <div className=\"conflict\" key={index}>\n                                            {a.chipId} - {a.chipType} ({a.chipData.title})\n                                            {\n                                                a.status && a.status !== 'delete' &&\n                                                <div className=\"saveTip\">\n                                                    保留至：{getDataById(a.status).name}\n                                                </div>\n                                            }\n                                            <div>\n                                                <span className={`btn ${a.status === 'delete' ? 'active' : ''}`} data-group=\"add\" data-id={a.chipId} data-status=\"delete\" onClick={this.changeStatus}>删除</span>\n                                                <Popover\n                                                    placement=\"right\"\n                                                    content={\n                                                        <div style={{ width: '250px' }}>\n                                                            <div style={{ fontSize: '12px', marginBottom: '4px' }}>选择要存储信息的节点：</div>\n                                                            <SelectNodeFromTree height={300} value={a.status === 'delete' ? undefined : a.status} onChange={(nodeId) => this.save(a.chipId, nodeId)} />\n                                                        </div>}\n                                                    trigger={['click']}\n                                                >\n                                                    <span className={`btn primary ${(a.status && a.status !== 'delete') ? 'active' : ''}`} data-group=\"add\" data-id={a.chipId} data-status=\"save\">保留</span>\n                                                </Popover>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    }\n                    {\n                        reduce.length > 0 &&\n                        <div className=\"reduceWp\">\n                            <div className=\"tipTitle\">\n                                <span className=\"sign reduce\">减少</span>\n                                这些是 split_split.js 里有但是 allData 里没有的，大概率没用了\n                            </div>\n                            {\n                                reduce.map((a, index) => {\n                                    return (\n                                        <div className=\"conflict\" key={index}>\n                                            {a.chipId} - {a.chipType}\n                                            <div>\n                                                <span className={`btn ${a.status === 'save' ? 'active' : ''}`} data-group=\"reduce\" data-id={a.chipId} data-status=\"save\" onClick={this.changeStatus}>保留</span>\n                                                <span className={`btn danger ${a.status === 'delete' ? 'active' : ''}`} data-group=\"reduce\" data-id={a.chipId} data-status=\"delete\" onClick={this.changeStatus}>删除</span>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    }\n                    {\n                        infoChange.length > 0 &&\n                        <div className=\"extra\"><span className=\"sign other\">其他</span>还有 <strong>{infoChange.length}</strong> 个碎片的信息有改动，将以 allData 为准自动更新</div>\n                    }\n                </div>\n\n                <div className=\"footer\">\n                    <Button type=\"primary\" ghost={percent !== 1} shape=\"round\" loading={finishLoading} onClick={this.finish} disabled={percent !== 1}>\n                        确定\n                    </Button>\n                </div>\n            </StyledConflict>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { dataMap } = state;\n    return { dataMap }\n}\n\nexport default connect(mapStateToProps)(Conflict)\n","import { PureComponent } from 'react'\nimport * as PIXI from 'pixi.js'\nimport { connect } from 'react-redux'\nimport { changeDataMap } from '@action'\nimport { getDataById, hex2PixiColor, startChoose } from '../utils/common'\n\n\n/**\n * 本组件处理矩形的四个点，包括：\n * 1. 显示矩形顶点\n * 2. 根据画布 x、y、scale 调整\n * 3. 拖拽点修改矩形大小，还可以反向拖拽\n * */\nclass Point extends PureComponent {\n    state = {\n        pointGraphics: []\n    }\n\n    componentWillUnmount() {\n        const { app } = window\n        const { pointGraphics } = this.state\n        pointGraphics.forEach(p => app.stage.removeChild(p))\n    }\n\n    // 当前矩形变化，或者树的数据变了都会更新点位\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.activeId !== this.props.activeId || prevProps.dataMap !== this.props.dataMap) {\n            this.update()\n        }\n    }\n\n    // 点的事件，拖拽点修改矩形大小\n    handlePoint = (e, point, i) => {\n        if (e.data.button !== 0) { // 只响应鼠标左键\n            return\n        }\n        const { app } = window\n        const { mode, activeId, scale, dataMap } = this.props\n        // 在创建模式点击顶点，需要切换到选择模式\n        if (mode !== 'choose') {\n            startChoose()\n        }\n        const graphics = app.stage.children.find(c => c.name === activeId)\n        const data = getDataById(activeId, dataMap)\n        const points = this.getPoints()\n        let { x: startX, y: startY } = {...e.data.global}\n\n        point.on('pointermove', (e) => {\n            e.data.originalEvent.preventDefault()\n            const { x: endX, y: endY } = {...e.data.global}\n            const deltaX = endX - startX\n            const deltaY = endY - startY\n\n            // 新的点和对角点\n            const newPoint = { x: points[i].x + deltaX / scale, y: points[i].y + deltaY / scale }\n            const oppsitPoint = points[(i + 2) % 4]\n\n            // 两点确认矩形的宽高\n            const newWidth = Math.abs(newPoint.x - oppsitPoint.x)\n            const newHeight = Math.abs(newPoint.y - oppsitPoint.y)\n\n            let newX, newY\n            // 四个点里面，最小值的坐标为矩形的左上角，即矩形的 x、y\n            const minX = Math.min(points[i].x, points[(i+1)%4].x, points[(i+2)%4].x, points[(i+3)%4].x)\n            const maxX = Math.max(points[i].x, points[(i+1)%4].x, points[(i+2)%4].x, points[(i+3)%4].x)\n            const minY = Math.min(points[i].y, points[(i+1)%4].y, points[(i+2)%4].y, points[(i+3)%4].y)\n            const maxY = Math.max(points[i].y, points[(i+1)%4].y, points[(i+2)%4].y, points[(i+3)%4].y)\n\n            newX = Math.min(newPoint.x, points[(i+1)%4].x, points[(i+2)%4].x, points[(i+3)%4].x)\n            newY = Math.min(newPoint.y, points[(i+1)%4].y, points[(i+2)%4].y, points[(i+3)%4].y)\n\n            if (points[i].x === minX) {\n                if (newPoint.x > maxX) {\n                    newX = maxX\n                } else {\n                    newX = newPoint.x\n                }\n            }\n\n            if (points[i].y === minY) {\n                if (newPoint.y > maxY) {\n                    newY = maxY\n                } else {\n                    newY = newPoint.y\n                }\n            }\n\n            data.x = newX\n            data.y = newY\n            data.width = newWidth\n            data.height = newHeight\n\n            changeDataMap(dataMap)\n\n            graphics.clear()\n            graphics.x = newX\n            graphics.y = newY\n            const pixiColor = hex2PixiColor(data.color)\n            graphics.lineStyle(4, pixiColor, 1)\n            graphics.beginFill(pixiColor, 0.2)\n            graphics.drawRect(\n                0,\n                0,\n                newWidth,\n                newHeight\n            )\n        })\n\n        point.on('pointerup', () => {\n            point\n                .off('pointermove')\n                .off('pointerup')\n                .off('pointerupoutside')\n        })\n        point.on('pointerupoutside', () => {\n            point\n                .off('pointermove')\n                .off('pointerup')\n                .off('pointerupoutside')\n        })\n    }\n\n    update = () => {\n        const { app } = window\n        const { pointGraphics } = this.state\n        const points = this.getPoints()\n\n        // 有坐标，说明是更新点位或者初始化\n        if (points.length > 0) {\n            let arr = []\n\n            for (let i=0; i<points.length; i++) {\n                let point = pointGraphics[i]\n                // 没有 graphics，需要初始化\n                if (!point) {\n                    point = new PIXI.Graphics()\n                    point.interactive = true\n                    point.name = `point`\n                    app.stage.addChild(point)\n                    arr.push(point)\n                    point.cursor = i % 2 === 0 ? 'nwse-resize' : 'nesw-resize'\n                    point.on('pointerdown', (e) => this.handlePoint(e, point, i))\n                }\n                // 有 graphics，更新点位，需要重新绘制\n                point.x = points[i].x\n                point.y = points[i].y\n                point.clear()\n                const { activeId, dataMap } = this.props\n                const activeGraphics = getDataById(activeId, dataMap)\n                const color = activeGraphics.color ? hex2PixiColor(activeGraphics.color) : '0x000000'\n                point.lineStyle(2, color, 1)\n                point.beginFill( 0xf8f8f8, 1)\n                point.drawCircle(0, 0, 5)\n                point.endFill()\n                point.zIndex = 9999\n            }\n            if (arr.length > 0) {\n                this.setState({\n                    pointGraphics: arr\n                })\n            }\n        } else {\n            /**\n             * 无坐标，说明图形被删除了\n             */\n            if (pointGraphics[0]) {\n                for (let i=0; i<4; i++) {\n                    pointGraphics[i].clear()\n                }\n            }\n        }\n    }\n\n    // 获取当前矩形的顶点\n    getPoints = () => {\n        const { activeId, dataMap } = this.props\n        const data = getDataById(activeId, dataMap)\n        if (data) {\n            const { x, y, width, height } = data\n            return [\n                { x, y },\n                { x: x + width, y },\n                { x: x + width, y: y + height },\n                { x, y: y + height }\n            ]\n        } else {\n            return []\n        }\n    }\n\n    render() {\n        return null\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    const { mode, scale, activeId,  dataMap } = state;\n    return { mode, scale, activeId, dataMap: {...dataMap} }\n}\n\nexport default connect(mapStateToProps)(Point)\n","import styled from \"styled-components\";\n\nexport const StyledApp = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n\n  .main {\n    position: relative;\n    flex: 1;\n\n    #app {\n      position: relative;\n      height: 100%;\n    }\n\n    .data {\n      position: absolute;\n      background-color: #ffffff;\n      z-index: 3;\n      right: 0;\n      top: 0;\n      height: 100%;\n    }\n\n    .freeze {\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.1);\n      cursor: not-allowed;\n      z-index: 6;\n    }\n  }\n`\n","import React, { PureComponent } from 'react'\nimport * as PIXI from 'pixi.js'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport { message, notification } from 'antd'\nimport ToolBar from './ToolBar'\nimport Setting from './Setting'\nimport Conflict from './Other/Conflict'\nimport Point from './Other/Point'\nimport { changeEnv, changeParentId, deleteData, changeDataMap, changeActiveId } from '@action'\nimport { getChipArrayFromDataMap, getDataById, resize, startChoose, transferPaste } from './utils/common'\nimport { getAllChildren } from './utils/pixiUtils'\nimport { StyledApp } from './styles'\n\nlet deleteTimer = null\n\nclass App extends PureComponent{\n    state = {\n        isMoveMode: false, // 是否为移动模式，移动模式代表可以拖拽画布\n        isDeleting: false, // 删除节点的timer\n        isConflictReady: false, // 数据准备完毕之后，再开启解冲突\n        splitChip: [], // 个性化来的，config_split.js 里带的碎片信息，需要扁平化\n        allDataChip: [] // 个性化来的，allData 里的碎片信息，需要格式化为和 splitChip 相同的结构\n    }\n\n    componentDidMount() {\n        const { dataMap } = this.props\n        PIXI.utils.skipHello() // 跳过 pixi 的欢迎语\n        const appElement = document.getElementById('app')\n        const appWidth = window.innerWidth\n        const appHeight = window.innerHeight - 48 // 减去 toolbar 的高度\n        const app = new PIXI.Application({\n            width: appWidth,\n            height: appHeight,\n            antialias: true, // 抗锯齿\n            transparent: true, // 背景透明\n            resolution: 1, // 分辨率，使用不同分辨率和像素密度的显示更容易\n        })\n        app.stage.interactive = true // 舞台可点击\n        app.stage.hitArea = new PIXI.Rectangle(0, 0, appWidth, appHeight) // 点击区域为跟着屏幕大小的矩形\n\n        // canvas 要覆盖住整个image\n        app.renderer.view.style.position = 'absolute';\n        app.renderer.view.style.top = '0';\n        app.renderer.view.style.left = '0';\n        app.renderer.view.style.zIndex = '3';\n\n        // 添加图片\n        if (dataMap.bc.image) {\n            const texture = PIXI.Texture.from(dataMap.bc.image)\n            const image = new PIXI.Sprite(texture);\n            image.name = 'bc'\n            image.zIndex = -1\n            app.stage.addChild(image)\n        }\n\n        /**\n         * 临时写死的默认图\n         * */\n        const texture = PIXI.Texture.from('https://i1.letvimg.com/lc14_lemf/202311/28/10/15/Snipaste_2023-11-28_10-14-36.png')\n        const image = new PIXI.Sprite(texture);\n        image.name = 'bc'\n        image.zIndex = -1\n        app.stage.addChild(image)\n\n\n        app.stage.sortableChildren = true\n        appElement.appendChild(app.view);\n        window.app = app\n        window.addEventListener('message', this.receiveMessage, false)\n        document.addEventListener('keydown', this.keyEvent, false)\n        document.addEventListener('wheel', resize, false)\n        window.onbeforeunload = (e) => {\n            if (this.props.env.indexOf('custom') === 0 || this.props.dataMap.children.length > 0) {\n                e.returnValue = false\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        const { app } = window\n        document.removeEventListener('keydown', this.keyEvent, false)\n        document.removeEventListener('wheel', resize, false)\n        app.stage.removeAllListeners()\n    }\n\n    receiveMessage = (e) => {\n        if (window.location.origin === e.origin) {\n            return\n        }\n        const { type, isSplitEmpty, data } = e.data\n        switch (type) {\n            case 'custom': {\n                // 已收到消息，发送反馈\n                window.opener.postMessage({ type: 'received' }, '*')\n                if (!isSplitEmpty) {\n                    transferPaste(data.splitConfig)\n                    changeEnv('custom')\n                } else {\n                    changeEnv('custom_new')\n                }\n                this.compareChip(data.splitConfig, data.allData)\n                setTimeout(() => {\n                    const newDataMap = {...this.props.dataMap}\n                    newDataMap.name = data.splitConfig.name || 'newProject'\n                    newDataMap.cname = data.path\n                    changeDataMap(newDataMap)\n                    changeActiveId('0')\n                })\n                console.log('成功', e)\n                break;\n            }\n            default: break;\n        }\n    }\n\n    keyEvent = (e) => {\n        const { isMoveMode, isDeleting } = this.state\n        const { app } = window\n        const { scale, activeId, parentId, dataMap } = this.props\n        const ignoreTag = ['input', 'textarea', 'select', 'button']\n        if (ignoreTag.includes(e.target.tagName.toLowerCase())) {\n            return\n        }\n        // Delete || Backspace 并且选中了一个图形\n        if ((e.keyCode === 46 || e.keyCode === 8) && activeId !== '') {\n            const active = app.stage.children.find(a => activeId === a.name)\n            const newDataMap = {...dataMap}\n            const activeNode = getDataById(activeId, newDataMap)\n            const isWithTrack = activeNode.config && activeNode.config.track && activeNode.config.track.trackId\n            if (isDeleting || !isWithTrack) {\n                app.stage.removeChild(active)\n                const children = getAllChildren(active)\n                for (let i=0; i<children.length; i++) {\n                    app.stage.removeChild(children[i])\n                }\n                if (activeId === parentId) {\n                    changeParentId('')\n                }\n                deleteData(activeId)\n                startChoose()\n                if (isDeleting) {\n                    axios.post('http://test0.platform.ifengidc.com/platform/server/trackApi/deleteTrack', {\n                        id: activeNode.config.track.trackId\n                    }).then(res => {\n                        if (res.data.code === 0) {\n                            activeNode.config = {\n                                ...activeNode.config,\n                                track: {\n                                    ...(activeNode.config ? activeNode.config.track : {}),\n                                    trackId: ''\n                                }\n                            }\n                            changeDataMap(newDataMap)\n                            this.setState({ isDeleting: false })\n                            message.success('删除成功')\n                            notification.destroy('delete')\n                            clearTimeout(deleteTimer)\n                            deleteTimer = null\n                        }\n                    })\n                }\n                return\n            }\n            if (isWithTrack && !isDeleting) {\n                this.setState({ isDeleting: true })\n                deleteTimer = setTimeout(() => {\n                    this.setState({ isDeleting: false })\n                }, 5000)\n                notification.warning({\n                    key: 'delete',\n                    message: <h5>该节点带有埋点，删除节点会同时删除埋点信息</h5>,\n                    description:\n                        <div style={{fontSize: '12px'}}>\n                            <strong>5</strong> 秒内再次点击 <span className=\"key\">Delete</span> 或者 <span\n                            className=\"key\">Backspace</span> 立即删除\n                            <div className=\"progress\" style={{marginTop: '4px'}}/>\n                        </div>\n                    ,\n                    duration: 5,\n                    style: {\n                        width: '400px'\n                    },\n                    onClose: () => this.setState({ isDeleting: false })\n                })\n            }\n        }\n\n        // 空格 并且没有在移动模式\n        if(e.keyCode === 32 && !isMoveMode) {\n            e.stopPropagation()\n            startChoose()\n            app.stage.children.filter(c => c.name !== 'bc').forEach(c => c.interactive = false)\n            app.stage.cursor = 'grab'\n            this.setState({ // 改为选择模式\n                isMoveMode: true,\n            })\n            app.stage.removeAllListeners() // 先清理事件\n            // 注册鼠标按下事件，记录起点\n            app.stage.on('mousedown', (e) => {\n                app.stage.cursor = 'grabbing'\n                let { x: oldX, y: oldY } = {...e.data.global}\n\n                // 移动时记录终点，更新画布的坐标，修改画布点击区域位置，然后更新起点\n                const handleStageMove = (e) => {\n                    const { x: newX, y: newY } = {...e.data.global}\n                    app.stage.x += newX - oldX\n                    app.stage.y += newY - oldY\n                    app.stage.hitArea.x -= (newX - oldX) / scale\n                    app.stage.hitArea.y -= (newY - oldY) / scale\n                    oldX = newX\n                    oldY = newY\n                }\n\n                // 抬起时取消移动，修改光标，清理事件\n                const cancelStageMove = () => {\n                    this.setState({\n                        isMoveMode: false\n                    })\n                    app.stage.cursor = 'default'\n                    app.stage.removeAllListeners()\n                }\n\n                // 注册鼠标移动和抬起事件\n                app.stage.on('mousemove', handleStageMove)\n                app.stage.on('mouseup', cancelStageMove)\n             })\n            // 注册键盘抬起事件，抬起了事件就结束了\n            document.addEventListener('keyup', this.cancelMove)\n        }\n    }\n\n    cancelMove = () => {\n        const { app } = window\n        app.stage.cursor = 'default'\n        this.setState({\n            isMoveMode: false\n        })\n        app.stage.children.filter(c => c.name !== 'bc').forEach(c => c.interactive = true)\n        app.stage.removeAllListeners()\n        document.removeEventListener('keyup', this.cancelMove)\n    }\n\n    compareChip = (splitConfig, allData) => {\n        const splitChip = getChipArrayFromDataMap(splitConfig)\n        let allDataChip = []\n        const AvailableChipType = ['getStaticFragment', 'getRecommendFragment', 'getStructureFragment']\n        const ChipTypeMap = {\n            getStaticFragment: 'static',\n            getRecommendFragment: 'recommend',\n            getStructureFragment: 'struct'\n        }\n        allData.transferV3.forEach(data => {\n            if (AvailableChipType.includes(data[2])) {\n                allDataChip.push({\n                    chipId: data[3],\n                    chipType: ChipTypeMap[data[2]],\n                    chipData: {\n                        name: data[0].split(':')[0],\n                        title: data[0].split(':')[1] || data[0].split(':')[0]\n                    }\n                })\n            }\n        })\n        this.setState({\n            splitChip,\n            allDataChip,\n            isConflictReady: true\n        })\n    }\n\n    render() {\n        const { isConflictReady, splitChip, allDataChip } = this.state\n        const { isFreeze } = this.props\n        return (\n            <StyledApp>\n                <ToolBar />\n                <div className=\"main\">\n                    <div className=\"operate\" id=\"app\">\n                        <Point />\n                    </div>\n                    <div className=\"data\">\n                        <Setting />\n                    </div>\n                    {\n                        isConflictReady &&\n                        <Conflict splitChip={splitChip} allDataChip={allDataChip} />\n                    }\n                    {\n                        isFreeze &&\n                        <div className=\"freeze\" />\n                    }\n                </div>\n            </StyledApp>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { env, mode, scale, activeId, parentId, dataMap, isFreeze } = state;\n    return { env, mode, scale, activeId, parentId, dataMap, isFreeze }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './views/App'\nimport store from \"./store\"\nimport './index.less'\nimport 'antd/dist/antd.less'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}