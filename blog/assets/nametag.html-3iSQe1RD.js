import{_ as i,r as l,o as p,c as r,e as s,w as e,b as t,a as n,d as _}from"./app-hBvoMyXQ.js";const m={},h=n("h1",{id:"多彩标签-nametag",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#多彩标签-nametag","aria-hidden":"true"},"#"),t(" 多彩标签 - NameTag")],-1),k=n("p",null,[t("适用于人物姓名的标签，每一个人都分配一种颜色，鼠标 hover 时，同一人所在的标签都会高亮，强调是同一人。"),n("br"),t(" 比如以下场景：")],-1),g=n("thead",null,[n("tr",null,[n("th",null,"标题"),n("th",null,"内容"),n("th",null,"发布时间"),n("th",null,"发布人")])],-1),f=n("td",null,"宣州谢朓楼饯别校书叔云",-1),v=n("td",null,"弃我去者，昨日之日不可留； 乱我心者，今日之日多烦忧。",-1),b=n("td",null,"2023.1.17",-1),N=n("td",null,"归去来兮辞",-1),T=n("td",null,"悟已往之不谏，知来者之可追注。",-1),y=n("td",null,"2023.1.17",-1),x=n("td",null,"滕王阁序",-1),C=n("td",null,"豫章故郡，洪都新府。星分翼轸，地接衡庐。",-1),G=n("td",null,"2023.1.17",-1),V=n("td",null,"蜀道难",-1),w=n("td",null,"飞湍瀑流争喧豗，砯崖转石万壑雷。",-1),B=n("td",null,"2023.1.17",-1),I=n("ul",null,[n("li",null,"易于分辨不同的人物"),n("li",null,"鼠标悬浮时，相同的人物标签会一起高亮，使所在的区域更加醒目"),n("li",null,"美观")],-1),P=_("<p>每当有一个新的人物出现，都会更新 <code>localStorage</code> 里的人物列表。<br> 更新时，会通过 <code>RandomColor</code> 添加一个<strong>随机暗色</strong>，和人物名称一起 push 到列表里。<br> 如果人物在列表里有，就获取储存的色值，并放到 dom 的 css 里。</p><hr><p>相同人物的 <code>class</code> 也一样，class 的值为 <code>people-${children}</code>，因此，hover 的时候，获取有这个 class 的 dom 列表，循环修改 css 即可。</p>",3),S=n("code",null,"Tag",-1),j=n("em",null,"(此处只是静态的样式演示)",-1),q=n("div",{class:"language-vue line-numbers-mode","data-ext":"vue"},[n("pre",{class:"language-vue"},[n("code",null,[n("span",{class:"token comment"},"<!--基本使用-->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("NameTag")]),n("span",{class:"token punctuation"},">")]),t("张三"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("NameTag")]),n("span",{class:"token punctuation"},">")]),t(`

`),n("span",{class:"token comment"},"<!--可以传样式-->"),t(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),t("NameTag")]),t(),n("span",{class:"token special-attr"},[n("span",{class:"token attr-name"},"style"),n("span",{class:"token attr-value"},[n("span",{class:"token punctuation attr-equals"},"="),n("span",{class:"token punctuation"},'"'),n("span",{class:"token value css language-css"},[n("span",{class:"token property"},"font-style"),n("span",{class:"token punctuation"},":"),t(" italic"),n("span",{class:"token punctuation"},";")]),n("span",{class:"token punctuation"},'"')])]),n("span",{class:"token punctuation"},">")]),t("张三"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),t("NameTag")]),n("span",{class:"token punctuation"},">")]),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=n("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[n("pre",{class:"language-typescript"},[n("code",null,[n("span",{class:"token keyword"},"interface"),t(),n("span",{class:"token class-name"},"Outlink"),t(),n("span",{class:"token punctuation"},"{"),t(`
    children`),n("span",{class:"token operator"},":"),t(),n("span",{class:"token builtin"},"string"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 标签文本"),t(`
    style`),n("span",{class:"token operator"},":"),t(" object"),n("span",{class:"token punctuation"},";"),t(),n("span",{class:"token comment"},"// 标签的自定义 css 值，透传"),t(`
`),n("span",{class:"token punctuation"},"}"),t(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1);function O(R,$){const a=l("NameTag"),o=l("PartTitle"),c=l("a-tag"),u=l("CodeGroupItem"),d=l("CodeGroup");return p(),r("div",null,[h,s(a,null,{default:e(()=>[t("张三")]),_:1}),s(a,null,{default:e(()=>[t("陶渊明")]),_:1}),s(a,null,{default:e(()=>[t("李四")]),_:1}),s(a,null,{default:e(()=>[t("王二")]),_:1}),k,n("table",null,[g,n("tbody",null,[n("tr",null,[f,v,b,n("td",null,[s(a,null,{default:e(()=>[t("李白")]),_:1})])]),n("tr",null,[N,T,y,n("td",null,[s(a,null,{default:e(()=>[t("陶渊明")]),_:1})])]),n("tr",null,[x,C,G,n("td",null,[s(a,null,{default:e(()=>[t("王勃")]),_:1})])]),n("tr",null,[V,w,B,n("td",null,[s(a,null,{default:e(()=>[t("李白")]),_:1})])])])]),s(o,{type:"good"}),I,s(o,{type:"code"}),P,n("p",null,[t("原理不变，样式上就可以随意了。比如可以直接用 antd 的 "),S,t(" 组件："),s(c,{color:"gold"},{default:e(()=>[t("张三")]),_:1}),s(c,{color:"green"},{default:e(()=>[t("李四")]),_:1}),t(),j]),s(d,null,{default:e(()=>[s(u,{title:"用法"},{default:e(()=>[q]),_:1}),s(u,{title:"props"},{default:e(()=>[E]),_:1})]),_:1})])}const A=i(m,[["render",O],["__file","nametag.html.vue"]]);export{A as default};
