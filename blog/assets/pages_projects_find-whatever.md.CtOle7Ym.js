import{_ as s,c as n,f as t,b as e,ao as o,o as a}from"./chunks/framework.IeBF7J3I.js";const d="/blog/assets/findwhatever_icon.CXra3F3r.png",i="/blog/assets/findwhatever_overview.FZIyqoeD.png",r="/blog/assets/findwhatever_demo1.CJR1g9lV.mov",l="/blog/assets/findwhatever_demo2.C7TNvDpf.mov",_="/blog/assets/findwhatever_demo3.BBfswz9P.png",X=JSON.parse('{"title":"Find whatever","description":"","frontmatter":{},"headers":[],"relativePath":"pages/projects/find-whatever.md","filePath":"pages/projects/find-whatever.md","lastUpdated":1719231919000}'),c={name:"pages/projects/find-whatever.md"},h=e("h1",{id:"find-whatever",tabindex:"-1"},[t("Find whatever "),e("a",{class:"header-anchor",href:"#find-whatever","aria-label":'Permalink to "Find whatever"'},"​")],-1),b=e("p",null,"日常使用浏览器的时候，经常会用到查找功能，但是浏览器的查找工具实在太简陋了，只有一个简单的大小写不敏感的查找，不支持匹配单词和正则，而且在切换 tabs、翻页的时候也不能及时更新，很不好用，于是就自己写了个。",-1),f=e("h2",{id:"功能概览",tabindex:"-1"},[t("功能概览 "),e("a",{class:"header-anchor",href:"#功能概览","aria-label":'Permalink to "功能概览"'},"​")],-1),p=e("p",null,[t("使用快捷键或者点按工具栏的图标"),e("img",{style:{display:"inline-block",width:"18px",margin:"0 4px"},src:d}),t(`后，即可唤出查找面板。
`),e("img",{src:i,alt:""}),t(`
键入文字后即可自动查找。`)],-1),m=e("h3",{id:"大小写敏感",tabindex:"-1"},[t("大小写敏感 "),e("a",{class:"header-anchor",href:"#大小写敏感","aria-label":'Permalink to "大小写敏感"'},"​")],-1),g=e("p",null,[t("点击文本框右侧的"),e("code",null,"Cc"),t("来开启或关闭这个功能。"),e("strong",null,"关闭"),t("后，匹配结果将忽略单词的大小写。")],-1),v=o('<table tabindex="0"><thead><tr><th>原始文本</th> <th>查找词</th> <th>开启 <code>Cc</code> 的结果</th> <th>关闭<code>Cc</code> 的结果</th></tr></thead> <tbody><tr><td>I find the Finder.</td> <td>find</td> <td>只有 <strong>find</strong></td> <td><strong>find</strong> 和 <strong>Find</strong></td></tr></tbody></table>',1),u=e("div",{class:"tip"},"这个功能本质上是正则表达式的 g 标志。",-1),T=e("h3",{id:"匹配单词",tabindex:"-1"},[t("匹配单词 "),e("a",{class:"header-anchor",href:"#匹配单词","aria-label":'Permalink to "匹配单词"'},"​")],-1),w=e("p",null,[t("点击文本框右侧的"),e("code",null,"W"),t("来开启或关闭这个功能。"),e("strong",null,"开启"),t("后，查找结果将只匹配完整的单词。")],-1),x=o('<table tabindex="0"><thead><tr><th>原始文本</th> <th>查找词</th> <th>开启 <code>W</code> 的结果</th> <th>关闭<code>W</code> 的结果</th></tr></thead> <tbody><tr><td>I find the Finder.</td> <td>find</td> <td>只有 <strong>find</strong>，因为这是个完整的单词</td> <td><strong>find</strong> 和 <strong>Find</strong></td></tr></tbody></table>',1),P=e("div",{class:"tip"},"这个功能本质上是正则表达式的 \\b。",-1),k=e("h3",{id:"使用正则表达式",tabindex:"-1"},[t("使用正则表达式 "),e("a",{class:"header-anchor",href:"#使用正则表达式","aria-label":'Permalink to "使用正则表达式"'},"​")],-1),D=e("p",null,[t("这才是查找文本的完整形态！"),e("br"),t(`
点击文本框右侧的`),e("code",null,".*"),t("来开启或关闭这个功能。"),e("strong",null,"开启"),t("后，输入的任何字符都会被当做正则表达式的一部分。")],-1),S=o('<table tabindex="0"><thead><tr><th>原始文本</th> <th>查找词</th> <th>开启 <code>.*</code> 的结果</th> <th>关闭<code>.*</code> 的结果</th></tr></thead> <tbody><tr><td>I find the Finder.</td> <td>find\\w+</td> <td>只有 <strong>Finder</strong>，因为find后面需要有字母</td> <td>搜不到，因为没有\\w+这三个字符</td></tr></tbody></table>',1),y=e("h3",{id:"实时-dom-监测",tabindex:"-1"},[t("实时 DOM 监测 "),e("a",{class:"header-anchor",href:"#实时-dom-监测","aria-label":'Permalink to "实时 DOM 监测"'},"​")],-1),C=e("p",null,[t("本插件最大的亮点。"),e("br"),t(`
使用原生的查找工具时，如果要查找的内容分布在不同的 tabs（比如每个学期的数学得分）时，每次切换 tabs，都需要手动重新搜索，浏览体验大打折扣。`),e("br"),t(`
本插件可以解决这个问题！点击文本框右侧的图标`),e("img",{style:{display:"inline-block",width:"18px",margin:"0 4px",filter:"grayScale(1)"},src:d}),t(" 来开启或关闭这个功能，"),e("strong",null,"开启"),t("后，监测到 DOM 变化时，将自动重新查找。"),e("br"),t(`
我们来看几个例子：`)],-1),F=e("div",{class:"videoTitle"},"- 切换 tabs",-1),I=e("video",{controls:"",src:r,title:"123"},null,-1),V=e("div",{class:"videoTitle"},"- Tooltip",-1),A=e("video",{controls:"",src:l,title:"123"},null,-1),N=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"注意"),t(),e("p",null,"我把这个功能做成了一个开关，而不是一个常驻的功能，是因为考虑到这几点："),t(),e("ol",null,[e("li",null,"目前并没有做增量的 DOM 变化监测，每次变化后都会重新循环所有 DOM 节点，这会可能会引起一些性能问题；"),t(),e("li",null,[t("考虑这个场景：有个页面往下滚动的时候会自动隐藏 header 部分，同时下面会出来一些新的内容。查找完毕后如果点击“下一个”按钮，滚动条会自动定位到第 2 条结果，而这会引起 DOM 变化，于是又重新搜索了一次，而这又导致了搜索结果和当前下标重置了，因此又回到了初始状态。"),e("br"),t(`
这种情况不适合实时监听，可以临时关闭，等 header 已经是隐藏状态了再打开。`)])])],-1),O=e("h3",{id:"多-iframe-查找",tabindex:"-1"},[t("多 iframe 查找 "),e("a",{class:"header-anchor",href:"#多-iframe-查找","aria-label":'Permalink to "多 iframe 查找"'},"​")],-1),M=e("p",null,[t("插件基于 JavaScript，并没有“获取当前屏幕所有文本”这种功能，尤其是在有 iframe 的情况下，如果不是同一个源，获取其 DOM 都是做不到的事。"),e("br"),t(`
本插件的方法是，给每个 frame 注入一段脚本，当主页面查找时，他们跟着一并查找，并将结果记录在各自的 window 里。监测到下标定位到自己的范围内，就开始高亮对应的节点。`)],-1),B=e("div",{class:"videoTitle"},"- 这个页面里有 3 个 iframe",-1),E=e("p",null,[e("img",{src:_,alt:""})],-1);function R(W,$,j,J,q,z){return a(),n("div",null,[h,t(),b,t(),f,t(),p,t(),m,t(),g,t(),v,t(),u,t(),T,t(),w,t(),x,t(),P,t(),k,t(),D,t(),S,t(),y,t(),C,t(),F,t(),I,t(),V,t(),A,t(),N,t(),O,t(),M,t(),B,t(),E])}const Z=s(c,[["render",R]]);export{X as __pageData,Z as default};
