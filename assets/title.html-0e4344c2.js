import{_ as e,M as t,p as o,q as p,N as l,V as i,t as n,R as s,a1 as c}from"./framework-125c10c9.js";const r="/assets/title-8117fe77.png",d="/assets/title2-8ab087d5.png",m={},k=s("h1",{id:"标题-title",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#标题-title","aria-hidden":"true"},"#"),n(" 标题 - title")],-1),u=c('<p>常见于各个模块的顶部。<br><img src="'+r+'" alt=""></p><p>该组件的全形态如图所示：<br><img src="'+d+`" alt=""></p><p>包含：</p><ul><li>背景图</li><li>标题文本</li><li>标题文本前的图标</li><li>附加文本</li><li>附加文本前的图标</li><li>附加文本跳转链接</li></ul><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> props</h2><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">TitleProps</span> <span class="token punctuation">{</span>
    style<span class="token operator">?</span><span class="token operator">:</span> object <span class="token comment">// 容器样式</span>

    height<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token comment">// 组件高度</span>
    image<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 背景图</span>

    text<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 文本</span>
    textStyle<span class="token operator">?</span><span class="token operator">:</span> object <span class="token comment">// 文本样式</span>
    isTextHasIcon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">// 文本前方是否有图片</span>
    textIcon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 文本前方的图片</span>
    textAlign<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 文本位置</span>

    isHasAddonAfter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">// 是否添加额外的元素</span>
    isHasAddonAfterIcon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token comment">// 额外元素是否有图片</span>
    addonAfterIcon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 额外元素的图片</span>
    addonAfterText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 额外元素的文本</span>
    addonAfterTextStyle<span class="token operator">?</span><span class="token operator">:</span> object <span class="token comment">// 额外文本的样式</span>
    addAfterHref<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 额外元素的跳转链接</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的是，有些 props 依赖于其他 props，比如 <code>textIcon</code> 只有在 <code>isTextHasIcon</code> 为<strong>true</strong>时才会显示。</p>`,7);function b(v,_){const a=t("a-tag");return o(),p("div",null,[k,l(a,{color:"blue"},{default:i(()=>[n("业务组件")]),_:1}),u])}const h=e(m,[["render",b],["__file","title.html.vue"]]);export{h as default};
